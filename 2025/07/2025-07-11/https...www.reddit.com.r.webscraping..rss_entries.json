[
    {
        "age": null,
        "album": "",
        "author": "/u/Agitated_Issue_1410",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-11T20:04:35.844783+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-11T19:24:29+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;m working on a Python script that monitors the stock of a product and automatically adds it to the cart and checks out once it&#39;s available. I&#39;m using <code>requests</code> and <code>BeautifulSoup</code>, and so far I&#39;ve managed to handle everything up to the point of adding the item to the cart and navigating to the checkout page.</p> <p>However, I&#39;m now stuck at the payment step. The site is Shopify-based and uses authenticity tokens, session IDs, and other dynamic values during the payment process. It seems like I can&#39;t just replicate this step using <code>requests</code>, since these values are tied to the frontend session and probably rely on JavaScript execution.</p> <p>My question is: how should I proceed from here if I want to complete the checkout process, including entering payment details like credit card information?</p> <p>Would switching to a browser automation tool like <strong>Playwright</strong> (or Selenium) ",
        "id": 3144124,
        "language": "en",
        "link": "https://www.reddit.com/r/webscraping/comments/1lxfwg7/shopify_auto_checkout_in_python_dealing_with",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 467,
        "source_url": "https://www.reddit.com/r/webscraping/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Shopify Auto Checkout in Python | Dealing with Tokens & Sessions",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/UnderstandingReal694",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-11T12:29:39.356657+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-11T12:02:21+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi everyone! \ud83d\udc4b</p> <p>I\u2019m just starting my journey to learn web scraping and would really appreciate your advice and recommendations.</p> <p><strong>What I\u2019m looking for:</strong></p> <ul> <li>Free resources (tutorials, courses, books, or videos) that helped you learn</li> <li>Essential tools or libraries I should focus on (e.g., Python libraries, browser extensions, etc.)</li> <li>Best practices and common pitfalls to avoid</li> </ul> <p><strong>Why I want to learn:</strong><br/> I want to collect real-time data for my own projects and practice data analysis. I\u2019m planning to build a career as an analyst, so I know mastering web scraping will be a big advantage.</p> <p><strong>Extra help:</strong><br/> If you have any beginner-friendly project ideas or advice for handling tricky sites (like dealing with CAPTCHAs, anti-bot measures, or legal considerations), I\u2019d love to hear your thoughts!</p> <p>Thanks so much for taking the time to share your experie",
        "id": 3140416,
        "language": "en",
        "link": "https://www.reddit.com/r/webscraping/comments/1lx52k6/best_resources_tools_and_tips_for_learning_web",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 467,
        "source_url": "https://www.reddit.com/r/webscraping/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Best Resources, Tools, and Tips for Learning Web Scraping?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Slow_Yesterday_6407",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-11T08:09:47.049085+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-11T07:50:49+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>What are some alternatives ways to scrape a websites businesses if they don\u2019t have a public directory ? </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Slow_Yesterday_6407\"> /u/Slow_Yesterday_6407 </a> <br/> <span><a href=\"https://www.reddit.com/r/webscraping/comments/1lx10e4/alternative_scraping_methods/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/webscraping/comments/1lx10e4/alternative_scraping_methods/\">[comments]</a></span>",
        "id": 3138761,
        "language": "en",
        "link": "https://www.reddit.com/r/webscraping/comments/1lx10e4/alternative_scraping_methods",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 467,
        "source_url": "https://www.reddit.com/r/webscraping/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Alternative scraping methods.",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/cammy21",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-11T08:09:47.253769+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-11T07:14:45+00:00",
        "description": "<table> <tr><td> <a href=\"https://www.reddit.com/r/webscraping/comments/1lx0gyp/universal_web_scraper_built_with_n8n_no_code_just/\"> <img src=\"https://b.thumbs.redditmedia.com/BpsGlocRq4T_x6rLszskH7rXtViznEatPs580RiDjMA.jpg\" alt=\"Universal Web Scraper Built with n8n \u2013 No Code, Just Data\" title=\"Universal Web Scraper Built with n8n \u2013 No Code, Just Data\" /> </a> </td><td> <!-- SC_OFF --><div class=\"md\"><p>Just built a universal <strong>web scraping API</strong> that turns any website into clean, structured data \u2014 all powered by <strong>n8n</strong>, with zero external dependencies.</p> <p>If you\u2019ve ever tried to:</p> <ul> <li>Extract SEO data from competitor websites</li> <li>Monitor content updates across multiple domains</li> <li><p>Collect clean text/data from messy HTML \u2026you know the pain of manual copy-paste or unreliable scrapers.</p> <p>This solves it with a <strong>single automated n8n workflow</strong> that creates a <strong>production-ready REST API</strong>.</p></li> </ul> <p",
        "id": 3138762,
        "language": "en",
        "link": "https://www.reddit.com/r/webscraping/comments/1lx0gyp/universal_web_scraper_built_with_n8n_no_code_just",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 467,
        "source_url": "https://www.reddit.com/r/webscraping/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": "https://b.thumbs.redditmedia.com/BpsGlocRq4T_x6rLszskH7rXtViznEatPs580RiDjMA.jpg",
        "title": "Universal Web Scraper Built with n8n \u2013 No Code, Just Data",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Mythicspecter",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-11T01:37:58.820593+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-11T00:35:47+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Trying to log in to a site protected by Cloudflare using Python (no browser). I\u2019m sending a POST request with username and password, but I don\u2019t get any cookies back \u2014 no cf_clearance, no session, nothing.</p> <p>Sometimes it returns base64 that decodes into a YouTube page or random HTML.</p> <p>Tried setting headers, using cloudscraper and tls-client, still stuck.</p> <p>Do I need to hit the login page with a GET first or something? Anyone done this fully script-only?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Mythicspecter\"> /u/Mythicspecter </a> <br/> <span><a href=\"https://www.reddit.com/r/webscraping/comments/1lwt2qz/cant_log_in_with_python_script_on_cloudflare_site/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/webscraping/comments/1lwt2qz/cant_log_in_with_python_script_on_cloudflare_site/\">[comments]</a></span>",
        "id": 3137110,
        "language": "en",
        "link": "https://www.reddit.com/r/webscraping/comments/1lwt2qz/cant_log_in_with_python_script_on_cloudflare_site",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 467,
        "source_url": "https://www.reddit.com/r/webscraping/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Can't log in with Python script on Cloudflare site",
        "vote": 0
    }
]