[
    {
        "age": null,
        "album": "",
        "author": "Blog Staff",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-11T22:38:03.988909+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-11T21:38:53+00:00",
        "description": "<p>\n\t<img alt=\"SANDOR_DARGO_ROUND.JPG\" src=\"https://isocpp.org/files/img/SANDOR_DARGO_ROUND.JPG\" style=\"width: 250px; margin: 10px; float: right; height: 250px;\" />Starting from C++23, standard containers support a new set of constructor overloads. These constructors take a&nbsp;<code>std::from_range</code>&nbsp;tag, a range and an optional allocator. These&nbsp;<code>from_range</code>&nbsp;constructors make it easier to construct containers from ranges, helping make C++ code more concise, more expressive, and less error-prone.</p>\n<blockquote>\n\t<h3>\n\t\t<a href=\"https://www.sandordargo.com/blog/2025/05/21/cpp23-from-range-constructors\">Constructing Containers from Ranges in C++23</a></h3>\n\t<p>\n\t\tby Sandor Dargo</p>\n</blockquote>\n<p>\n\tFrom the article:</p>\n<blockquote>\n\t<p>\n\t\tI&rsquo;ve written plenty on this blog about&nbsp;<a href=\"https://www.sandordargo.com/tags/algorithms/\">standard algorithms</a>, but far less about&nbsp;<a href=\"https://www.sandordargo.com/tags/ranges/\">ranges</a",
        "id": 3145112,
        "language": "en",
        "link": "https://isocpp.org//blog/2025/07/constructing-containers-from-ranges-in-cpp23-sandor-dargo",
        "manual_status_code": 0,
        "page_rating": 29,
        "page_rating_contents": 90,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 314,
        "source_url": "https://isocpp.org/blog/rss/category/news",
        "status_code": 0,
        "tags": [],
        "thumbnail": "https://isocpp.org/files/img/SANDOR_DARGO_ROUND.JPG",
        "title": "Constructing Containers from Ranges in C++23 -- Sandor Dargo",
        "vote": 0
    }
]