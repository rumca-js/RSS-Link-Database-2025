[
    {
        "age": null,
        "album": "",
        "author": "/u/dwaxe",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-02T19:35:43.975225+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-02T19:01:38+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/dwaxe\"> /u/dwaxe </a> <br/> <span><a href=\"https://www.djangoproject.com/weblog/2025/jul/02/bugfix-releases/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1lq4agu/django_bugfix_release_issued_524/\">[comments]</a></span>",
        "id": 3070974,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1lq4agu/django_bugfix_release_issued_524",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Django bugfix release issued: 5.2.4",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Downtown-Dare-3566",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-02T15:14:55.273724+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-02T15:00:35+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey everyone,</p> <p>I&#39;m looking to get into Django and would really appreciate some guidance on the best resources out there in 2025. I&#39;m comfortable with Python and have done some basic web dev (HTML/CSS/JS), but I&#39;m new to backend frameworks like Django.</p> <p>What I&#39;m hoping to find:</p> <ul> <li>A beginner-friendly roadmap or course</li> <li>Up-to-date tutorials (text or video)</li> <li>Good books or documentation</li> <li>Projects or exercises to practice</li> </ul> <p>I\u2019ve seen a few tutorials floating around, but I want to make sure I&#39;m learning from sources that are relevant and align with Django\u2019s latest version.</p> <p>Any tips, recommendations, or personal favorites would be hugely appreciated!</p> <p>Thanks in advance \ud83d\ude4f</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Downtown-Dare-3566\"> /u/Downtown-Dare-3566 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1lpy",
        "id": 3068748,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1lpy3kr/best_resources_to_learn_django_in_2025",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Best Resources to Learn Django in 2025?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Radiant-Winner7059",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-02T15:14:55.443037+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-02T14:49:55+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I have a search engine and once it got to 40,000k links it started to break down from slowness when doing model queries because the database was too big. What\u2019s the best solution for searching through millions of results on Django. My database is on rds so I\u2019m open too third party tools like lambda that can make a customizable solution. I put millions of results because I\u2019m planning on getting there fast.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Radiant-Winner7059\"> /u/Radiant-Winner7059 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1lpxtxv/searching_millions_of_results_in_django/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1lpxtxv/searching_millions_of_results_in_django/\">[comments]</a></span>",
        "id": 3068749,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1lpxtxv/searching_millions_of_results_in_django",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Searching millions of results in Django",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/djv-mo",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-02T13:04:52.027355+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-02T12:23:22+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>django-click is a Django wrapper around the Click library. It transforms management commands from classes with methods into simple functions with decorators</p> <p>Features:-</p> <p>\u2022Function-based commands \u2022Decorator-driven arguments \u2022Direct parameter access \u2022Built-in colorful output \u2022Automatic help generation</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/djv-mo\"> /u/djv-mo </a> <br/> <span><a href=\"https://i.redd.it/g3ggvddtegaf1.png\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1lpug8i/django_tip_custom_management_commands/\">[comments]</a></span>",
        "id": 3067493,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1lpug8i/django_tip_custom_management_commands",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Django tip Custom Management Commands",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Zapichnuto",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-02T11:59:57.320237+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-02T11:54:45+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey, this is something that I was wondering for quite a while. When defining a text field, I know that as per Django docs I should not use <code>null=True</code> to only have one value for no-value.</p> <p>But when making the field optional using <code>blank=True</code>, do I need to specify <code>default=&quot;&quot;</code> or not? If not, should I specify it anyway to be more explicit?</p> <pre><code>models.CharField(max_length=32, blank=True) </code></pre> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Zapichnuto\"> /u/Zapichnuto </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1lptvlu/charfieldtextfield_default/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1lptvlu/charfieldtextfield_default/\">[comments]</a></span>",
        "id": 3066925,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1lptvlu/charfieldtextfield_default",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "CharField/TextField default",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/AnshulTh",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-02T11:59:57.151792+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-02T08:30:11+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I am learning django nowadays and want to know how real projects work , so if someone is working on some django project and need someone&#39;s help I am ready to help so I can learn.(For free)</p> <p>Even if you don&#39;t want my help please share your repo. So I can see how exactly we work in real projects in django.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/AnshulTh\"> /u/AnshulTh </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1lpqiqg/want_to_gain_experience/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1lpqiqg/want_to_gain_experience/\">[comments]</a></span>",
        "id": 3066924,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1lpqiqg/want_to_gain_experience",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Want to gain experience",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/kdpisda",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-02T06:22:53.016650+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-02T05:51:22+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi everyone,</p> <p>I\u2019ve seen quite a few discussions here about using PostgreSQL Row-Level Security (RLS) to isolate tenant data in Django apps. I\u2019ve run into the same pain points\u2014keeping policies in sync with migrations, avoiding raw SQL all over the place, and making sure RLS logic is explicit in the codebase.</p> <p>To help with this, I recently released <a href=\"https://django-rls.com/\">django-rls</a>, an open-source package that lets you:</p> <ul> <li>Define RLS policies declaratively alongside your models</li> <li>Automate policy creation in migrations</li> <li>Keep tenant filtering logic consistent and transparent</li> </ul> <p>It\u2019s still early days, so I\u2019d love feedback from anyone who\u2019s experimented with RLS or is considering it for multi-tenant architectures. Contributions, questions, and critiques are very welcome.</p> <p>If you\u2019re curious, here\u2019s the project site: <a href=\"https://django-rls.com/\">django-rls.com</a></p> <p>Thanks\u2014and look",
        "id": 3065301,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1lpo4vc/introducing_djangorls_declarative_rowlevel",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Introducing django-rls: Declarative Row-Level Security Policies in Django",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Regular_Sandwich498",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-02T05:19:03.871094+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-02T04:30:51+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi, I have an app(side project ) developed in Django and used postgres for database. App allows user to make entries to database. Also there is open ai integration allowing users to fetch data from db and send it to openai to summarize it. If I have 1000 concurrent users ( I think that will be alot ) which plan would work best? App is basically database heavy so whenever user is using they are making entries or fetching data from the database. </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Regular_Sandwich498\"> /u/Regular_Sandwich498 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1lpmsbg/need_help_in_deciding_which_tier_to_use_for_azure/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1lpmsbg/need_help_in_deciding_which_tier_to_use_for_azure/\">[comments]</a></span>",
        "id": 3065054,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1lpmsbg/need_help_in_deciding_which_tier_to_use_for_azure",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Need help in deciding which tier to use for azure app service",
        "vote": 0
    }
]