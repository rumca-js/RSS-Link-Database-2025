[
    {
        "age": null,
        "album": "",
        "author": "/u/MEHDII__",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-15T21:40:42.513684+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-15T21:25:57+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;m making an invoice generator side project, i tried to do it as a desktop app in tkinter or pyqt and I was quick to realize how exhausting it is, so i gave up.</p> <p>Django is better for me since i have some experience with it, but the issue is, i know django doesn&#39;t support modifying a word document, not directly at least as far as i know. Unless you make the invoice template an html find django cant directly modify it.</p> <p>The idea of the project is to basically just use django to fill in a form like client name, product sold, price etc... And then store it in a db. Then i would call an external python script that will use python-docx module to read from the db and fill the invoice template word document.</p> <p>Is that possible? Can an external python script be called within django environnement? As soon as the user hits submit on the form the script fires up.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.redd",
        "id": 3174242,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1m0ubew/executing_an_internal_python_script_in_django_env",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Executing an internal python script in django env",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/crcrewso",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-15T20:34:06.951878+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-15T19:30:03+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Please let me know if this has been asked before. I&#39;m slowly taking over some of the maintenance of a FOSS <a href=\"https://qatrackplus.com/\">web app built on Django </a>(<a href=\"https://github.com/qatrackplus/qatrackplus\">GitHub</a>). As we get closer to cutting the next release I would like to deploy a test server for others to play with. What I would like to see is a prepopulated environment where the user can use, modify, do anything they normally could with the app if they were to put in their own dev install. This instance would then reset after some period so that any test user would get a consistent experience. It would be even better if each instance were somewhat persistent so the same user could use the same demo environment for a few days. </p> <p>Is there a hosting provider and configuration that would give me this type of functionality easily? </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/cr",
        "id": 3173829,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1m0rafq/demo_website",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Demo website",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Vietname",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-15T20:34:07.120049+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-15T19:03:13+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>My project uses celery to run fairly long tasks (up to ~30min, yes i know this is a celery anti-pattern but its a legacy project i was brought onto), and has a good deal of logic that creates chains consisting of groups/chords. </p> <p>Im working on making these schedulable so a user can request that a task be run at a later date, and since ETA/countdown are discouraged for this, i was thinking of serializing the chain and storing in the db, then deserializing when its time to run the chain. </p> <p>Is this even possible, and if so how would i do it? I know individual task signatures can be serialized, but i havent yet seen a way to do it for chains.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Vietname\"> /u/Vietname </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1m0qkn3/serialize_celery_chains_and_run_later/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1",
        "id": 3173830,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1m0qkn3/serialize_celery_chains_and_run_later",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Serialize celery chains and run later?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/FuturesBrightDavid",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-15T15:51:23.075081+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-15T15:02:29+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I have built an HTML template engine called <a href=\"https://github.com/opensourceame/trim-template\">Trim Template</a> which closely mimics Ruby&#39;s Slim template syntax.</p> <p>I started to look at how to integrate this with Django, however I see one major stumbling block. Like most template engines, Trim allows for templates to <a href=\"https://github.com/opensourceame/trim-template/blob/master/USAGE.md#sub-templates\">render sub-templates within them</a>. Django, however, uses the approach of extending templates. This could be quite a major hurdle. </p> <p>Any suggestions on how I would solve this? Would you expect my template engine to support extending templates?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/FuturesBrightDavid\"> /u/FuturesBrightDavid </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1m0k46p/can_this_template_engine_integrate_with_django/\">[link]</a></span> &#32; <span><a ",
        "id": 3171417,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1m0k46p/can_this_template_engine_integrate_with_django",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Can this template engine integrate with Django?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/TheCodingTutor",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-15T14:47:21.149751+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-15T14:10:49+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey Django developers! \ud83d\udc4b</p> <p>I&#39;m excited to share that Django Smart Ratelimit v0.7.0 just dropped with some game-changing features!</p> <p><strong>\ud83c\udd95 What&#39;s New in v0.7.0:</strong></p> <ul> <li><strong>Token Bucket Algorithm</strong> - Finally, intelligent rate limiting that handles real-world traffic patterns</li> <li><strong>Complete Type Safety</strong> - 100% mypy compliance with strict type checking</li> <li><strong>Security Hardened</strong> - Bandit integration with all security issues resolved</li> <li><strong>Python 3.13 &amp; Django 5.1</strong> - Cutting-edge compatibility</li> <li><strong>340+ Tests</strong> - Production-ready reliability</li> </ul> <p><strong>Why Token Bucket is a Game Changer:</strong> Traditional rate limiting is dumb - it blocks legitimate users during traffic spikes. Token bucket is smart - it allows bursts while maintaining long-term limits. Perfect for mobile apps, batch processing, and API retries.</p> <p",
        "id": 3170742,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1m0isli/django_smart_ratelimit_v070_the_only_rate",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "\ud83d\ude80 Django Smart Ratelimit v0.7.0 - The Only Rate Limiting Library You'll Ever Need (Now with Token Bucket Algorithm!)",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/be_haki",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-15T12:36:12.413912+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-15T11:36:40+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Finally got around to publishing the article which inspired my recent talk at DjangoCon. Video is available here <a href=\"https://youtu.be/l1xi_yKnhbE?si=nUu-ykTS31uOdl-V\">https://youtu.be/l1xi_yKnhbE?si=nUu-ykTS31uOdl-V</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/be_haki\"> /u/be_haki </a> <br/> <span><a href=\"https://hakibenita.com/django-foreign-keys\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1m0ff8w/how_to_get_foreign_keys_horribly_wrong_in_django/\">[comments]</a></span>",
        "id": 3169580,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1m0ff8w/how_to_get_foreign_keys_horribly_wrong_in_django",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "How to Get Foreign Keys Horribly Wrong in Django",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/iEmerald",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-15T11:31:14.128413+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-15T11:21:02+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;m learning testing, and this is the first ever test I wrote, I am looking for reviews on whether I am on the right track or not:</p> <p>Here&#39;s my model:</p> <pre><code>class BaseModel(models.Model): &quot;&quot;&quot; Abstract base model with common fields used across all data models. &quot;&quot;&quot; created_at = models.DateTimeField( auto_now_add=True, verbose_name=&#39;Created At&#39;, help_text=&#39;Record Creation Timestamp&#39;, ) updated_at = models.DateTimeField( auto_now=True, verbose_name=&#39;Updated At&#39;, help_text=&#39;Record last update timestamp&#39;, ) is_active = models.BooleanField( default=True, verbose_name=&quot;Is Active&quot;, help_text=&#39;Soft Enable/Disable Toggle&#39; ) notes = models.TextField(blank=True, help_text=&#39;Optional Internal Notes&#39;) class Meta: abstract = True ordering = [&#39;-created_at&#39;] # Most Recent Record Shows First By Default </code></pre> <p>And here&#39;s the test for that mode",
        "id": 3169102,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1m0f4x5/first_time_writing_a_test_looking_for_review",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "First Time Writing a Test. Looking for Review",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Possible-Service-150",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-15T09:21:13.561469+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-15T08:29:15+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Looking for a springboard into the rapidly growing world of web development? <strong>Web Development Institute (WDI)</strong> in Rohini, Delhi, offers a comprehensive, industry-aligned learning path designed to transform aspiring developers into job-ready professionals.</p> <h1>\ud83c\udf93 Courses That Cover It All</h1> <p>WDI\u2019s curriculum spans short certificates to in-depth diplomas, tailored to different learners: from beginners to seasoned professionals.</p> <ul> <li><strong>Web Expert w/ PHP</strong> \u2013 From basic HTML to full-stack PHP development (4 to 12 months) <a href=\"https://www.techstack.in/web-development-course/?utm_source=chatgpt.com\">techstack.in</a><a href=\"https://www.facebook.com/webdevelopmentinstitute/?utm_source=chatgpt.com\">Kochiva+4Facebook+4web-development-institute.com+4</a><a href=\"https://www.webdevelopmentinstitute.com/?utm_source=chatgpt.com\">webdevelopmentinstitute.com</a></li> <li><strong>Web Expert Premium</strong>, <strong>Adva",
        "id": 3168125,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1m0cc9f/launch_your_tech_career_at_web_development",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "\ud83d\ude80 Launch Your Tech Career at Web Development Institute, Rohini",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Sweaty-Cartoonist142",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-15T06:06:10.491352+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-15T05:24:31+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I need help deciding which course is better, GFG Complete Django Web Development Course or Code Chef Build with Django Course, or is any other course i can get for free, which is much better ? Which tech stack should i opt if I need to learn fast and complete web development with Django (only 1-2 month time \ud83d\ude2d). I already know python, HTML, CSS.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Sweaty-Cartoonist142\"> /u/Sweaty-Cartoonist142 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1m09e9s/webd_guidance/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1m09e9s/webd_guidance/\">[comments]</a></span>",
        "id": 3167185,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1m09e9s/webd_guidance",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "WebD guidance",
        "vote": 0
    }
]