[
    {
        "age": null,
        "album": "",
        "author": "/u/cryo8822",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-17T15:38:13.095779+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-17T15:12:40+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I frequently see people asking questions about how to deploy and host Django apps for free. There are a few different services that let you do that, all with some pluses and minuses. I decided to write a tutorial on what options are available and how to do it with <a href=\"http://Fly.io\">Fly.io</a>. It ended up being kind of long, but hopefully you all find it useful.</p> <ul> <li><strong>PythonAnywhere</strong> - Free tier has limitations on outbound network access, only one Django app, and no custom domain</li> <li><strong>Render</strong> - Has a free tier with a DB, but with a couple of major downsides. It has a 256mb db limit, but it deletes it after 30 days unless you upgrade. It also spins down your VM if not used and has a 30-60 second spin up from idle.</li> <li><strong>AWS</strong> - Has a free tier but only for 12 months</li> <li><strong>Vercel</strong> - There are serverless options with an external DB you can try, but serverless has a new ",
        "id": 3189419,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1m2a5r8/how_to_host_a_django_app_for_free_with_db_static",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "How to Host a Django App for Free (With DB, Static Files, and Custom Domain with SSL)",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Old_Sea284",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-17T14:33:16.527496+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-17T13:39:07+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Greetings Everyone, So i have been trying to learn django on and off for years now...and everytime i&#39;ve given up on ORM...i simply dont get it...and when i searched on yt and other platforms i didnt find much resources for it for ORM, Sqlalchemy and i gave up. But now i want to ace it once and for all. BTW i do am familiar (very) with SQL , databases (foreign key, primary key) . but in ORM l, whenever classes and relationships are used it just goes over my head i find it really tough...evwn using AIs werent much help to get the concepts cleared. I do know python really well...also have solved pretty good amount of leetcode questions... so ORM experts out there please help a brother out...and drop some banger resources that u found helpful while learnjng or just some helpful tip</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Old_Sea284\"> /u/Old_Sea284 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/",
        "id": 3188792,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1m27t1v/orm_is_hard_af",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "ORM is HARD AF",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Danman365",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-17T11:19:36.215743+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-17T10:21:56+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Im trying to create some tests for my django project. Im using unittests, and vscode as my IDE. The tests look like are nicely set up, however, if i run in the terminal python <a href=\"http://manage.py\">manage.py</a> test only part of the tests appear (altough that&#39;s a different issue) and it makes a temporal database. But when i run the tests from the testing tab in vscode, it uses the default database. How do i set up so vscode creates and uses a temporal database for the tests?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Danman365\"> /u/Danman365 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1m23vl8/django_tests_not_creating_temporal_database/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1m23vl8/django_tests_not_creating_temporal_database/\">[comments]</a></span>",
        "id": 3186730,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1m23vl8/django_tests_not_creating_temporal_database",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Django Tests not creating Temporal Database",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/djv-mo",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-17T11:19:36.397422+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-17T09:35:26+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>When retrieving objects from your database in Django, you often need to handle the case where the object doesn&#39;t exist. Instead of manually handling the DoesNotExist exception and raising an Http404 exception, you can use the get_object_or_404 shortcut.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/djv-mo\"> /u/djv-mo </a> <br/> <span><a href=\"https://i.redd.it/6dirux6jmedf1.png\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1m234po/django_tip_get_object_or_404/\">[comments]</a></span>",
        "id": 3186731,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1m234po/django_tip_get_object_or_404",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Django tip get_object_or_404",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/JonG0uld",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-17T11:19:36.742541+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-17T09:25:52+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>One of the questions asked during a live Q&amp;A I ran a while ago was &quot;With the state of the industry and hiring trends, and particularly accounting for AI bots flooding the inboxes of recruiters, how does a mid-level developer stand out, or even a junior trying to break into the industry?&quot;</p> <p>It links to the story of a DEEPFAKE AI interview I shared and a worrying trend of FAKE job applicants trying to scam their way into hiring processes. </p> <p>In the Q&amp;A, I gave a few strategies of how you can try to stand out. But nothing will beat being a good person and regularly contributing to the Python and Django community. Something a fraudster really won&#39;t be doing!</p> <p>The whole video is live now on my <a href=\"https://www.youtube.com/@foxleytalent\">YouTube Channel</a>. </p> <p>Where you can also check back and watch the story about when I interviewed and <a href=\"https://youtu.be/0tNymaqcIbc?si=scRVn0DqywDLEKR8\">confronted a D",
        "id": 3186733,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1m22zfd/how_to_stand_out_in_a_job_market_that_is_flooded",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "How to stand out in a job market that is flooded with FAKE / AI CANDIDATES",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Incredlbie",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-17T11:19:36.575405+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-17T08:10:12+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi all,</p> <p>I am using HTMX to display forms in a bootstrap modal, and handle the response accordingly. I have a generic view for this which is as follows, and then I inherit in each use case:</p> <pre><code>class HTMXFormView(FormView): template_name = &quot;form-modal.html&quot; def form_valid(self, form): # if the form has a save method, call it if hasattr(form, &quot;save&quot;): form.save() return HttpResponse(&quot;&lt;script&gt;closehtmxModal();&lt;/script&gt;&quot;) def form_invalid(self, form): html = render_block_to_string( self.template_name, &quot;form&quot;, { &quot;form&quot;: form, &quot;htmx_mode&quot;: True, }, ) resp = HttpResponse(html) return retarget(resp, &quot;#form-container&quot;) </code></pre> <p>This works fine. </p> <p>I then extend this to the following class, which still works fine:</p> <pre><code>class PersonFormView(HTMXFormView): model = Person form_class = NewPersonForm def get_form_kwargs(self): kwargs = super().g",
        "id": 3186732,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1m21tj2/formview_form_valid_issue_with_htmx",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Formview form_valid() issue with HTMX",
        "vote": 0
    }
]