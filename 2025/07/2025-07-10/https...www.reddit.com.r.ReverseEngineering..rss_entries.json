[
    {
        "age": null,
        "album": "",
        "author": "/u/Fluffy-Purpose5761",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-10T17:11:54.888151+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-10T16:58:40+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Fluffy-Purpose5761\"> /u/Fluffy-Purpose5761 </a> <br/> <span><a href=\"https://github.com/Arul-DevX/carck_me.git\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/ReverseEngineering/comments/1lwhx37/can_you_crack_patti_vault_a_password_stored_in/\">[comments]</a></span>",
        "id": 3133804,
        "language": "",
        "link": "https://www.reddit.com/r/ReverseEngineering/comments/1lwhx37/can_you_crack_patti_vault_a_password_stored_in",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 476,
        "source_url": "https://www.reddit.com/r/ReverseEngineering/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Can you crack Patti Vault? A password stored in pieces, decoys, and traps.",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/OneiricArtisan",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-10T10:30:47.070164+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-10T10:15:51+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>(Talking about ordinary EEPROM ICs, not specialty ones) I recently read a presentation on EEPROM forensics (google &#39;fdtc2022 eeprom&#39;) and would like to know if it would be possible to retrieve previous states of each bit, given the nature of EEPROM. If it&#39;s guaranteed up to say 100,000 write cycles, is the decay measurable? Say you write whatever variables on the fresh EEPROM once (to use them as read-only onwards), then wipe it to zeroes; can laser fault injection or whatever other method be used to know which bits had previously been set to a non-factory value, based on floating gate &#39;decay&#39; (only those bits that weren&#39;t already zero would be rewritten, so you&#39;d have some bits with two writes and some with one)? Would there be any difference between write and erase in this area? Would writing random values once, then writing the real data protect against such forensics? I&#39;ve also read on some of the datasheets that en",
        "id": 3130422,
        "language": "",
        "link": "https://www.reddit.com/r/ReverseEngineering/comments/1lw92tl/is_it_possible_to_know_previous_states_of_bits_in",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 476,
        "source_url": "https://www.reddit.com/r/ReverseEngineering/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Is it possible to know previous states of bits in an EEPROM?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/CauliflowerGuilty824",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-10T02:57:11.185412+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-10T02:55:13+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi everyone, I&#39;m new here and interested in learning reverse engineering. I was wondering if anyone could recommend some good books or video tutorials that are well-regarded in the field? Thanks in advance!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/CauliflowerGuilty824\"> /u/CauliflowerGuilty824 </a> <br/> <span><a href=\"http://www.google.com\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/ReverseEngineering/comments/1lw1z4b/some_good_books_or_video_tutorials_that_are/\">[comments]</a></span>",
        "id": 3128267,
        "language": "",
        "link": "https://www.reddit.com/r/ReverseEngineering/comments/1lw1z4b/some_good_books_or_video_tutorials_that_are",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 476,
        "source_url": "https://www.reddit.com/r/ReverseEngineering/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "some good books or video tutorials that are well-regarded in the field",
        "vote": 0
    }
]