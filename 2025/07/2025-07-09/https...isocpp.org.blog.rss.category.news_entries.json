[
    {
        "age": null,
        "album": "",
        "author": "Blog Staff",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-09T21:45:48.566427+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-09T21:35:32+00:00",
        "description": "<p>\n\t<img alt=\"me.png\" src=\"https://isocpp.org/files/img/me.png\" style=\"width: 250px; margin: 10px; float: right;\" />Time flies&mdash;C++ Insights just turned 7! To celebrate, I&rsquo;ve upgraded the tool to Clang 20, unlocking even more C++23 and C++26 features for you to explore.</p>\n<blockquote>\n\t<h3>\n\t\t<a href=\"https://andreasfertig.com/blog/2025/05/cpp-insights-now-uses-clang-20/\">C++ Insights now uses Clang 20</a></h3>\n\t<p>\n\t\tby Andreas Fertig</p>\n</blockquote>\n<p>\n\tFrom the article:</p>\n<blockquote>\n\t<p>\n\t\t<strong><code>size_t</code></strong></p>\n\t<p>\n\t\tFor a long time now, when you used&nbsp;<code>size_t</code>&nbsp;or&nbsp;<code>std::size_t</code>&nbsp;the resulting transformation kept the name. It did not expand to the underlying machine-specific date type. To be honest, that was more like a happy accident. Clang 20 came with two changes to libc++</p>\n\t<p>\n\t\tThe first&nbsp;<a href=\"https://github.com/llvm/llvm-project/commit/d6832a611a7c4ec36f08b1cfe9af850dad32da2e\" target=\"",
        "id": 3126646,
        "language": "en",
        "link": "https://isocpp.org//blog/2025/07/cpp-insights-now-uses-clang-20-andreas-fertig",
        "manual_status_code": 0,
        "page_rating": 29,
        "page_rating_contents": 90,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 314,
        "source_url": "https://isocpp.org/blog/rss/category/news",
        "status_code": 0,
        "tags": [],
        "thumbnail": "https://isocpp.org/files/img/me.png",
        "title": "C++ Insights now uses Clang 20 -- Andreas Fertig",
        "vote": 0
    }
]