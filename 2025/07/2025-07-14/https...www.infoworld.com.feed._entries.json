[
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-14T09:59:37.983576+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-14T09:00:00+00:00",
        "description": "<div id=\"remove_no_follow\">\n\t\t<div class=\"grid grid--cols-10@md grid--cols-8@lg article-column\">\n\t\t\t\t\t  <div class=\"col-12 col-10@md col-6@lg col-start-3@lg\">\n\t\t\t\t\t\t<div class=\"article-column__content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n\n<p>Let\u2019s face it. <a href=\"https://www.infoworld.com/article/2255028/what-is-devops-transforming-software-development.html\">Devops</a> hasn\u2019t seen much innovation in recent years, particularly in infrastructure automation.</p>\n\n\n\n<p>Despite radical shifts in technology, infrastructure automation has remained largely unchanged. Sure, it\u2019s evolved \u2014 from on-prem configurations to cloud and containers \u2014 with tools like Terraform and OpenTofu. But the basic premise of declarative configuration management has been around since the 1990s.</p>\n\n\n\n<p>\u201cWhile the tech landscape has changed, the way we think about building automation has not,\u201d says Adam Jacob, CEO and co-founder at System Initiative. \u201cIt\u2019s ha",
        "id": 3159628,
        "language": "en-US",
        "link": "https://www.infoworld.com/article/4021153/can-system-initiative-fix-devops.html",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 468,
        "source_url": "https://www.infoworld.com/feed/",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Can System Initiative fix devops?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-14T09:59:38.331952+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-14T09:00:00+00:00",
        "description": "<div id=\"remove_no_follow\">\n\t\t<div class=\"grid grid--cols-10@md grid--cols-8@lg article-column\">\n\t\t\t\t\t  <div class=\"col-12 col-10@md col-6@lg col-start-3@lg\">\n\t\t\t\t\t\t<div class=\"article-column__content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n\n<p><a href=\"https://www.infoworld.com/article/2335213/large-language-models-the-foundations-of-generative-ai.html\">Large language models</a> (LLMs) have quickly evolved from novelty chatbots to sophisticated agentic AI systems that act on our behalf. Unlike traditional software, these AI agents don\u2019t follow rigid, predefined instructions. They interpret our intent and make autonomous decisions. That elasticity lets enterprises automate everything from support tickets to code reviews, <a href=\"https://www.infoworld.com/article/3631197/agentic-ai-the-top-challenges-and-how-to-overcome-them.html\">but it also multiplies risk</a>. If an AI agent misinterprets intent or gets manipulated by malicious inpu",
        "id": 3159630,
        "language": "en-US",
        "link": "https://www.infoworld.com/article/4021238/why-llms-demand-a-new-approach-to-authorization.html",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 468,
        "source_url": "https://www.infoworld.com/feed/",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Why LLMs demand a new approach to authorization",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-14T09:59:38.161987+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-14T09:00:00+00:00",
        "description": "<div id=\"remove_no_follow\">\n\t\t<div class=\"grid grid--cols-10@md grid--cols-8@lg article-column\">\n\t\t\t\t\t  <div class=\"col-12 col-10@md col-6@lg col-start-3@lg\">\n\t\t\t\t\t\t<div class=\"article-column__content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n\n<p>If a vendor tells you it can enable zero CVEs (Common Vulnerabilities and Exposures), you should run, not walk, away. Not only is it impossible to get to zero CVEs, there\u2019s really no need to even try. In fact, the very act of trying to achieve zero CVEs could actually increase vulnerability if the security big picture is ignored.</p>\n\n\n\n<p>\u201cZero CVEs\u201d is a term being bandied about as cybersecurity nirvana \u2014 the notion that software has no identified security vulnerabilities. Setting a goal of zero CVEs has gained traction lately, in part because of a trend toward stricter regulations like <a href=\"https://www.fedramp.gov/\">FEDramp</a> and in part because some technology providers are saying they",
        "id": 3159629,
        "language": "en-US",
        "link": "https://www.infoworld.com/article/4021224/why-zero-cves-makes-zero-sense.html",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 468,
        "source_url": "https://www.infoworld.com/feed/",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Why zero CVEs makes zero sense",
        "vote": 0
    }
]