[
    {
        "age": null,
        "album": "",
        "author": "/u/dxt0434",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-14T19:14:37.580449+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-14T18:43:30+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/dxt0434\"> /u/dxt0434 </a> <br/> <span><a href=\"https://github.com/danihodovic/django-allauth-ui\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1lzuqz2/github_danihodovicdjangoallauthui_nice_looking/\">[comments]</a></span>",
        "id": 3164023,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1lzuqz2/github_danihodovicdjangoallauthui_nice_looking",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "GitHub - danihodovic/django-allauth-ui: Nice looking templates for django-allauth",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Gae58",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-14T14:54:45.541708+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-14T13:51:00+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi everyone,<br/> I&#39;m using the <strong>django-tables2</strong> library to manage tables in a Django application, with working CRUD and search functionality.<br/> Sorting works correctly when clicking on the column headers (<code>&lt;th&gt;</code>), so no issues there.</p> <p>However, I\u2019m trying to achieve the following:<br/> <strong>I want the column used for sorting to be visually highlighted</strong>, for example by changing its <code>background-color</code> or applying a specific CSS class \u2014 but I can\u2019t seem to make it work.</p> <p>I\u2019ve tried multiple approaches without success.<br/> Has anyone managed to do this? If so, how did you apply a style or class to the sorted column dynamically?</p> <p>Thanks in advance</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Gae58\"> /u/Gae58 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1lzmxjg/djangotables2_change_background_color_of_sorted/\">[link",
        "id": 3161724,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1lzmxjg/djangotables2_change_background_color_of_sorted",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "django-tables2 \u2013 Change background color of sorted column dynamically",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/bravopapa99",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-14T13:48:40.505806+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-14T13:46:33+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I have a model, it has 3 fields, 2 FK-s and a text field:</p> <pre><code>class MarkingSubmission(models.Model): ce_survey = models.ForeignKey(CESurvey, on_delete=models.CASCADE, null=False) answer = models.OneToOneField(CEAnswer, on_delete=models.CASCADE, null=False) marking_id = models.CharField(max_length=100, null=False, blank=False) </code></pre> <p>Clicking the add new button, it saps my laptop to within an inch of its life and then also takes about four minutes to render!!! I used django debug toolbar, it showed that 74155 queries has been executed. Yes, I know. Also, running pyinstrument, it seems there is some recursive loop going on, why it ends I don&#39;t know, I have spent the last 6 hours trying to understand but the context is too deep, it&#39;s core Django admin rendering code and I don;t understand it.</p> <p>I made sure, for every model, that the <code>__str__()</code> function didn&#39;t call out to other models, I tried the raw fiel",
        "id": 3161217,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1lzmtui/crazy_sql_count_for_a_model_add_page_with_3_fields",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Crazy SQL count for a model add page with 3 fields!",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/aNo_Cardiologist85",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-14T13:48:40.678372+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-14T13:06:02+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey Pythonistas \ud83d\udc4b,</p> <p>I&#39;m excited to share <strong>Frago</strong>, a Django app I built to make large file uploads secure, resumable, and <strong>parallel</strong> \u2014 with support for integrity checks, duplicate detection, and pluggable authentication.<br/> It&#39;s especially useful for projects like drone data collection, video platforms, or IoT workflows.</p> <h1>\ud83d\udd27 What is Frago?</h1> <p><strong>Frago</strong> (short for \u201cFragmented Go\u201d) is a reusable Django package that supports:</p> <p>\u2705 Parallel + resumable <strong>chunked uploads</strong><br/> \u2705 File integrity verification (MD5/SHA256)<br/> \u2705 Duplicate chunk detection<br/> \u2705 Expirable uploads &amp; chunk cleanup<br/> \u2705 Django signal hooks for customization<br/> \u2705 Pluggable authentication (JWT/user/device)<br/> \u2705 Works great with large files and unstable networks</p> <h1>\ud83d\udee0\ufe0f Built With</h1> <ul> <li>Python 3.11</li> <li>Django</li> <li>DRF</li> <li><code>httpx</code>, <code>aiofiles</code>",
        "id": 3161218,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1lzlwaz/introducing_frago_a_django_app_for_secure",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Introducing Frago: A Django App for Secure, Resumable, Parallel Chunked Uploads",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/kartops",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-14T12:43:15.592506+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-14T12:16:07+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I been in my django learn adventure for half a year now. I already did a couple web apps with different deploying (one using wagtail), and a small app with django-rest-framework essentialy to post and get data of a postgres database with authentication. </p> <p>I want to learn more about building APIs, since i feel that is the go to for working with teammates (i work in data science / analytics). I been in this community since my learning started, and lately i seen a lot of django-ninja mentions due to the boom of fastAPI. I been neglecting to learn fastAPI, because the ORM and django admin panel feel awesome to me. So, mi questions are: <strong>what are the pros and cons of using django-ninja over drf?</strong> <strong>you get the same pydantic-async-documentation features that fastAPI give you?</strong> <strong>building an API with django-ninja is as straightforward than doing it with drf?</strong></p> <p>In my proyect with drf i use drf-spectacular",
        "id": 3160707,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1lzktik/drf_or_djangoninja",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "DRF or django-ninja?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Smart_Zebra2673",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-14T11:36:52.467448+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-14T11:11:41+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I am completely stumped. I am attempting to deploy my django app on Railway and the gdal installation is a major blocker. The error I get is: </p> <p>&quot;&quot;&quot;</p> <p>ERROR: ERROR: Failed to build installable wheels for some pyproject.toml based projects (gdal)</p> <p>&quot;&quot;&quot;</p> <p>CONTEXT:</p> <p>I have created the following nixpacks.toml file:<br/> &quot;&quot;&quot;</p> <p>[phases.setup]</p> <p>aptPkgs = [&quot;gdal-bin&quot;, &quot;libgdal-dev&quot;, &quot;python3-dev&quot;, &quot;build-essential&quot;]</p> <p>[phases.build]</p> <p>cmds = [&quot;pip install -r requirements.txt&quot;]</p> <p>&quot;&quot;&quot;</p> <p>requirements.txt:<br/> &quot;&quot;&quot;<br/> gdal=3.4.3</p> <p>&quot;&quot;&quot;</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Smart_Zebra2673\"> /u/Smart_Zebra2673 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1lzjlf3/how_do_you_setup_geodjango_on_rai",
        "id": 3160172,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1lzjlf3/how_do_you_setup_geodjango_on_railway",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "How do you setup GeoDjango on Railway?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/pennersr",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-14T10:03:18.425391+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-14T09:12:03+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Through <code>allauth.idp</code>, django-allauth recently gained <strong>OAuth 2 / OpenID</strong> <strong>Connect</strong> <strong>Identity Provider</strong> support:</p> <ul> <li>If you are building an SPA or mobile app, you can now use industry standard PKCE and access/refresh token flows.</li> <li>Support for the device authorization grant was added in the latest release, 65.10.0.</li> <li>Integration with Django Ninja and Django REST framework is seamless, see: <a href=\"https://docs.allauth.org/en/latest/idp/openid-connect/integrations.html\">https://docs.allauth.org/en/latest/idp/openid-connect/integrations.html</a></li> </ul> <p>All of the above is supported out of the box, and only requires installing the extra <code>django-allauth[idp-oidc]</code> -- you do not need to integrate any additional packages yourself.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/pennersr\"> /u/pennersr </a> <br/> <span><a hre",
        "id": 3159657,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1lzhnn8/djangoallauth_identity_provider_support",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "django-allauth Identity Provider support",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/No-Sir-8184",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-14T08:57:56.293821+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-14T08:19:29+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey people, I want to share about my first open-source package on PyPI for Django!</p> <p>PyPI: <a href=\"https://pypi.org/project/django-metachoices/\">https://pypi.org/project/django-metachoices/</a> GitHub: <a href=\"https://github.com/luqmaansu/django-metachoices\">https://github.com/luqmaansu/django-metachoices</a> Installation: <code>pip install django-metachoices</code></p> <p>django-metachoices a field extension that allows choices to have rich metadata beyond the standard (value, display) tuple.</p> <p>For example, instead of the normal choices definition like</p> <p>STATUS_CHOICES = { &quot;ACTIVE&quot;: &quot;Active&quot;, &quot;INACTIVE&quot;: &quot;Inactive&quot;, }</p> <p>with</p> <p>status = models.CharField(choices=STATUS_CHOICES)</p> <p>That automatically gives you get_status_display, ok. But with django-metachoices, we can have a much richer associated info like</p> <p>STATUS_CHOICES = { &quot;ACTIVE&quot;: { &quot;display&quot;: &quot;A",
        "id": 3159302,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1lzgv0v/just_published_djangometachoices_my_first",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Just published django-metachoices, my first open-source package on PyPI",
        "vote": 0
    }
]