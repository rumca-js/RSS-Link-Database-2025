[
    {
        "age": null,
        "album": "",
        "author": "/u/press-ntr",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-16T18:52:53.999500+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-16T18:10:10+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/press-ntr\"> /u/press-ntr </a> <br/> <span><a href=\"https://www.nowsecure.com/blog/2025/07/16/remote-code-execution-discovered-in-xtool-anyscan-app-risks-to-phones-and-vehicles/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/ReverseEngineering/comments/1m1jyz1/how_i_found_an_rce_affecting_phones_and_cars/\">[comments]</a></span>",
        "id": 3182177,
        "language": "",
        "link": "https://www.reddit.com/r/ReverseEngineering/comments/1m1jyz1/how_i_found_an_rce_affecting_phones_and_cars",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 476,
        "source_url": "https://www.reddit.com/r/ReverseEngineering/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "How I found an RCE affecting phones and cars",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Layen-",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-16T17:45:15.311513+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-16T17:13:51+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;m analyzing an Android game (developed under Unity IL2CPP) that communicates with its backend using gRPC. My goal is to understand exactly how gRPC requests are transformed before being sent to the server.</p> <p>More precisely : \u2022 I intercept HTTP/2 requests with the usual gRPC headers. \u2022 The body (grpc-message) appears compressed, encoded or encrypted, before sending </p> <pre><code>\u2022 When I replicate a request, the server responds with: </code></pre> <p>grpc: error unmarshalling request: codec unmarshal: libcipher decoding: flate: corrupt input before offset 4</p> <p>I&#39;m looking for any help or experience on games that apply custom processing to their gRPC messages (modified Protobuf encoding, non-standard compression, native encryption, etc.). If you have already encountered a similar stack (Unity IL2CPP + gRPC + custom compression), or if you can help me identify where and how messages are processed before sending, I would be super grat",
        "id": 3181691,
        "language": "",
        "link": "https://www.reddit.com/r/ReverseEngineering/comments/1m1igbz/unity_il2cpp_grpc_request_custom",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 476,
        "source_url": "https://www.reddit.com/r/ReverseEngineering/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "[Unity IL2CPP] gRPC request custom encoding/encryption \u2013 need help with reverse",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/sutf61",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-07-16T11:06:50.538680+00:00",
        "date_dead_since": null,
        "date_published": "2025-07-16T09:40:54+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/sutf61\"> /u/sutf61 </a> <br/> <span><a href=\"https://www.lucidbitlabs.com/blog/commercial-root-detection-vs-sophisticated-adversary/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/ReverseEngineering/comments/1m18agi/how_we_bypassed_root_detection_in_high_profile/\">[comments]</a></span>",
        "id": 3177898,
        "language": "",
        "link": "https://www.reddit.com/r/ReverseEngineering/comments/1m18agi/how_we_bypassed_root_detection_in_high_profile",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 476,
        "source_url": "https://www.reddit.com/r/ReverseEngineering/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "How we bypassed root detection in high profile Android apps",
        "vote": 0
    }
]