[
    {
        "age": null,
        "album": "",
        "author": "/u/bnovo1997",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-25T20:05:15.813187+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-25T18:26:34+00:00",
        "description": "<table> <tr><td> <a href=\"https://www.reddit.com/r/webscraping/comments/1lkdgaz/puppeteerlike_api_for_android_automation/\"> <img src=\"https://external-preview.redd.it/I4GBbvgPtdKmgkjG7LxyO384csVfjvtM1RodXUNqRIc.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=d19938d78639a1d796490ce46204f1a9402d06c4\" alt=\"Puppeteer-like API for Android automation\" title=\"Puppeteer-like API for Android automation\" /> </a> </td><td> <!-- SC_OFF --><div class=\"md\"><p>Hey everyone, wanted to share something I&#39;ve been working on called Droideer. It&#39;s basically Puppeteer but for Android apps instead of web browsers.</p> <p>I&#39;ve been testing it for a while and figured it might be useful for other developers. Since Puppeteer already nailed browser automation, I wanted to bring that same experience to mobile apps.</p> <p>So now you can automate Android apps using the same patterns you&#39;d use for web automation. Same wait strategies, same element finding logic, same interaction methods. It connec",
        "id": 3019447,
        "language": null,
        "link": "https://www.reddit.com/r/webscraping/comments/1lkdgaz/puppeteerlike_api_for_android_automation",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 467,
        "source_url": "https://www.reddit.com/r/webscraping/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": "https://external-preview.redd.it/I4GBbvgPtdKmgkjG7LxyO384csVfjvtM1RodXUNqRIc.png?width=640&crop=smart&auto=webp&s=d19938d78639a1d796490ce46204f1a9402d06c4",
        "title": "Puppeteer-like API for Android automation",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Few-Ad-3053",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-25T20:05:16.022998+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-25T16:15:46+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi all,</p> <p>I\u2019m trying to scrape seat availability data from AS Roma\u2019s ticket site. The seat info is stored client-side in a JS variable called availableSeats, but I can\u2019t find any API calls or WebSocket connections that update it dynamically.</p> <p>The variable only refreshes when I manually reload the sector/map using a function called mtk.viewer.loadMap().</p> <p>Has anyone encountered this before? How can I scrape live seat availability if there is no dynamic endpoint?</p> <p>Any advice or tips on reverse-engineering such hidden data would be much appreciated!</p> <p>Thanks!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Few-Ad-3053\"> /u/Few-Ad-3053 </a> <br/> <span><a href=\"https://www.reddit.com/r/webscraping/comments/1lk9yi9/as_roma_ticket_site_no_api_for_seat_updates/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/webscraping/comments/1lk9yi9/as_roma_ticket_site_no_api_for_seat_upda",
        "id": 3019448,
        "language": null,
        "link": "https://www.reddit.com/r/webscraping/comments/1lk9yi9/as_roma_ticket_site_no_api_for_seat_updates",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 467,
        "source_url": "https://www.reddit.com/r/webscraping/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "AS Roma ticket site: no API for seat updates?",
        "vote": 0
    }
]