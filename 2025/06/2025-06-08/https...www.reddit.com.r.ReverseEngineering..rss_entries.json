[
    {
        "age": null,
        "album": "",
        "author": "/u/Fatmike-Reddit",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-08T18:00:31.602445+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-08T17:45:31+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Fatmike-Reddit\"> /u/Fatmike-Reddit </a> <br/> <span><a href=\"https://github.com/Fatmike-GH/Fatpack\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/ReverseEngineering/comments/1l6i4s9/fatpack_a_windows_pe_packer_x64_with_lzma/\">[comments]</a></span>",
        "id": 2880737,
        "language": null,
        "link": "https://www.reddit.com/r/ReverseEngineering/comments/1l6i4s9/fatpack_a_windows_pe_packer_x64_with_lzma",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 476,
        "source_url": "https://www.reddit.com/r/ReverseEngineering/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Fatpack: A Windows PE packer (x64) with LZMA compression and with full TLS (Thread Local Storage) support.",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/mttd",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-08T07:10:51.414343+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-08T06:18:13+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/mttd\"> /u/mttd </a> <br/> <span><a href=\"https://arxiv.org/abs/2502.15999\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/ReverseEngineering/comments/1l65d8c/an_smt_formalization_of_mixedprecision_matrix/\">[comments]</a></span>",
        "id": 2877699,
        "language": null,
        "link": "https://www.reddit.com/r/ReverseEngineering/comments/1l65d8c/an_smt_formalization_of_mixedprecision_matrix",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 476,
        "source_url": "https://www.reddit.com/r/ReverseEngineering/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "An SMT Formalization of Mixed-Precision Matrix Multiplication: Modeling Three Generations of Tensor Cores",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/tnavda",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-08T01:45:49.385582+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-08T01:25:29+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/tnavda\"> /u/tnavda </a> <br/> <span><a href=\"https://aoli.al/blogs/jdk-bug/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/ReverseEngineering/comments/1l60gb7/discovering_a_jdk_race_condition_and_debugging_it/\">[comments]</a></span>",
        "id": 2876850,
        "language": null,
        "link": "https://www.reddit.com/r/ReverseEngineering/comments/1l60gb7/discovering_a_jdk_race_condition_and_debugging_it",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 476,
        "source_url": "https://www.reddit.com/r/ReverseEngineering/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Discovering a JDK Race Condition, and Debugging it in 30 Minutes with Fray",
        "vote": 0
    }
]