[
    {
        "age": null,
        "album": "",
        "author": "/u/jaymz168",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-08T16:00:52.911497+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-08T15:15:18+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi, I&#39;d like to work on developing Eurorack audio modules using an embedded platform. I&#39;ve done some light embedded programming before using environments like Arduino and am familiar with using C libraries. </p> <p>I&#39;ve been looking at other Arduino-like &quot;all inclusive&quot; environments for ARM like <a href=\"https://daisy.audio\">https://daisy.audio</a> which is very appealing for a number of reasons but it doesn&#39;t seem like anything similar exists for RISC-V yet. RISC-V mostly appeals to me because it&#39;s the cool new kid on the block.</p> <p>I&#39;m not totally averse to doing the DSP on a Sigma chip or something but if possible I&#39;d like to know about options that could run stereo or even four channels of audio DSP natively. </p> <p>I&#39;m somewhat confused by the options out there and was hoping to get some recommendations on dev boards and SDKs that would work well with a daughtercard with ADCs, DACs, and DSPs or that m",
        "id": 2880027,
        "language": null,
        "link": "https://www.reddit.com/r/RISCV/comments/1l6ejsn/im_mostly_new_with_embedded_development_and_would",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 471,
        "source_url": "https://www.reddit.com/r/RISCV/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "I'm mostly new with embedded development and would like to try RISC-V for audio applications. Which dev boards should I be looking at?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/samumedio",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-08T12:45:22.624725+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-08T12:20:07+00:00",
        "description": "<table> <tr><td> <a href=\"https://www.reddit.com/r/RISCV/comments/1l6au2n/riscv_knowledge_cards_for_learning_the/\"> <img src=\"https://b.thumbs.redditmedia.com/8ydsPsaZLpikWd8Xoa3FrWlGQ0MjPSrfilJInNFRo_s.jpg\" alt=\"RISC-V knowledge cards for learning the foundamentals of Computer Architecture &amp; Boolean Logic\" title=\"RISC-V knowledge cards for learning the foundamentals of Computer Architecture &amp; Boolean Logic\" /> </a> </td><td> <!-- SC_OFF --><div class=\"md\"><p>Hi everyone! I\u2019ve just finished creating an Anki deck focused on RISC-V basics and underlying computer architecture concepts. </p> <p>For those who don&#39;t know, Anki is a popular app for spaced repetition learning, but you can also use it as a knowledge database, if you are not into that. Inside this collection of cards you\u2019ll find:</p> <ul> <li>Explanations of RISC-V processor, calling conventions, and assembly instructions (with SVGs and HTML/CSS embeds for graphics).</li> <li>Sections on boolean logic and finite-sta",
        "id": 2879020,
        "language": null,
        "link": "https://www.reddit.com/r/RISCV/comments/1l6au2n/riscv_knowledge_cards_for_learning_the",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 471,
        "source_url": "https://www.reddit.com/r/RISCV/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": "https://b.thumbs.redditmedia.com/8ydsPsaZLpikWd8Xoa3FrWlGQ0MjPSrfilJInNFRo_s.jpg",
        "title": "RISC-V knowledge cards for learning the foundamentals of Computer Architecture & Boolean Logic",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Quiet-Arm-641",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-08T03:00:57.856924+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-08T02:31:51+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Why can&#39;t I use c.sw here instead of sw? The offsets seem small enough. I feel like I&#39;m about to learn something about the linker. My goal is to align the data segment on a 4k boundary, only do one lui or auipc, and thereafter only use the %lo low offset to access variables, so I don&#39;t have to do an auipc or lui for every store. It works, but I can&#39;t seem to get compressed instructions. Trying to use auipc opens up a whole different can of worms.</p> <pre><code>.section .data .align 12 # align to 4k boundary data_section: var1: .word 123 var2: .word 35 var3: .word 8823 .section .text .globl _start _start: lui a0, %hi(data_section) # absolute addr #auipc a0, %pcrel_hi(data_section) # pcrel addr li a1, 2 sw a1, %lo(var2)(a0) # why is this not c.sw? li a1, 3 sw a1, %lo(var3)(a0) # why is this not c.sw? _end: li a0, 0 # exit code li a7, 93 # exit syscall ecall $ llvm-objdump -M no-aliases -d lui.x lui.x:file format elf32-littleriscv Disass",
        "id": 2877007,
        "language": null,
        "link": "https://www.reddit.com/r/RISCV/comments/1l61nz9/why_cant_i_compress_these_instructions",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 471,
        "source_url": "https://www.reddit.com/r/RISCV/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Why can't I compress these instructions?",
        "vote": 0
    }
]