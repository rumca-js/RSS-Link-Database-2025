[
    {
        "age": null,
        "album": "",
        "author": "/u/thepinkgiraffe123",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-29T23:07:09.982046+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-29T22:51:39+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>**TL;DR:** Your ego operates like rigid OOP code - it bundles data (beliefs about yourself) with methods (behavioral patterns) and resists change. Functional programming offers a better mental model: treat each situation as a pure function with no baggage from previous states. </p> <p>I&#39;ve been thinking about how programming paradigms map to psychology, and there&#39;s a fascinating parallel between object-oriented programming and how our egos work. </p> <p>**The Problem with Mental &quot;Objects&quot;:**<br/> Just like OOP objects, your ego:<br/> - Bundles data with behavior (`self.beliefs = {&quot;smart&quot;: true, &quot;programmer&quot;: true}`)<br/> - Maintains state across method calls<br/> - Resists refactoring because it wants to preserve its properties<br/> - Creates defensive methods to protect its internal state </p> <p>**The Functional Alternative:**<br/> Instead of storing fixed beliefs about yourself, what if you approached identity ",
        "id": 3048141,
        "language": null,
        "link": "https://www.reddit.com/r/programming/comments/1lns046/objectoriented_vs_functional_why_your_ego_needs",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Object-Oriented vs Functional: Why Your Ego Needs Refactoring",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/ColdRepresentative91",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-29T20:56:00.662734+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-29T20:19:33+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Over the past few days I\u2019ve been building a custom 32-bit CPU emulator in java that comes with its own assembler and instruction set. I started on the project for fun, and because I wanted to learn more about CPU architecture and compilers.</p> <p>Highlights:</p> <ul> <li>32-bit little-endian architecture with 32 general-purpose registers</li> <li>Custom assembly language</li> <li>Memory-mapped IO, stack and heap, ROM for syscalls, and RAM/VRAM simulation</li> <li>Malloc and Free implemented syscalls (not tested properly)</li> <li>128\u00d7128 RGBA framebuffer + keyboard and console IO devices</li> <li>Instruction set includes arithmetic, logic, branches, system calls, and shifts</li> <li>Assembler supports labels, immediate values, register addressing, macros, but still expanding</li> </ul> <p>I\u2019d love to hear what you think about this project: ideas, critiques, or even some features you\u2019d like to see added. Would really appreciate any tips, feedback, or ",
        "id": 3047593,
        "language": null,
        "link": "https://www.reddit.com/r/programming/comments/1lnohq1/i_built_a_cpu_emulator_with_its_own_assembler_in",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "I built a CPU emulator with its own assembler in java",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/flox901",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-29T20:56:00.937006+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-29T19:51:40+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/flox901\"> /u/flox901 </a> <br/> <span><a href=\"https://github.com/florianmarkusse/FLOS/blob/master/articles/dynamic-array/article.md\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1lnntna/reimplementing_dynamic_arrays/\">[comments]</a></span>",
        "id": 3047594,
        "language": null,
        "link": "https://www.reddit.com/r/programming/comments/1lnntna/reimplementing_dynamic_arrays",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Reimplementing Dynamic Arrays",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Azad_11014",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-29T19:49:51.973397+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-29T19:36:33+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Built a backend service that sends and auto-replies to emails using #NodeJS and #Nodemailer. Useful for portfolios, contact forms, and production APIs. \ud83d\udc8c</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Azad_11014\"> /u/Azad_11014 </a> <br/> <span><a href=\"https://youtu.be/CbnBAuzwkdw\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1lnngm6/built_an_smtp_email_api_with_nodejs_autoreply/\">[comments]</a></span>",
        "id": 3047296,
        "language": null,
        "link": "https://www.reddit.com/r/programming/comments/1lnngm6/built_an_smtp_email_api_with_nodejs_autoreply",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Built an SMTP Email API with Node.js + Auto-Reply \u2014 Great for Portfolio Projects. Feedback welcome!",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/tikhonjelvis",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-29T19:49:51.574767+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-29T19:31:11+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/tikhonjelvis\"> /u/tikhonjelvis </a> <br/> <span><a href=\"https://jelv.is/blog/Writing-Code-To-Be-Read-at-a-Glance/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1lnnbyc/code_is_skimmed_more_often_than_it_is_written_so/\">[comments]</a></span>",
        "id": 3047295,
        "language": null,
        "link": "https://www.reddit.com/r/programming/comments/1lnnbyc/code_is_skimmed_more_often_than_it_is_written_so",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Code is skimmed more often than it is written, so it should be clear at a glance",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/gregorojstersek",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-29T19:49:52.245562+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-29T19:25:55+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/gregorojstersek\"> /u/gregorojstersek </a> <br/> <span><a href=\"https://newsletter.eng-leadership.com/p/how-to-ace-engineering-manager-interviews\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1lnn7i3/how_to_ace_engineering_manager_interviews/\">[comments]</a></span>",
        "id": 3047297,
        "language": null,
        "link": "https://www.reddit.com/r/programming/comments/1lnn7i3/how_to_ace_engineering_manager_interviews",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "How to Ace Engineering Manager Interviews",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/vipinjoeshi",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-29T19:49:52.597465+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-29T19:04:11+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>\ud83d\udea8Sunday Chill | Coding a watcher in Rust | Live coding <a href=\"https://youtube.com/live/KcIXYZKP6oU?feature=share\">https://youtube.com/live/KcIXYZKP6oU?feature=share</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/vipinjoeshi\"> /u/vipinjoeshi </a> <br/> <span><a href=\"https://youtube.com/live/KcIXYZKP6oU?feature=share\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1lnmolo/coding_a_watcher_in_rust/\">[comments]</a></span>",
        "id": 3047298,
        "language": null,
        "link": "https://www.reddit.com/r/programming/comments/1lnmolo/coding_a_watcher_in_rust",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Coding a watcher in Rust \ud83e\udd80",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/micvbang",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-29T18:44:50.778583+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-29T18:33:19+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/micvbang\"> /u/micvbang </a> <br/> <span><a href=\"https://blog.vbang.dk/2025/06/29/tools-i-love-mise/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1lnlxds/tools_i_love_miseenplace/\">[comments]</a></span>",
        "id": 3046933,
        "language": null,
        "link": "https://www.reddit.com/r/programming/comments/1lnlxds/tools_i_love_miseenplace",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Tools I love: mise(-en-place)",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/DevJonPizza",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-29T18:44:51.320351+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-29T17:51:38+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Build an MCP integrated tool calling agent with structured output using LangChain. Unfortunately LangChain doesn\u2019t have an easy way to do both tool calling and structured output at the same time, so here is a nice workaround I figured out.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/DevJonPizza\"> /u/DevJonPizza </a> <br/> <span><a href=\"https://prompthippo.net/docs/langchain-tool-calling-agent-with-structured-output\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1lnkwe3/tool_calling_agent_with_structured_output_using/\">[comments]</a></span>",
        "id": 3046934,
        "language": null,
        "link": "https://www.reddit.com/r/programming/comments/1lnkwe3/tool_calling_agent_with_structured_output_using",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Tool Calling Agent with Structured Output using LangChain \ud83e\udd9c + MCP Integration",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Mubelotix",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-29T17:39:45.513919+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-29T16:50:53+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I trained a TruncatedSVC model on almost all Github stars to create embeddings for all repositories with more than 150 stars. I figured that could be useful so I fed the data to a <a href=\"https://qdrant.tech\">Qdrant</a> vector store and built an extension on top of it. Hope you like it!</p> <p>The extension is available on both <a href=\"https://addons.mozilla.org/en-GB/firefox/addon/simrepo/\">Firefox</a> and <a href=\"https://chromewebstore.google.com/detail/simrepo/jieoogmcigenidbkgnkaakagdnlnieap?authuser=1&amp;hl=en\">Chrome</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Mubelotix\"> /u/Mubelotix </a> <br/> <span><a href=\"https://github.com/Mubelotix/SimRepo\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1lnjenx/i_built_a_web_extension_showing_similar/\">[comments]</a></span>",
        "id": 3044877,
        "language": null,
        "link": "https://www.reddit.com/r/programming/comments/1lnjenx/i_built_a_web_extension_showing_similar",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "I built a web extension showing similar repositories on Github",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/apeloverage",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-29T17:39:46.054173+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-29T15:47:55+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/apeloverage\"> /u/apeloverage </a> <br/> <span><a href=\"https://www.youtube.com/watch?v=wvmMY_-dK3Y\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1lnhw2t/lets_make_a_game_281_player_character_attacks/\">[comments]</a></span>",
        "id": 3044879,
        "language": null,
        "link": "https://www.reddit.com/r/programming/comments/1lnhw2t/lets_make_a_game_281_player_character_attacks",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Let's make a game! 281: Player character attacks",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/pgaleone",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-29T17:39:46.738900+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-29T15:28:00+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/pgaleone\"> /u/pgaleone </a> <br/> <span><a href=\"https://pgaleone.eu/cloud/2025/06/29/vertex-ai-to-genai-sdk-service-account-auth-python-go/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1lnhezn/from_vertex_ai_sdk_to_google_gen_ai_sdk_service/\">[comments]</a></span>",
        "id": 3044882,
        "language": null,
        "link": "https://www.reddit.com/r/programming/comments/1lnhezn/from_vertex_ai_sdk_to_google_gen_ai_sdk_service",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "From Vertex AI SDK to Google Gen AI SDK: Service Account Authentication for Python and Go",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/marcthe12",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-29T17:39:44.603097+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-29T15:24:00+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/marcthe12\"> /u/marcthe12 </a> <br/> <span><a href=\"https://sudomsg.com/posts/a-primer-on-memory-management/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1lnhbnn/a_primer_on_memory_management/\">[comments]</a></span>",
        "id": 3044873,
        "language": null,
        "link": "https://www.reddit.com/r/programming/comments/1lnhbnn/a_primer_on_memory_management",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "A Primer on Memory Management",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/stmoreau",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-29T17:39:46.290815+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-29T15:04:15+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/stmoreau\"> /u/stmoreau </a> <br/> <span><a href=\"https://www.blog4ems.com/p/3-sunday-reads-for-ems\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1lnguid/sunday_reads_for_ems/\">[comments]</a></span>",
        "id": 3044880,
        "language": null,
        "link": "https://www.reddit.com/r/programming/comments/1lnguid/sunday_reads_for_ems",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Sunday reads for EMs",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Sushant098123",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-29T17:39:45.824442+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-29T13:13:19+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Sushant098123\"> /u/Sushant098123 </a> <br/> <span><a href=\"https://beyondthesyntax.substack.com/p/websocket-ep-1-the-hidden-mechanics\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1lnedoe/websocket_ep_1_the_hidden_mechanics_of_the/\">[comments]</a></span>",
        "id": 3044878,
        "language": null,
        "link": "https://www.reddit.com/r/programming/comments/1lnedoe/websocket_ep_1_the_hidden_mechanics_of_the",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "WebSocket EP 1 - The Hidden Mechanics of the Protocol",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/not-matthias",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-29T17:39:45.281936+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-29T12:42:53+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/not-matthias\"> /u/not-matthias </a> <br/> <span><a href=\"https://not-matthias.github.io/posts/anticheat-update-tracking/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1lndrvx/tracking_anticheat_updates/\">[comments]</a></span>",
        "id": 3044876,
        "language": null,
        "link": "https://www.reddit.com/r/programming/comments/1lndrvx/tracking_anticheat_updates",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Tracking Anticheat Updates",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Previous_Berry9022",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-29T17:39:47.459509+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-29T08:54:08+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I built a CLI tool that brings version control to prompt engineering. It helps developers and prompt engineers manage their AI prompts with features similar to git.</p> <p>Key Features:</p> <p>- Save and version control prompts (like git commits)</p> <p>- Compare different versions (like git diff)</p> <p>- Tag and categorize prompts</p> <p>- Track prompt performance</p> <p>- File-based storage (no database needed)</p> <p>- Support for OpenAI, LLaMA, and Anthropic</p> <p>Tech Stack:</p> <p>- Node.js</p> <p>- OpenAI API</p> <p>- File-based storage</p> <p>- Commander.js for CLI</p> <p>Looking for feedback and contributions! Let me know what features you&#39;d like to see.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Previous_Berry9022\"> /u/Previous_Berry9022 </a> <br/> <span><a href=\"https://github.com/sagarregmi2056/prompthub-cli\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/commen",
        "id": 3044885,
        "language": null,
        "link": "https://www.reddit.com/r/programming/comments/1lna249/prompthubcli_gitstyle_version_control_for_ai",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "prompthub-cli: Git-style Version Control for AI Prompts [Open Source]",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/vturan23",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-29T17:39:46.977530+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-29T08:48:37+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>When Swiggy&#39;s order volume grew four-fold in just under a year, their customer support team faced an unprecedented challenge. Customer queries were flooding in, wait times were increasing, and the traditional support model couldn&#39;t scale. That&#39;s when Swiggy made a strategic decision: build an intelligent chatbot system that could handle customer support at scale while maintaining the high-touch experience customers expected.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/vturan23\"> /u/vturan23 </a> <br/> <span><a href=\"https://www.codetocrack.dev/how-swiggy-designed-and-scaled-its-chatbot-for-millions-of-customer-interactions\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1ln9z7m/how_swiggy_designed_and_scaled_its_chatbot_for/\">[comments]</a></span>",
        "id": 3044883,
        "language": null,
        "link": "https://www.reddit.com/r/programming/comments/1ln9z7m/how_swiggy_designed_and_scaled_its_chatbot_for",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "How Swiggy Designed and Scaled its Chatbot for Millions of Customer Interactions",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/AlexandraLinnea",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-29T17:39:44.370060+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-29T08:26:16+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Tests aren\u2019t just about verifying that the system works, because we could do that (slowly) by hand. The deeper point about tests is that they capture <em>intent</em>. They document what was in our minds when we built the software; what user problems it\u2019s supposed to solve; how the system is supposed to behave in different circumstances and with different inputs.</p> <p>As we\u2019re writing the tests, they serve to help us clarify and organise our thoughts about what we actually want the system to do. Because if we don\u2019t know that, how on earth can we be expected to code it? The first question we need to ask ourselves before writing a test, then, is:</p> <p><strong>What are we really testing here?</strong></p> <p>Until we know the answer to that, we won\u2019t know what test to write. And until we can express the answer in <em>words</em>, ideally as a short, clear sentence, we can\u2019t be sure that the test will accurately capture our intent.</p> <p>So now that we",
        "id": 3044872,
        "language": null,
        "link": "https://www.reddit.com/r/programming/comments/1ln9nho/test_names_should_be_sentences",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Test names should be sentences",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Firm_Mission_7143",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-29T17:39:47.245762+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-29T06:39:07+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>we revealed the <strong>v2.0</strong> recently - with more commands and features .</p> <p>it was using HTTP . for connection before . but now it is using <strong>nuke-wire</strong> <strong>TCP protocol</strong> .</p> <p>the overall performance is also increased very drastically . touching ~2M ops/seconds very frequently in becnmark !</p> <p><strong>Advanced JSON Queries :</strong> Filter, update, search, delete, and append to JSON arrays using intuitive syntax .</p> <p>consider giving it a try . and give us a review - lets make the things more fast \u26a1</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Firm_Mission_7143\"> /u/Firm_Mission_7143 </a> <br/> <span><a href=\"https://github.com/Akshat-Diwedi/nuke-kv\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1ln821s/nukekv_high_performance_keyvalue_store_built_in_c/\">[comments]</a></span>",
        "id": 3044884,
        "language": null,
        "link": "https://www.reddit.com/r/programming/comments/1ln821s/nukekv_high_performance_keyvalue_store_built_in_c",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Nuke-Kv - High performance Key-value store built in C++\u26a1",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Archaya",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-29T17:39:44.147374+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-29T03:56:38+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Archaya\"> /u/Archaya </a> <br/> <span><a href=\"https://store.steampowered.com/news/app/1366540/view/543361383085900510\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1ln5exk/dyson_sphere_program_the_new_multithreading/\">[comments]</a></span>",
        "id": 3044871,
        "language": null,
        "link": "https://www.reddit.com/r/programming/comments/1ln5exk/dyson_sphere_program_the_new_multithreading",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Dyson Sphere Program - The New Multithreading Framework",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/hongminhee",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-29T17:39:46.510270+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-29T02:45:19+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/hongminhee\"> /u/hongminhee </a> <br/> <span><a href=\"https://hackers.pub/@hongminhee/2025/how-to-pass-the-invisible\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1ln461k/how_to_pass_the_invisible/\">[comments]</a></span>",
        "id": 3044881,
        "language": null,
        "link": "https://www.reddit.com/r/programming/comments/1ln461k/how_to_pass_the_invisible",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "How to pass the invisible",
        "vote": 0
    }
]