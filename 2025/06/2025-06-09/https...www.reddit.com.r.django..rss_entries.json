[
    {
        "age": null,
        "album": "",
        "author": "/u/Relevant_Call_4370",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-09T22:28:16.553123+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-09T22:00:20+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey devs,</p> <p>I just finished building a tool I <em>desperately needed</em> when joining messy legacy projects:</p> <p><strong>DevPilot</strong> \u2013 a command-line tool that <strong>explains, refactors, and onboards you to any codebase locally</strong> using your favorite Ollama LLM (like <code>llama2</code>, <code>mistral</code>, or <code>codellama</code>).</p> <h1>What It Does:</h1> <ul> <li>\ud83d\udcc2 <strong>Scans an entire repo or a single file</strong></li> <li>\ud83e\uddf5 <strong>Renders a tree view and highlights important structure</strong></li> <li>\u270d\ufe0f <strong>Generates explanations of what the code does</strong></li> <li>\ud83d\udd0d <strong>Finds anti-patterns, tight coupling, and refactor suggestions</strong></li> <li>\ud83d\udd27 <strong>Supports</strong> <code>--mode</code> <strong>options:</strong> <code>onboard</code><strong>,</strong> <code>explain</code><strong>,</strong> <code>refactor</code></li> <li>\ud83d\udd10 Works offline \u2013 no API keys, no cloud uploads. Fully local. Example U",
        "id": 2889988,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1l7hv1e/just_built_devpilot_instantly_understand_any",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Just Built: DevPilot \u2013 Instantly Understand ANY Codebase Using Local LLMs (No Cloud Required)",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/ANakedSkywalker",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-09T20:17:19.081231+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-09T19:20:29+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi, I&#39;m probably just a dummy but am struggling to config my STORAGES {} to the Cloudflare R2 system. I&#39;m using <a href=\"https://django-storages.readthedocs.io/en/latest/backends/amazon-S3.html\">Django-Storages package</a>. Not getting any errors, but my images are all (?) on the site. </p> <ul> <li>I have storages under installed apps</li> <li>I have my cloudflare keys loaded in .env in my EC2 alongside others</li> <li>My cloudflare account has billing enabled, cc loaded</li> <li>I run collectstatic every deploy (CI/CD pipeline with github actions)</li> <li>I&#39;ve checked and the images are all sitting waiting in the cloudflare bucket ready to serve.</li> <li>Prior to this they were serving fine from the EC2 itself</li> </ul> <p>I&#39;m sure it&#39;s simple, I&#39;m so close. What did I miss?</p> <pre><code>STORAGES = { &quot;default&quot;: { &quot;BACKEND&quot;: &quot;storages.backends.s3boto3.S3Boto3Storage&quot;, &quot;OPTIONS&quot;: { &",
        "id": 2889039,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1l7dryc/help_request_configuring_djangostorages_using",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Help request - Configuring django-storages using Cloudflare R2 & AWS EC2",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/dwaxe",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-09T20:17:19.229578+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-09T19:02:17+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/dwaxe\"> /u/dwaxe </a> <br/> <span><a href=\"https://www.djangoproject.com/weblog/2025/jun/09/django-fellow-applicants-2025/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1l7dap1/dsf_calls_for_applicants_for_a_django_fellow/\">[comments]</a></span>",
        "id": 2889040,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1l7dap1/dsf_calls_for_applicants_for_a_django_fellow",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "DSF calls for applicants for a Django Fellow",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/OrdinaryAdmin",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-09T17:55:36.490863+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-09T16:34:11+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I am trying to convert my Django app from using Poetry to UV. I&#39;m having a hell of a time trying to get UV to work in Docker though -- the app starts but can&#39;t be reached from a browser. This was previously working fine with Poetry. You can find the code <a href=\"https://mystb.in/c42ee2624d052cc457\">here</a>.</p> <p>In my app&#39;s production logs I get the following:</p> <pre><code>[orpheum] [2025-06-09 16:18:09] [ENTRYPOINT]: Applying migrations... [orpheum] [2025-06-09 16:18:14] Operations to perform: [orpheum] [2025-06-09 16:18:14] Apply all migrations: admin, appnotifications, apps, articles, auth, authtoken, contenttypes, sessions, social, trmnl, users [orpheum] [2025-06-09 16:18:14] Running migrations: [orpheum] [2025-06-09 16:18:14] No migrations to apply. [orpheum] [2025-06-09 16:18:15] [ENTRYPOINT]: Starting production server [orpheum] [2025-06-09 16:18:16] [2025-06-09 16:18:16 +0000] [11] [INFO] Starting gunicorn 23.0.0 [orpheum] [2",
        "id": 2887264,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1l79g70/unable_to_use_uv_with_django_in_docker",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Unable to use UV with Django in Docker",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Prajwal_M_Dixit",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-09T17:55:36.341165+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-09T16:04:50+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I have Django REST APIs that only make database calls using the ORM and external API calls using the Python <code>requests</code> package.<br/> Is it really worth using the <code>gthread</code> class?<br/> I am using 2 workers with 4 threads.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Prajwal_M_Dixit\"> /u/Prajwal_M_Dixit </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1l78ovj/does_it_make_sense_to_use_fully_synchronous/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1l78ovj/does_it_make_sense_to_use_fully_synchronous/\">[comments]</a></span>",
        "id": 2887263,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1l78ovj/does_it_make_sense_to_use_fully_synchronous",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Does it make sense to use fully synchronous Django REST APIs with Gunicorn using the gthread worker class?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Ok-Platypus2775",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-09T17:55:36.157135+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-09T15:14:44+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><blockquote> <p><em>I\u2019m a Full Stack developer and have been using Django seriously for the past few year for my personal and organization projects. The more I use it, the more I feel it\u2019s one of the most powerful and reliable web frameworks out there. But at the same time, I keep noticing that Django doesn\u2019t get the hype or recognition it deserves in modern development circles.</em></p> </blockquote> <p><strong><em>Here\u2019s my perspective on why Django feels underrated today, what limitations I\u2019ve personally run into, and what I think could make it the go-to framework again in the modern dev world.</em></strong></p> <ol> <li><strong>Django isn&#39;t designed for SPAs by default Right now</strong>, the industry heavily leans toward frontend frameworks like React, Vue, Svelte, etc. Django is still very template-focused out of the box. And yes, Django REST Framework (DRF) helps a lot, but it doesn\u2019t feel like the framework is meant to play well with modern J",
        "id": 2887262,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1l77epz/why_django_feels_underrated_in_modern_development",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Why Django Feels Underrated in Modern Development \u2014 A Take on Its Limitations and Future Potential",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/manjurulhoque",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-09T07:58:14.163115+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-09T07:04:01+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey everyone!</p> <p><a href=\"https://preview.redd.it/yrne6e32pu5f1.png?width=1850&amp;format=png&amp;auto=webp&amp;s=5523c760fc503db8242252ede36f40e38dcb99bb\">Home page</a></p> <p>I just finished <strong>building an e-bike rental platform</strong> and wanted to share it with you all. It&#39;s basically like Airbnb but for electric bikes.What it does:</p> <ul> <li>People can list their e-bikes for rent</li> <li>Others can search and book those bikes</li> <li>Has a booking system with calendar dates</li> <li>Photo uploads for bike listings</li> <li>User reviews and ratings</li> <li>Mobile responsive design</li> </ul> <p>Tech I used:</p> <ul> <li>Backend: Django REST Framework + PostgreSQL</li> <li>Frontend: React + TypeScript + Tailwind CSS</li> <li>Authentication with JWT tokens</li> </ul> <p>Features I&#39;m proud of:</p> <ul> <li>You can filter bikes by type, location, and price</li> <li>The booking process is pretty smooth (date picker, payment inf",
        "id": 2883206,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1l6y8q5/built_my_another_fullstack_ebike_rental_platform",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Built my another full-stack e-bike rental platform - Django + React",
        "vote": 0
    }
]