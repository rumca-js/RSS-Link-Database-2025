[
    {
        "age": null,
        "album": "",
        "author": "/u/Ratusca1233",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-27T18:55:37.968763+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-27T18:25:13+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>We&#39;re looking for help from experienced reverse engineers, programmers, and anyone passionate about classic PC games to decompile Jurassic Park: Operation Genesis (2003). Our goal is to unlock its full modding capabilities, from adding new dinosaur behavior to expanding terrain limits and engine features.</p> <p>While JPOG already has a small but dedicated modding scene, the tools are severely limited by the lack of source access. With a clean decompilation, we could open up new possibilities for modders and maybe even content creators, revive the community, and preserve this gem of a game for future generations.</p> <p>If you&#39;ve got skills with Ghidra and Visual Studio or just want to contribute to preserving gaming history, we\u2019d love your help!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Ratusca1233\"> /u/Ratusca1233 </a> <br/> <span><a href=\"https://github.com/AdventureT/OpenJPOG?tab=readme-ov-file\"",
        "id": 3036962,
        "language": null,
        "link": "https://www.reddit.com/r/ReverseEngineering/comments/1lm17nb/help_decompilate_jpog",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 476,
        "source_url": "https://www.reddit.com/r/ReverseEngineering/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Help Decompilate JPOG!",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Much_Ad_6840",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-27T09:10:37.099346+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-27T08:40:47+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I\u2019ve been trying for days but i\u2019m still stuck on the last objective<br/> 1. Attempt to log in (obtain username and password) </p> <ol> <li><p>Best gameplay time</p></li> <li><p>Obtain the administrator username and password of <a href=\"http://192.168.1.100\">192.168.1.100</a></p></li> <li><p>Capture the flag: CTF({flag here})<br/> Thanks in advance! </p></li> </ol> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Much_Ad_6840\"> /u/Much_Ad_6840 </a> <br/> <span><a href=\"https://tofurapper.github.io/terminal/terminal.html\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/ReverseEngineering/comments/1llouo9/can_anyone_help_with_this_cybersecurity_challenge/\">[comments]</a></span>",
        "id": 3032275,
        "language": null,
        "link": "https://www.reddit.com/r/ReverseEngineering/comments/1llouo9/can_anyone_help_with_this_cybersecurity_challenge",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 476,
        "source_url": "https://www.reddit.com/r/ReverseEngineering/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Can anyone help with this cybersecurity challenge",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Fatmike-Reddit",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-27T08:05:34.597372+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-27T07:24:27+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Many implementations of PE loaders (manual mappers) struggle with proper TLS (Thread Local Storage) support. A common but often insufficient approach is to simply iterate over the TLS callbacks and invoke them with the <code>DLL_PROCESS_ATTACH</code> parameter. While this may work for some executables, it is inadequate for Rust binaries and other applications with more complex TLS initialization requirements.</p> <p>My manual mapper addresses this issue. A write-up of the implementation and concept is available in the README, along with a small sample application that serves as a proof of concept.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Fatmike-Reddit\"> /u/Fatmike-Reddit </a> <br/> <span><a href=\"https://github.com/Fatmike-GH/PELoader\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/ReverseEngineering/comments/1llnrjx/a_windows_executable_pe_loader_x86_and_x64_with/\">[comments]</a></span>",
        "id": 3031991,
        "language": null,
        "link": "https://www.reddit.com/r/ReverseEngineering/comments/1llnrjx/a_windows_executable_pe_loader_x86_and_x64_with",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 476,
        "source_url": "https://www.reddit.com/r/ReverseEngineering/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "A Windows executable (PE) loader (x86 and x64) with full TLS (Thread Local Storage) support (manual mapper)",
        "vote": 0
    }
]