[
    {
        "age": null,
        "album": "",
        "author": "/u/truedreamer1",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-06T20:30:24.202326+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-06T19:29:55+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>see how you can analyze a suspicious binary and identify it as potential ransomware with just one chat &quot;can u analyze this PE binary? Is it malicious? what could it be?&quot; <a href=\"https://drbinary.ai/chat/8fce9ac3-751c-468f-93e4-f08a125896af\">https://drbinary.ai/chat/8fce9ac3-751c-468f-93e4-f08a125896af</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/truedreamer1\"> /u/truedreamer1 </a> <br/> <span><a href=\"https://drbinary.ai/chat/8fce9ac3-751c-468f-93e4-f08a125896af\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/ReverseEngineering/comments/1l51812/identify_ransomware_using_llm/\">[comments]</a></span>",
        "id": 2868870,
        "language": null,
        "link": "https://www.reddit.com/r/ReverseEngineering/comments/1l51812/identify_ransomware_using_llm",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 476,
        "source_url": "https://www.reddit.com/r/ReverseEngineering/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Identify ransomware using LLM",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/HnamTeiv",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-06T17:15:52.776843+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-06T16:20:29+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><h1>hooking?)</h1> <p>Hi everyone,</p> <p>I&#39;m playing an old Flash game that originally ran on the web using an embedded <code>.swf</code> file. However, nowadays most users play it using auto clients (bots) instead of the original game client provided by the publisher.</p> <p>These auto clients are <em>far</em> more optimized and feature-rich than the official client. What really puzzles me is that they somehow add new UI windows and features that never existed in the original game. I&#39;m guessing they may have modified the <code>.swf</code> file somehow to inject these new interfaces, but that raises a big question:</p> <p>The game is still active and updates weekly (with new events and data). If the UI is being added by modifying the <code>.swf</code>, wouldn&#39;t that mean the devs of the auto client have to patch their version every single week? That doesn\u2019t seem to be the case\u2014I don\u2019t have to download a new auto client every week.</p> <p>A f",
        "id": 2867452,
        "language": null,
        "link": "https://www.reddit.com/r/ReverseEngineering/comments/1l4wknz/how_do_flash_game_auto_clients_work_ui_injection",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 476,
        "source_url": "https://www.reddit.com/r/ReverseEngineering/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "How do Flash game auto clients work? (UI injection, SWF hooking?)",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/eshard-cybersec",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-06-06T11:50:26.637070+00:00",
        "date_dead_since": null,
        "date_published": "2025-06-06T11:38:06+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Our journey with the iOS emulator continues. On this part 2 we show how we reached the home screen, enabled multitouch, unlocked network access, and started running real apps.</p> <p>Our work is a continuation of Aleph Research, Trung Nguyen and ChefKiss. The current state of ChefKiss allows you to have the iOS UI if you apply binary patches on the OS. </p> <p>We will publish binary patches later as open source.</p> <p>Here&#39;s the part 1: <a href=\"https://eshard.com/posts/emulating-ios-14-with-qemu\">https://eshard.com/posts/emulating-ios-14-with-qemu</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/eshard-cybersec\"> /u/eshard-cybersec </a> <br/> <span><a href=\"https://eshard.com/posts/emulating-ios-14-with-qemu-part2\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/ReverseEngineering/comments/1l4q7ho/emulating_an_iphone_in_qemu_part_2/\">[comments]</a></span>",
        "id": 2864765,
        "language": null,
        "link": "https://www.reddit.com/r/ReverseEngineering/comments/1l4q7ho/emulating_an_iphone_in_qemu_part_2",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 476,
        "source_url": "https://www.reddit.com/r/ReverseEngineering/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Emulating an iPhone in QEMU (Part 2)",
        "vote": 0
    }
]