[
    {
        "age": null,
        "album": "",
        "author": "/u/xigurat",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-09T19:14:02.067373+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-09T18:11:49+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>When writing an app with HTMX, there are recurrent patterns that you deal with:</p> <p>- Endpoints for hx-post, hx-get, ...<br/> - Parameters that need to be validated when passed to those enpoints.<br/> - Certain template rendering patterns, where some templates render partially with the same context.</p> <p>So 4 years ago I thought what if we make React/Vue like components that have, state, parameters, event handlers, and a template, and this is what you get.</p> <p>DjHTMX: <a href=\"http://github.com/edelvalle/djhtmx\">github.com/edelvalle/djhtmx</a></p> <p>I had been using this for 5 years now in production, it had evolved a lot over the years and just published it as 1.0.0 last week.</p> <p>At first it had all the state of the component on the front-end and was quite simple, but as the system I develop with this became more complex sometimes a single click was sending 1Mb in post to the back-end. That&#39;s why now the state of the components is st",
        "id": 3292410,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mlw5i0/djhtmx_stateful_components_using_htmx",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "djhtmx: Stateful components using HTMX",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/ReputationMost8858",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-09T14:55:13.526669+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-09T14:13:53+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ReputationMost8858\"> /u/ReputationMost8858 </a> <br/> <span><a href=\"/r/FreelanceProgramming/comments/1mlqfv0/hello_everyone_if_you_need_hand_in_web/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1mlqgdg/hello_everyone_if_you_need_hand_in_web/\">[comments]</a></span>",
        "id": 3291044,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mlqgdg/hello_everyone_if_you_need_hand_in_web",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Hello everyone, if you need hand in web development for the weekend hit me up im available.",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Any-Data1138",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-09T13:50:31.852360+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-09T12:46:50+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi<br/> I built drf-shapeless-serializers to solve Django REST Framework&#39;s serializer hell. No more creating endless serializer classes for minor variations!</p> <h1>What this Project Does</h1> <p>Eliminates serializer hell by enabling dynamic runtime configuration of DRF serializers, reducing boilerplate by up to 80% while maintaining full functionality.</p> <h1>Target Audience</h1> <p>Production-ready for Django developers who need:</p> <ul> <li>Multiple API versions</li> <li>Flexible data representations</li> <li>Complex nested serialization</li> <li>Rapid API development</li> </ul> <h1>Comparison</h1> <p>Unlike traditional DRF serializers that require static class definitions, drf-shapeless-serializers offers:</p> <ul> <li><strong>Runtime configuration</strong> instead of class-based</li> <li><strong>Dynamic nesting</strong> instead of fixed relationships</li> <li><strong>Minimal boilerplate</strong> instead of repetitive class definitions</li",
        "id": 3290702,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mlol6i/drfshapelessserializers_escape_djangos_serializer",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "drf-shapeless-serializers: Escape Django's Serializer Hell with Dynamic Runtime Magic",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/thibaudcolas",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-09T10:34:48.830985+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-09T09:40:20+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/thibaudcolas\"> /u/thibaudcolas </a> <br/> <span><a href=\"https://www.djangoproject.com/weblog/2025/aug/09/django-accessibility-contributing-guide/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1mllgi4/djangos_accessibility_contributing_guide/\">[comments]</a></span>",
        "id": 3289849,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mllgi4/djangos_accessibility_contributing_guide",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Django\u2019s accessibility contributing guide",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/TwoRelative9420",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-09T01:54:54.592978+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-09T01:23:49+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Here\u2019s a ready-to-publish <strong>full Reddit post</strong> using your workflow and code so it looks clean, informative, and shareable in dev communities like <a href=\"/r/django\">r/django</a>, <a href=\"/r/webdev\">r/webdev</a>, or <a href=\"/r/learnprogramming\">r/learnprogramming</a>:</p> <p><strong>Title:</strong> \ud83d\ude80 Build a Modern Django App with Tailwind, Vite, HTMX, and Alpine.js \u2013 Step-by-Step Guide</p> <p>Hey folks \ud83d\udc4b</p> <p>I recently created a workflow to integrate <strong>Django</strong> with modern frontend tools like <strong>Tailwind CSS</strong>, <strong>Vite</strong>, <strong>HTMX</strong>, and <strong>Alpine.js</strong>.<br/> This setup gives you fast builds, dynamic interactivity without heavy JS frameworks, and a clean developer experience.</p> <p>Here\u2019s the full <strong>step-by-step guide</strong> \u2b07\ufe0f</p> <h1>\ud83d\udee0 Step-by-Step Workflow</h1> <h1>1\ufe0f\u20e3 Create &amp; Configure Django Project</h1> <pre><code>python -m venv .venv pip install django d",
        "id": 3288112,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mlcvzo/modern_django_frontend_tailwind_css_vite_alpinejs",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "\ud83d\udca1 Modern Django Frontend: Tailwind CSS + Vite + Alpine.js + HTMX in One Project (Step-by-Step Guide)",
        "vote": 0
    }
]