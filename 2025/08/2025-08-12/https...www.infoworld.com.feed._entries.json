[
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-12T15:26:20.581844+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-12T14:47:04+00:00",
        "description": "<div id=\"remove_no_follow\">\n\t\t<div class=\"grid grid--cols-10@md grid--cols-8@lg article-column\">\n\t\t\t\t\t  <div class=\"col-12 col-10@md col-6@lg col-start-3@lg\">\n\t\t\t\t\t\t<div class=\"article-column__content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n\n<p>Many modern development teams incorporate devops, site reliability engineering (SRE), and platform engineering \u2014 or at least they claim to. But figuring out what each of these buzzwords actually means can be a slippery proposition, and at first glance they cover much of the same ground. \u00a0</p>\n\n\n\n<p>We spoke to a number of developers and engineering leaders (some of whom have one or more of these terms in their job title) to get their take on how devops, SRE, and platform engineering differ, and how they overlap. <a href=\"https://www.linkedin.com/in/dtyumentsev/?originalSubdomain=cy\">Denis Tiumentsev</a>, who\u2019s currently lead devops engineer at Integro Technologies but has worked in all three are",
        "id": 3312332,
        "language": "en-US",
        "link": "https://www.infoworld.com/article/4037775/devops-sre-and-platform-engineering-whats-the-difference.html",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 468,
        "source_url": "https://www.infoworld.com/feed/",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Devops, SRE and platform engineering: What\u2019s the difference?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-12T10:01:57.199505+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-12T09:00:00+00:00",
        "description": "<div id=\"remove_no_follow\">\n\t\t<div class=\"grid grid--cols-10@md grid--cols-8@lg article-column\">\n\t\t\t\t\t  <div class=\"col-12 col-10@md col-6@lg col-start-3@lg\">\n\t\t\t\t\t\t<div class=\"article-column__content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n\n<p>I started my career as an architect and coder working on <a href=\"https://www.infoworld.com/article/2338768/the-engines-of-ai-machine-learning-algorithms-explained.html\">AI algorithms</a> for image processing, <a href=\"https://www.infoworld.com/article/2260903/what-is-natural-language-processing-ai-for-speech-and-text.html\">natural language processing</a>, and search. Flash-forward to today, my coding is limited to <a href=\"https://www.infoworld.com/article/2268355/what-is-low-code-development-faster-app-creation.html\">low-code platforms</a> to perform basic automation, data collection, and other business functions.</p>\n\n\n\n<p>But last summer, I was migrating <a href=\"https://drive.starcio.com/\">",
        "id": 3309757,
        "language": "en-US",
        "link": "https://www.infoworld.com/article/4032989/a-developers-guide-to-code-generation.html",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 468,
        "source_url": "https://www.infoworld.com/feed/",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "A developer\u2019s guide to code generation",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-12T10:01:57.402335+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-12T09:00:00+00:00",
        "description": "<div id=\"remove_no_follow\">\n\t\t<div class=\"grid grid--cols-10@md grid--cols-8@lg article-column\">\n\t\t\t\t\t  <div class=\"col-12 col-10@md col-6@lg col-start-3@lg\">\n\t\t\t\t\t\t<div class=\"article-column__content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n\n<p>The rapid growth of model catalogs from hyperscalers and third-party providers is creating an environment where the heavy lifting of model hosting, versioning, monitoring, and billing can be outsourced. I appreciate others\u2019 model efforts because they reduce my workload, allowing me to focus on designing, developing, deploying, and hosting these models. This shift reduces some of the friction developers face, but it also raises new questions about vendor lock-in, developer experience, and how value is shared between creators, platform operators, and customers.</p>\n\n\n\n<p>Model as a service (MaaS) refers to digital platforms or cloud-based environments where <a href=\"https://www.infoworld.com/artic",
        "id": 3309758,
        "language": "en-US",
        "link": "https://www.infoworld.com/article/4037771/the-rise-of-ai-model-as-a-service-ecosystems.html",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 468,
        "source_url": "https://www.infoworld.com/feed/",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "The rise of AI model-as-a-service ecosystems",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-12T01:20:13.858417+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-12T01:13:52+00:00",
        "description": "<div id=\"remove_no_follow\">\n<body><div class=\"grid grid--cols-10@md grid--cols-8@lg article-column\">\n\t\t\t\t\t  <div class=\"col-12 col-10@md col-6@lg col-start-3@lg\">\n\t\t\t\t\t\t<div class=\"article-column__content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n\n<p>The Rust team has released Rust 1.89.0 stable, an update to the fast and safe programming language that features support for explicitly inferred arguments to const generics.</p>\n\n\n\n<p>The Rust release team announced the new version on <a href=\"https://blog.rust-lang.org/2025/08/07/Rust-1.89.0/\">August 7</a>.\u00a0Developers who have a previous version of Rust installed via rustup can get Rust 1.89 by running the command <code>rustup update stable</code>. </p>\n\n\n\n<p>With Rust 1.89, Rust now supports <code>_</code> as an argument to const generic parameters, inferring the value from surrounding context. The Rust release team provided an example in its announcement of the release: </p>\n\n\n\n<p>\n</p><p",
        "id": 3307660,
        "language": "en-US",
        "link": "https://www.infoworld.com/article/4037813/rust-1-89-underscores-arguments-to-const-generics.html",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 468,
        "source_url": "https://www.infoworld.com/feed/",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Rust 1.89 underscores arguments to const generics",
        "vote": 0
    }
]