[
    {
        "age": null,
        "album": "",
        "author": "/u/mugwhyrt",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-23T23:48:46.486250+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-23T23:38:53+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;ve been trying to set up a django application on my VPS using cloudpanel with nginx but keep running into issues when it comes to actually serving static files. I&#39;ve tried a few different guides on setting up a django project with cloudpanel with lots of mixed results. I&#39;ve settled on this <a href=\"https://acaippa.com/blogs/5/\">guide here</a> which has gotten me the farthest so far.</p> <p>The site runs and I can access it via browser fine, but get 404 errors on the GET requests for any static files. One issue I&#39;ve run into across the different guides is very inconsistent and sometimes no instructions on how to handle the static files with Cloudpanel and Nginx.</p> <p>Some guides specify setting instructions like so in the related config file for nginx (under the Vhost tab in cloudpanel):</p> <pre><code> location /static/ { alias /home/[cloudpanel user]/htdocs/[website name]/[static root directory]/; } </code></pre> <p>Some guides wi",
        "id": 3403063,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mygm8f/trouble_serving_static_files_with_cloudpanel_and",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Trouble Serving Static Files with Cloudpanel and Nginx",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/WebGlum8383",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-23T17:06:26.048435+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-23T16:58:23+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hello I recently deployed my django project on vercel because i am unable to pay for another service i was able to do everything but my css does not work, i made use of djangotailwind when i inspect element i see some errors i do not understand like -Refused to apply style from &#39;<a href=\"https://asteroid-mrcxakiqv-dcitos-projects.vercel.app/static/css/dist/styles.css\">https://asteroid-mrcxakiqv-dcitos-projects.vercel.app/static/css/dist/styles.css</a>&#39; because its MIME type (&#39;text/html&#39;) is not a supported stylesheet MIME type, and strict MIME checking is enabled.</p> <p>-This page failed to load a stylesheet from a URL. 1 source (index):17 then inside index there was this \u201cContent unavailable. Resource was not cached \u201c i know it can access my static files because i can see them but they are not styled.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/WebGlum8383\"> /u/WebGlum8383 </a> <br/> <span><",
        "id": 3401247,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1my6q1e/issue_with_tailwind_when_project_deployed",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Issue with tailwind when project deployed",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/OrdinaryAdmin",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-23T17:06:26.242194+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-23T16:31:02+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I am trying to run my Dockerized Django app&#39;s unit tests in my CI pipeline. However, this requires populating environment variables as my Django settings pull from them. Is there a best-practice for populating the envars for Django in CI? Should I pass them as CI variables? Provide defaults for every setting so there is a fallback? Use a separate CI-specific settings module? So many options.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/OrdinaryAdmin\"> /u/OrdinaryAdmin </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1my60qg/running_django_unit_tests_in_ci/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1my60qg/running_django_unit_tests_in_ci/\">[comments]</a></span>",
        "id": 3401248,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1my60qg/running_django_unit_tests_in_ci",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Running Django unit tests in CI",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/tomdekan",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-23T17:06:25.767546+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-23T16:26:59+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi everyone,</p> <p>I&#39;ve used Next.js extensively over the past year (thus me posting less on here). I&#39;ve concluded that Django is much better: it&#39;s simpler, faster to develop with - from the start and later.</p> <p>But Next.js does have a great feature over Django - type safety. This is really powerful and eliminates a whole class of bugs.</p> <p>So, I&#39;ve created a simple guide that attempts to add the very best part of Next.js, which is type safety across the stack, when building a Django and React app.</p> <p>The magic: We auto-generate types for our front-end React client from the Django Ninja OpenAPI schema.</p> <p>(Django Ninja is great btw)</p> <p>Guide is here if interested: <a href=\"https://tomdekan.com/articles/typed-django-react\">https://tomdekan.com/articles/typed-django-react</a></p> <p>I&#39;ve just uploaded the accompanying guide to my channel. Will add to the guide later on.</p> </div><!-- SC_ON --> &#32; submitted by &",
        "id": 3401246,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1my5x40/create_a_django_and_react_app_with_autogenerated",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Create a Django and React app with auto-generated Django types",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/SUPRA_1934",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-23T16:01:49.003737+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-23T15:38:26+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi everyone, I\u2019m at an intermediate level with Django. I can build complete apps (blogs, portfolios, small business sites), but I feel my code structure isn\u2019t production-ready.</p> <p>I\u2019d love some advice on:</p> <p>Organizing apps in larger projects</p> <p>Splitting responsibilities (views, services, utils, etc.)</p> <p>Best practices for models, signals, serializers</p> <p>When to use FBVs vs CBVs</p> <p>Recommended folder/project structure for long-term maintainability</p> <p>If you\u2019ve worked on Django in a professional/team environment, what patterns or practices really helped you? Links to resources or examples would be great too.</p> <p>Thanks!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/SUPRA_1934\"> /u/SUPRA_1934 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1my4oap/best_practices_for_structuring_django_projects/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/djan",
        "id": 3400885,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1my4oap/best_practices_for_structuring_django_projects",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Best practices for structuring Django projects?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/BlockChainGeek-4567",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-23T13:51:02.974891+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-23T13:24:43+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I am a Python developer. Now I do have experience in various Python frameworks like <strong>Django</strong>, <strong>Flask</strong> &amp; <strong>FastAPI</strong>. Now, however in every interview the interviewer asks me how would you choose between these three if you had to build a large-scale web application, I fumble. I have looked all over the web for answers and haven&#39;t found a convincing one. How do we evaluate web frameworks for any requirement of a web application?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/BlockChainGeek-4567\"> /u/BlockChainGeek-4567 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1my1dzw/analyzing_web_frameworks/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1my1dzw/analyzing_web_frameworks/\">[comments]</a></span>",
        "id": 3400165,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1my1dzw/analyzing_web_frameworks",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Analyzing Web Frameworks",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/BlockChainGeek-4567",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-23T13:51:03.199685+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-23T13:23:55+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I am a Python developer. Now I do have experience in various Python frameworks like <strong>Django</strong>, <strong>Flask</strong> &amp; <strong>FastAPI</strong>. Now, however in every interview the interviewer asks me how would you choose between these three if you had to build a large-scale web application, I fumble. I have looked all over the web for answers and haven&#39;t found a convincing one. How do we evaluate web frameworks for any requirement of a web application?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/BlockChainGeek-4567\"> /u/BlockChainGeek-4567 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1my1de0/analyzing_web_frameworks/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1my1de0/analyzing_web_frameworks/\">[comments]</a></span>",
        "id": 3400166,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1my1de0/analyzing_web_frameworks",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Analyzing Web Frameworks",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Numerous-Law5392",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-23T13:51:03.421131+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-23T13:15:46+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>My Django app needs to support both single-record and batch (1,000+) CRUD operations on a model. For single records, I rely on model-level validation: custom field validators (e.g., field_a = CharField(..., validators=[validate_field_a])), cross-field validation in clean(), and a save() override that calls full_clean() before persisting.</p> <p>This works fine for individual records, but many of the validations involve database lookups or external API calls. In a batch scenario (e.g., saving 10,000 records), calling save() on each record is extremely inefficient, since it repeats the same query or API call 10,000 times. Ideally, validations could be done in bulk with a single DB query or API request that considers all records together.</p> <p>To work around this, I\u2019ve been writing custom batch validation logic in both the admin panel and API views, so that validations can run once per batch. The problem is that this duplicates logic: I now maintain va",
        "id": 3400167,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1my16s1/how_to_unify_single_batch_records_data_validation",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "How to unify single & batch records data validation and save?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/stationarycrisis21",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-23T10:36:11.689604+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-23T10:02:02+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I am building ORM from scratch I am doing it for fun only and I am a student.</p> <p>I have like this in <a href=\"http://model.py\">model.py</a></p> <pre><code>from ..rubrics.rubric import Field # Model diary to track the models MODEL_DIARY = [] class RootModel(type): &quot;&quot;&quot;Metaclass for all ORM models. Automatically generates table names, collects field information, and registers models in the MODEL_DIARY for migration tracking. &quot;&quot;&quot; def __new__(cls, name, bases, attrs): # Generate table name table_name = name.lower() + &#39;s&#39; # Don&#39;t collect field info yet - just identify fields and check for duplicates unique_field_names = set() field_attrs = {} primary_key_fields = [] for key, value in attrs.items(): if isinstance(value, Field): if key in unique_field_names: raise ValueError( f&quot;Duplicate field name &#39;{key}&#39; in model {name}&quot; ) unique_field_names.add(key) field_attrs[key] = value if getattr(value, &",
        "id": 3399225,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mxxggo/i_am_working_on_a_project_to_build_sorm_which_is",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "I am working on a project to build sORM which is inspired from Django ORM",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/aksy_1",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-23T10:36:11.860457+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-23T09:48:43+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Could you please provide information on viable remote side hustle jobs that will be effective in 2025?</p> <p>if you can share the link kindly share it.. and tell me how to do it</p> <p>Thanks in advance</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/aksy_1\"> /u/aksy_1 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1mxx8qs/side_hustle_jobs_in_2025/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1mxx8qs/side_hustle_jobs_in_2025/\">[comments]</a></span>",
        "id": 3399226,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mxx8qs/side_hustle_jobs_in_2025",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "side hustle jobs in 2025",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Samriddha_9619",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-23T06:15:42.002419+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-23T05:54:42+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Title</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Samriddha_9619\"> /u/Samriddha_9619 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1mxthf6/i_am_making_a_leaderboard_site_for_showing/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1mxthf6/i_am_making_a_leaderboard_site_for_showing/\">[comments]</a></span>",
        "id": 3398213,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mxthf6/i_am_making_a_leaderboard_site_for_showing",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "I am making a leaderboard site for showing leetcode and GitHub combined and it has legit fried my brains so is there any good GitHub repos that I can take inspiration from",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/RIGA_MORTIS",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-23T04:05:44.839432+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-23T03:58:16+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey everyone, working on a Django + DRF project where I need to implement attribute-based access control that goes beyond the standard Django permissions model.</p> <p>Context: I&#39;ve got a dashboard frontend that needs to conditionally render UI components based on user permissions that are determined server-side. Think stuff like:</p> <p>Showing/hiding specific tabs or sections based on user attributes + resource properties Enabling/disabling actions on list items based on ownership, department, or time-based rules Dynamic form field access based on user role + object state Right now I&#39;m using Django&#39;s built-in permissions for basic CRUD, but I need something more flexible that can handle rules like &quot;users can edit documents they created, but only if the document is in draft status and they&#39;re in the same department as the original author.&quot;</p> <p>The challenge: I want to send these permission decisions to the frontend effici",
        "id": 3397787,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mxrf1z/django_abac_implementation_handling_finegrained",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Django ABAC implementation - handling fine-grained permissions across API boundaries?",
        "vote": 0
    }
]