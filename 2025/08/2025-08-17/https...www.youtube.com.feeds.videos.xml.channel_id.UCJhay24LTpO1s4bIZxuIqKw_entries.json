[
    {
        "age": null,
        "album": "",
        "author": "ACCU Conference",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-17T15:51:02.306201+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-17T14:01:00+00:00",
        "description": "ACCU Membership: https://tinyurl.com/ydnfkcyn\n---\n\nIf Writing C++ Coroutines Goes Over My Head, Where Do I Even Begin with Debugging? - Andr\u00e9 Brand - ACCU 2025\n---\n\nDo we even stand a chance if Kernighan's law holds true: \"Debugging is twice as hard as writing the code in the first place\"? The situation seems bleak at first. Even years after coroutines were introduced as a language feature, we're still missing the promised software libraries and standardized terminology that were supposed to make things easier. We've finally settled on std::generator-viewed by some as a divine promise-but it's not even truly asynchronous, which is why it rightfully belongs in the Ranges library. At least we now have yield and the lesser-known yield from from Python. However, asynchronous building blocks like std::task or std::lazy still feel like distant dreams.\n\nBoost.Asio and Boost.Cobalt could become our version of asyncio, providing a generator with different semantics than std::generator, a task,",
        "id": 3350370,
        "language": "en",
        "link": "https://www.youtube.com/watch?v=hMaoft_O-oA",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 421,
        "source_url": "https://www.youtube.com/feeds/videos.xml?channel_id=UCJhay24LTpO1s4bIZxuIqKw",
        "status_code": 0,
        "tags": [],
        "thumbnail": "https://i1.ytimg.com/vi/hMaoft_O-oA/hqdefault.jpg",
        "title": "If Writing C++ Coroutines Goes Over My Head, Where Do I Even Begin with Debugging? - Andr\u00e9 Brand",
        "vote": 0
    }
]