[
    {
        "age": null,
        "album": "",
        "author": "/u/Special_Ad6016",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-20T20:23:33.809512+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-20T19:48:20+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey everyone,</p> <p>I recently built a <strong>soft delete system for users</strong> in a Django-based financial application and thought I\u2019d share the details in case it helps others.</p> <p>In production systems\u2014especially in finance or regulated sectors\u2014you often can\u2019t just delete a user from the database. Audit trails, transaction records, and compliance needs make this much trickier. We needed something that was:</p> <ul> <li>Reversible</li> <li>Audit-friendly</li> <li>Easy to work with in admin</li> <li>Compatible with Django&#39;s auth and related models</li> </ul> <p>\ud83d\udd27 <strong>Key Design Choices:</strong></p> <ul> <li>Custom <code>User</code> model from day one (don\u2019t wait until later!)</li> <li>Soft delete via <code>is_deleted</code>, <code>deleted_at</code>, <code>deleted_by</code></li> <li><code>on_delete=models.PROTECT</code> to keep transaction history safe</li> <li>Admin actions for soft deleting and restoring users</li> <li>Proper index",
        "id": 3377692,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mvp8pm/implemented_a_productionready_soft_delete_system",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Implemented a Production-Ready Soft Delete System Using Django Custom User Model \u2013 Feedback Welcome",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/1ncehost",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-20T19:19:40.605893+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-20T19:06:46+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi <a href=\"/r/Django\">r/Django</a>, I&#39;ve released a new library I made for improving the usability of asyncio. I&#39;m a Django developer first, so I designed it with Django views specifically in mind. Check it out and tell me what you think!</p> <p><a href=\"https://github.com/curvedinf/wove/\">https://github.com/curvedinf/wove/</a></p> <p>Here is the beginning of the readme to save you a click:</p> <h1>Wove</h1> <p>Beautiful Python async.</p> <h1>What is Wove For?</h1> <p>Wove is for running high latency async tasks like web requests and database queries concurrently in the same way as asyncio, but with a drastically improved user experience. Improvements compared to asyncio include:</p> <ul> <li>Looks Like Normal Python: Parallelism and execution order are implicit. You write simple, decorated functions. No manual task objects, no callbacks.</li> <li>Reads Top-to-Bottom: The code in a weave block is declared in the order it is executed inline in",
        "id": 3377179,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mvo3h4/i_made_wove_beautiful_python_async_to_help_easily",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "I made \"Wove: Beautiful Python async\" to help easily make async API and QuerySet calls in views",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Cold-Supermarket-715",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-20T12:18:35.108641+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-20T11:18:08+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I want to understand what are websockets and what are they mainly used for ??</p> <p>for example rest apis fetch data from backend to serve front-end, what a typical use case for web sockets in a simple webapp.</p> <p>also how to implement them in django. Do they integrate with django models in any sense ??</p> <p>what components of django interact with them and maybe some small boilerplate code to help me understand what to do with web socket and how would be great and appreciated.</p> <p>Thanks </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Cold-Supermarket-715\"> /u/Cold-Supermarket-715 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1mvby4o/websockets_in_django/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1mvby4o/websockets_in_django/\">[comments]</a></span>",
        "id": 3373351,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mvby4o/websockets_in_django",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Websockets in django",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/wait-a-minut",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-20T11:04:42.651475+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-20T10:56:29+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p><a href=\"https://x.com/josevalim/status/1957809643637391366?s=46&amp;t=aa8Y4rUby5TeKkhwAg5LdQ\">https://x.com/josevalim/status/1957809643637391366?s=46&amp;t=aa8Y4rUby5TeKkhwAg5LdQ</a></p> <p>Instead of debug toolbar a coding assistant directly in Django </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/wait-a-minut\"> /u/wait-a-minut </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1mvbj2a/django_needs_this/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1mvbj2a/django_needs_this/\">[comments]</a></span>",
        "id": 3372663,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mvbj2a/django_needs_this",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Django needs this",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/usestash",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-20T11:04:42.825552+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-20T09:55:36+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Do you know a Django library for building OAuth server which supports DRF? django-oauth-toolkit seems only to support Django &quot;forms&quot; for OAuth consent screen. I have a separated frontend (CSR). Authorize endpoint should redirect to frontend instead of rendering a consent screen.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/usestash\"> /u/usestash </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1mvagx9/looking_for_a_django_library_to_build_oauth/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1mvagx9/looking_for_a_django_library_to_build_oauth/\">[comments]</a></span>",
        "id": 3372664,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mvagx9/looking_for_a_django_library_to_build_oauth",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Looking for a Django library to build OAuth Server (in CSR settings)",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Jealous_Reveal3024",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-20T05:16:24.814117+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-20T04:59:25+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi everyone!<br/> I built a Django app on my MacBook that works fine locally, but I&#39;m completely new to deployment and need to get it running on a Windows Server in our office. </p> <p><strong>Current situation:</strong><br/> - Django app works with `python <a href=\"http://manage.py\">manage.py</a> runserver` on macOS<br/> - Need to deploy to Windows Server (not cloud)<br/> - Zero deployment experience<br/> - Uses PostgreSQL, static files, and a requirements.txt<br/> <strong>What I&#39;m lost on:</strong><br/> - How to transfer my code to Windows Server?<br/> - What do I install on the server to run Django?<br/> - How to make it accessible to others on our network?<br/> - Do I need IIS or something else?<br/> - How to handle the database and static files?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Jealous_Reveal3024\"> /u/Jealous_Reveal3024 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments",
        "id": 3371154,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mv5n2e/complete_beginner_how_to_deploy_django_app_to",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Complete beginner: How to deploy Django app to Windows Server?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/AppearanceLower8590",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-20T00:56:44.191905+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-20T00:26:10+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I help lead a small team of 4 eng working on a django app (with postgres &amp; django). We&#39;re growing at a slow rate. We&#39;ve so far deployed it to Heroku, but Heroku is really unreliable. Just in the last two months, there were two major outages.</p> <p>I need to migrate away, but I&#39;m not sure if we should switch to DigitalOcean or AWS. We really enjoyed Heroku being user-friendly, which is why I am considering DigitalOcean. None of us have any experience with AWS, so it would have to be me learning how to deploy and use AWS. For reliability, we&#39;d be using multi-AZ on AWS or readonly databases on DigitalOcean.</p> <p>How would you guys think about this? Is DigitalOcean less reliable because there is no notion of an AZ within a region? How much of a UX/DX improvement is DO compared to AWS in 2025?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/AppearanceLower8590\"> /u/AppearanceLower8590 </a> <br/>",
        "id": 3370193,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mv00o9/aws_vs_digitalocean",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "AWS vs DigitalOcean",
        "vote": 0
    }
]