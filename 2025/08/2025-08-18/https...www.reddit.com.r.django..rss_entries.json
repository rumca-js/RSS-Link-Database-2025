[
    {
        "age": null,
        "album": "",
        "author": "/u/sorressean",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-18T23:58:02.545597+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-18T23:06:41+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi, I&#39;ve been working on a few django projects lately, and as a blind user I really like finding ways to show data in tables. I don&#39;t mind giving non-defective eyeball folk the tools to see graphs, but for me being able to select the columns I can read or care about, and sort is really important.</p> <p>That said, My thought is to just return JSON data to my django template and let js take over. I&#39;m curious if there are libraries people prefer here, or if there&#39;s a cleaner way to do this keeping pagination and the like in tact. Thanks,</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/sorressean\"> /u/sorressean </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1mu1mps/how_do_you_handle_data_collection_in_tables/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1mu1mps/how_do_you_handle_data_collection_in_tables/\">[comments]</a></span>",
        "id": 3361034,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mu1mps/how_do_you_handle_data_collection_in_tables",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "How do you handle data collection in tables?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Legitimate_Meat_4510",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-18T14:29:06.787777+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-18T14:21:16+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I\u2019m not a very experienced Django dev, but I picked it because it\u2019s mature and batteries-included. Writing APIs with DRF has been a joy.</p> <p>But as soon as I needed a bit of realtime (SSE/websockets to update clients), I hit a brick wall. Every step feels like fighting the framework. Most guides suggest hacky workarounds, bringing in Celery, or spinning up a separate FastAPI microservice.</p> <p>The funniest thing I read was someone saying: <em>\u201cI just run two Django instances, one WSGI and one ASGI (with Channels), and route with nginx.\u201d</em> I mean, maybe that works, but why so much hassle for a simple feature? This isn\u2019t some huge high-load system. I don\u2019t want to spin up a zoo of services and micro-instances - I just want to solve it under one roof.</p> <p>Is it really that bad, or am I just missing something?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Legitimate_Meat_4510\"> /u/Legitimate_Meat_4510 </",
        "id": 3356619,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mtnf9f/is_async_really_such_a_pain_in_django",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Is async really such a pain in Django?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/CEENNNNNN",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-18T02:30:31.215872+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-18T01:43:24+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I recently integrated <strong>django-unfold</strong> into my Django admin, and it works great. However, before I discovered Unfold, I had already built my own custom dashboard.</p> <p>Now I\u2019m wondering:</p> <ul> <li>Is it possible to <strong>add my existing dashboard into the Unfold-powered admin</strong>?</li> <li>Or would it be better to just <strong>rebuild/replicate the dashboard using Unfold\u2019s features</strong>?</li> </ul> <p>Has anyone here tried merging a custom dashboard with Unfold, or is the recommended approach to stick with Unfold\u2019s way of doing things?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/CEENNNNNN\"> /u/CEENNNNNN </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1mt8xit/unfold_dashboard/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1mt8xit/unfold_dashboard/\">[comments]</a></span>",
        "id": 3352954,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mt8xit/unfold_dashboard",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "unfold dashboard",
        "vote": 0
    }
]