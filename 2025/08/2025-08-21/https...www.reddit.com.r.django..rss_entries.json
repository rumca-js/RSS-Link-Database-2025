[
    {
        "age": null,
        "album": "",
        "author": "/u/NeighborhoodFit1478",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-21T23:10:55.862581+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-21T23:04:19+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey everyone,</p> <p>I\u2019ve been diving deep into Django recently and I\u2019m pretty comfortable with advanced backend topics (middleware, signals, encryption, role-based permissions, logic, etc.). But every time I try to build real-world projects, I hit wall with the <strong>frontend/UI side</strong>.</p> <p>I can structure my models, APIs, and business logic pretty cleanly, but when it comes to designing user interfaces (modern, clean, responsive dashboards/forms), I get stuck. Tailwind, Alpine, GSAP, etc. are powerful, but I feel like I\u2019m forcing things together instead of building a polished flow.</p> <p>How do you guys deal with this:</p> <p>I\u2019m trying to avoid spending months just on frontend design, but I also don\u2019t want my apps looking half-baked.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/NeighborhoodFit1478\"> /u/NeighborhoodFit1478 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1mwq5m",
        "id": 3387811,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mwq5me/doing_well_with_django_advanced_topics_but",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Doing well with Django advanced topics, but frontend/UI is killing me",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Elieroos",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-21T23:10:55.653876+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-21T22:33:42+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I got tired of the tedious and repetitive job application process. So I built an AI agent that does the soul-crushing part for me (and you).</p> <hr/> <p>An end-to-end job-hunting pipeline:</p> <ul> <li><strong>Web scraper (70k+ company sites):</strong> Fresh roles, straight from the source.</li> <li><strong>ML matcher (CV \u2192 roles):</strong> ranks openings by *fit with your real experience/skills, not keyword bingo.</li> <li><strong>Application agent:</strong> opens a real browser, finds the application page, detects the form, classifies fields (name, email, work history, portfolio, questions\u2026), and fills everything using your CV. Then submits. Repeat.</li> </ul> <hr/> <p>It\u2019s 100% free: <a href=\"https://laboro.co/?utm_source=reddit&amp;utm_medium=organic&amp;utm_contents=87\"><strong>laboro.co</strong></a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Elieroos\"> /u/Elieroos </a> <br/> <span><a href=\"https://www",
        "id": 3387810,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mwpfla/i_built_an_ai_agent_to_autoapply_django_jobs",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "I built an AI Agent to Auto-Apply Django Jobs",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/frj101",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-21T23:10:56.030689+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-21T22:31:55+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi, I am a full stack developer experienced in Django on the backend and react on the frontend! I became a full stack python developer specializing in django in 2021 but then transitioned to react later. Haven&#39;t landed a single job yet! Now in 2025 I feel that this stack itself is useless and I should pick one; either django or react with mern stack or even nextjs which now acts as full stack! What do you guys think? Recently I have felt that django is losing its charm in web development and I should rather focus on full javascript stack for web development. Python or django are being used in more data analytics field than in modern web development</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/frj101\"> /u/frj101 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1mwpe3g/is_it_worth_it_to_learn_both_react_and_django/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comm",
        "id": 3387812,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mwpe3g/is_it_worth_it_to_learn_both_react_and_django",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Is it worth it to learn both React and Django?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/TroubleFlat2250",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-21T20:57:02.522585+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-21T20:24:12+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hello people. I was asking if anyone can point me to any good django open source projects that I can have a look at to learn a thing or two about structuring of projects and other things. </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/TroubleFlat2250\"> /u/TroubleFlat2250 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1mwm61w/query_on_good_django_open_source_projects_i_can/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1mwm61w/query_on_good_django_open_source_projects_i_can/\">[comments]</a></span>",
        "id": 3386902,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mwm61w/query_on_good_django_open_source_projects_i_can",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Query on good django open source projects I can have a look at and learn from",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Spooky_kindness",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-21T16:20:37.173658+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-21T15:19:10+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Wondering what everyone thinks about this: I need a staging area for the data users want to upload. I&#39;m thinking to use a staging model that replicates the prod schema (plus it would have one extra column, the key to identify the owner of staging records). In this case, I&#39;ll need to execute SQL to move records from staging to production when ready.</p> <p>Alternative option is to avoid adding additional model and instead adding a staging indicator column in the single model. But then I worry about indexing and performance.</p> <p>Thoughts?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Spooky_kindness\"> /u/Spooky_kindness </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1mwdwmp/enduser_data_uploads_separate_staging_model_or/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1mwdwmp/enduser_data_uploads_separate_staging_model_or/\">[comments]</a></span>",
        "id": 3384709,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mwdwmp/enduser_data_uploads_separate_staging_model_or",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "End-user data uploads: separate staging model or staging indicator in a single model?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Putrid_Waltz_9262",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-21T12:55:05.753376+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-21T12:15:00+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I\u2019m setting up a small e-commerce site (~20 products) with:</p> <p>Two Next.js apps (main site + admin panel)</p> <p>Django backend</p> <p>Postgres database</p> <p>Media files (images)</p> <p>The client doesn\u2019t want a maintenance package, so I\u2019m looking for a solution that is:</p> <ul> <li><p>Cheap</p></li> <li><p>Minimal or zero manual maintenance</p></li> <li><p>Reliable for low traffic</p></li> <li><p>Supports persistent storage for images and possibly background tasks (Celery)</p></li> </ul> <p>I\u2019m debating between:</p> <ol> <li><p>Vercel (Next.js frontends) + Railway (Django + Postgres + volumes)</p></li> <li><p>Single DigitalOcean droplet hosting everything</p></li> </ol> <p>Questions:</p> <p>Which setup is more \u201cdeploy-and-forget\u201d friendly for a small e-commerce site?</p> <p>Are there hidden maintenance or cost issues I should be aware of?</p> <p>Anyone running a similar stack - what would you recommend for cheap, low-maintenance hosting?</p> <",
        "id": 3382814,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mw991o/vercel_railway_vs_digitalocean_droplet_for_small",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Vercel + Railway vs DigitalOcean Droplet for Small E-commerce - Low Maintenance & Cheap?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Greedy_Point7755",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-21T09:33:35.187508+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-21T09:28:33+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Greedy_Point7755\"> /u/Greedy_Point7755 </a> <br/> <span><a href=\"/r/Python/comments/1mw65r2/python_freelancing_for_college/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1mw65yn/python_freelancing_for_college/\">[comments]</a></span>",
        "id": 3381461,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mw65yn/python_freelancing_for_college",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Python freelancing For College",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Beginning-Scholar105",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-21T09:33:35.355490+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-21T08:53:31+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;m working on a project there, I&#39;ve used Django Channels to support real-time alert notifications and it other parts of the app. The frontend is in NextJS.</p> <p>I have a few questions:</p> <p>Scenario 1: If I deploy Django, Database, and NextJS both on Azure on a professional plan. Can it handle 200 users at a time? Is there any other cost associated other the professional plan $19 per month or not?</p> <p>Scenario 2: If I deploy Django on an Azure App Service, Database on Azure PostgreSQL, Azure Storage, and Azure Static site hosting. Can it handle 200 user at a time and what will be the minimum cost for it?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Beginning-Scholar105\"> /u/Beginning-Scholar105 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1mw5m4x/can_django_deployed_on_azure_can_handle_200_user/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/commen",
        "id": 3381462,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mw5m4x/can_django_deployed_on_azure_can_handle_200_user",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Can Django deployed on azure can handle 200 user at a time?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Royal_General_9826",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-21T08:28:42.118347+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-21T07:47:37+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Someone help, Please<br/> How Can i avoid n+1 in PrimaryKeyRelatedField? Anytime I add student it creates separate query with WHERE clause. Example:<br/> <strong>SELECT &quot;content_studentprofile&quot;.&quot;id&quot;,</strong><br/> <strong>&quot;content_studentprofile&quot;.&quot;uuid&quot;,</strong><br/> <strong>&quot;content_studentprofile&quot;.&quot;created_at&quot;,</strong><br/> <strong>&quot;content_studentprofile&quot;.&quot;updated_at&quot;,</strong><br/> <strong>&quot;content_studentprofile&quot;.&quot;user_id&quot;,</strong><br/> <strong>&quot;content_studentprofile&quot;.&quot;name&quot;</strong><br/> <strong>FROM &quot;content_studentprofile&quot;</strong><br/> <strong>WHERE &quot;content_studentprofile&quot;.&quot;id&quot; = 11</strong><br/> <strong>LIMIT 21</strong> </p> <p>Was not really able to find answer, approach on such cases, So i would be very grateful if someone can help.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a h",
        "id": 3381063,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mw4lj2/primarykeyrelatedfield_n1",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "PrimaryKeyRelatedField - N+1",
        "vote": 0
    }
]