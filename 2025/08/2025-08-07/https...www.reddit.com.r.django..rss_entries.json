[
    {
        "age": null,
        "album": "",
        "author": "/u/ronoxzoro",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-07T21:43:14.327075+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-07T20:45:53+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>So i plan to host my django app on my vps what best way and faster<br/> docker<br/> systemd<br/> systemd inside docker ( if possible )</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ronoxzoro\"> /u/ronoxzoro </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1mkbjta/docker_or_systemd_or_systemd_inside_docker_if/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1mkbjta/docker_or_systemd_or_systemd_inside_docker_if/\">[comments]</a></span>",
        "id": 3278565,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mkbjta/docker_or_systemd_or_systemd_inside_docker_if",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "docker or systemd or systemd inside docker if possible",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Opening-Dirt9408",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-07T20:39:55.889220+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-07T19:52:02+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hello all,</p> <p>my question is quite easy and hard at the same time: What would be an optimized learning path for learning Django in 2025?</p> <p>In a future job opportunity I would be tasked with developing an existing Django project, also enhance features and do maintenance for an existing Netbox deployment + custom plugins.</p> <p>My time constraints would allow for about an hour of learning per day for 4-5 months from now on.</p> <p>I have some prior Python experience in a professional context, but more on the Flask and functions-framework side of life.</p> <p>I&#39;m happy about every useful tip, so thank you in advance!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Opening-Dirt9408\"> /u/Opening-Dirt9408 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1mka58y/django_learning_path_2025/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1mka58y/django_learn",
        "id": 3278090,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mka58y/django_learning_path_2025",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Django Learning Path 2025",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/OptimisticToaster",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-07T15:13:12.689121+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-07T14:43:02+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;m looking at soft deletes for my project. I&#39;ve seen two ways to implement.</p> <p><strong>deleted_at</strong> - Don&#39;t actually delete the record, but updated a field for the record to note when it was deleted. If that&#39;s null, then the record is considered live.</p> <p><strong>Archive Table</strong> - Delete the record from the core table but then add its info to an archive table. The archive table basically has just a few fields - date, table, record_id, and data. The data is some sort of serialized content like JSON.</p> <p>Is one of these really better than the other? I don&#39;t expect this to be a huge project - probably 10,000 rows in any table after several years. If the project really takes off, we could hit 100,000 rows.</p> <p>Maybe more importantly, is one easier than the other (I&#39;m a hobbyist hack, not professional).</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/OptimisticToaste",
        "id": 3275490,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mk1y8a/proscons_for_soft_delete_options",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Pros/Cons for Soft Delete Options",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Specialist_Bar_8284",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-07T08:38:28.595998+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-07T07:34:36+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p><strong>Context: Google Gemini API Integration</strong></p> <p>I\u2019m working on integrating Google Gemini into my Django backend, and I\u2019m trying to figure out the most scalable and efficient way to handle streaming + file uploads. Here\u2019s a breakdown of the setup and some questions I have for you all:</p> <h1>Gemini API is available through:</h1> <ol> <li><strong>Vertex AI (Google Cloud):</strong> <ul> <li>We can generate a signed URL and let the frontend upload files directly to Cloud Storage.</li> <li>Gemini can access these files.</li> <li>This is often more scalable.</li> </ul></li> <li><strong>Standard Gemini API via</strong> <code>google.generativeai</code>**:** <ul> <li>We&#39;re using the Files API approach here.</li> <li>Files are uploaded via a backend endpoint, which then sends them to Gemini\u2019s Files API before sending the user\u2019s message.</li> <li>This is how Gemini gets file references.</li> </ul></li> </ol> <h1>Current Problem / Setup</h1> <",
        "id": 3272544,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mjtp1m/django_google_gemini_api_best_setup_advice_needed",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Django + Google Gemini API Best Setup Advice Needed",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/UCDeseMuscles",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-07T06:28:44.470200+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-07T06:20:55+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>What are your thoughts on using a Django Admin Dashboard theme like Unfold if you plan to create a service to sell to customers aka SaaS? If the open source Admin Dashboards are free, then why use the paid/premium version of the theme?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/UCDeseMuscles\"> /u/UCDeseMuscles </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1mjsisu/thoughts_admin_dashboard_theme/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1mjsisu/thoughts_admin_dashboard_theme/\">[comments]</a></span>",
        "id": 3272007,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mjsisu/thoughts_admin_dashboard_theme",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Thoughts Admin Dashboard Theme",
        "vote": 0
    }
]