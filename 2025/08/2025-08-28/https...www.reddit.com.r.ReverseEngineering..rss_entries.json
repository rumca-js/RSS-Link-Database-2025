[
    {
        "age": null,
        "album": "",
        "author": "/u/Middle_Bumblebee_128",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-29T00:04:06.616837+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-28T23:36:51+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I\u2019ve been working on a side project called EmberScale AI that aims to make reverse engineering and binary analysis a little less painful.</p> <p>The idea is to integrate AI helpers into tools like Ghidra, where most of us already spend a lot of time. Instead of manually renaming, retyping, and annotating every function, EmberScale can batch process and provide guided explanations of code flow. Think of it as a layer that speeds up repetitive tasks and leaves you more time for the hard parts of reversing.</p> <p>A couple of things I\u2019m focusing on: \u2022 Batch renaming / retyping of functions and variables for faster navigation. \u2022 Precision decompilation of selected functions with annotated context. \u2022 QA-style querying (\u201cwhat does this function appear to do?\u201d) for quick checks. \u2022 Keeping it compatible with Ghidra\u2019s script manager (no invasive installs).</p> <p>I\u2019m not here to pitch or sell anything \u2014 just wanted to share what I\u2019ve been building and get feed",
        "id": 3444911,
        "language": "",
        "link": "https://www.reddit.com/r/ReverseEngineering/comments/1n2rvpt/exploring_aiassisted_workflows_in_ghidra",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 476,
        "source_url": "https://www.reddit.com/r/ReverseEngineering/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Exploring AI-assisted workflows in Ghidra (EmberScale AI project)",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/JonLuca",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-28T22:59:08.829368+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-28T22:09:33+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/JonLuca\"> /u/JonLuca </a> <br/> <span><a href=\"https://blog.jonlu.ca/posts/ca-plate-checker?ref=re\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/ReverseEngineering/comments/1n2puog/finding_available_license_plates_by_reverse/\">[comments]</a></span>",
        "id": 3444599,
        "language": "",
        "link": "https://www.reddit.com/r/ReverseEngineering/comments/1n2puog/finding_available_license_plates_by_reverse",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 476,
        "source_url": "https://www.reddit.com/r/ReverseEngineering/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Finding available license plates by reverse engineering the DMVs website",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/JustSouochi",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-28T15:55:24.183564+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-28T15:21:38+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/JustSouochi\"> /u/JustSouochi </a> <br/> <span><a href=\"https://github.com/pompelmi/pompelmi\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/ReverseEngineering/comments/1n2f7ci/free_opensource_file_scanner/\">[comments]</a></span>",
        "id": 3441268,
        "language": "",
        "link": "https://www.reddit.com/r/ReverseEngineering/comments/1n2f7ci/free_opensource_file_scanner",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 476,
        "source_url": "https://www.reddit.com/r/ReverseEngineering/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "free, open-source file scanner",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Maleficent-Horror215",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-28T14:48:52.877604+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-28T14:11:47+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi! I\u2019m Barney and I want to ask you to help me a bit about something, and this thing is luac file deobfuscation, I dont even know how to start because its very hard for me, thsi luac file contains some information of an MTA servers Loot respawn time, and that&#39;s what I want to ask, sorry for my bad english, Thank you if u help me!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Maleficent-Horror215\"> /u/Maleficent-Horror215 </a> <br/> <span><a href=\"https://www.reddit.com/r/ReverseEngineering/submit/?type=LINK\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/ReverseEngineering/comments/1n2dba1/mta_luac_file_decode/\">[comments]</a></span>",
        "id": 3440559,
        "language": "",
        "link": "https://www.reddit.com/r/ReverseEngineering/comments/1n2dba1/mta_luac_file_decode",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 476,
        "source_url": "https://www.reddit.com/r/ReverseEngineering/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "MTA LUAC file decode",
        "vote": 0
    }
]