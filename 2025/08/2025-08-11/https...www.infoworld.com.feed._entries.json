[
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-11T09:05:11.250315+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-11T09:00:00+00:00",
        "description": "<div id=\"remove_no_follow\">\n\t\t<div class=\"grid grid--cols-10@md grid--cols-8@lg article-column\">\n\t\t\t\t\t  <div class=\"col-12 col-10@md col-6@lg col-start-3@lg\">\n\t\t\t\t\t\t<div class=\"article-column__content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n\n<p>As <a href=\"https://www.infoworld.com/article/3973969/knowing-when-to-use-ai-coding-assistants.html\">AI-assisted coding</a> becomes more common, a new pattern is emerging: multi-agent workflows.</p>\n\n\n\n<p>A multi-agent workflow refers to using various AI agents in parallel for specific software development life cycle (SDLC) tasks, whether for planning, scaffolding, writing code, testing, debugging, log analysis, or deployment.</p>\n\n\n\n<p>\u201cA generalist \u2018coding agent\u2019 is not enough,\u201d says Harry Wang, chief growth officer at <a href=\"https://www.sonarsource.com/\">Sonar</a>, the maker of a code analysis tool. \u201cJust like a human team has specialists, like back-end, security, and testing engineers, age",
        "id": 3300998,
        "language": "en-US",
        "link": "https://www.infoworld.com/article/4035926/multi-agent-ai-workflows-the-next-evolution-of-ai-coding.html",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 468,
        "source_url": "https://www.infoworld.com/feed/",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Multi-agent AI workflows: The next evolution of AI coding",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-11T09:05:11.079166+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-11T09:00:00+00:00",
        "description": "<div id=\"remove_no_follow\">\n\t\t<div class=\"grid grid--cols-10@md grid--cols-8@lg article-column\">\n\t\t\t\t\t  <div class=\"col-12 col-10@md col-6@lg col-start-3@lg\">\n\t\t\t\t\t\t<div class=\"article-column__content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n\n<p>As organizations double down on developer experience, one of the most meaningful, and technical, investments they can make is in an <a href=\"https://www.infoworld.com/article/2263059/what-is-an-internal-developer-platform-paas-done-your-way.html\">internal developer platform</a> (IDP). Not the mythical one-size-fits-all \u201cplatform in a box,\u201d but a fully composable, tailored set of tools, services, and workflows that reduces friction between development and operations.</p>\n\n\n\n<p>For years, platform engineering teams have tried to strike the balance between empowering developers and maintaining governance. But that balancing act often collapses under the weight of tool sprawl, duplicated effort, and",
        "id": 3300997,
        "language": "en-US",
        "link": "https://www.infoworld.com/article/4033857/the-advantages-of-stack-based-internal-developer-platforms.html",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 468,
        "source_url": "https://www.infoworld.com/feed/",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "The advantages of stack-based internal developer platforms",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-11T09:05:11.421897+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-11T09:00:00+00:00",
        "description": "<div id=\"remove_no_follow\">\n\t\t<div class=\"grid grid--cols-10@md grid--cols-8@lg article-column\">\n\t\t\t\t\t  <div class=\"col-12 col-10@md col-6@lg col-start-3@lg\">\n\t\t\t\t\t\t<div class=\"article-column__content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n\n<p>Walk into any developer conference and you\u2019ll see a predictable parade of laptop stickers: the <a href=\"https://www.infoworld.com/article/2255318/what-is-cloud-native-the-modern-way-to-develop-software.html\">cloud-native</a> darlings, the hip new database, the obligatory mascot or two. It\u2019s the developer variation of virtue signalling or calling out one\u2019s tribe. What you won\u2019t see\u2014at least not often\u2014are the logos of the companies that quietly push more code than many of those sticker-friendly startups combined.</p>\n\n\n\n<p>That invisibility isn\u2019t accidental; these firms make their money elsewhere and treat <a href=\"https://www.infoworld.com/article/2262355/what-is-open-source-software-open-source-",
        "id": 3300999,
        "language": "en-US",
        "link": "https://www.infoworld.com/article/4037083/who-does-the-unsexy-but-essential-work-for-open-source.html",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 468,
        "source_url": "https://www.infoworld.com/feed/",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Who does the unsexy but essential work for open source?",
        "vote": 0
    }
]