[
    {
        "age": null,
        "album": "",
        "author": "/u/AndyCarnevale",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-11T21:04:59.901309+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-11T20:57:23+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/AndyCarnevale\"> /u/AndyCarnevale </a> <br/> <span><a href=\"https://www.andycarnevale.com/blog/django-json-ld/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1mnoyoj/implementing_jsonld_structured_data_in_django/\">[comments]</a></span>",
        "id": 3306341,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mnoyoj/implementing_jsonld_structured_data_in_django",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Implementing JSON-LD Structured Data in Django",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/dwaxe",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-11T20:00:00.292060+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-11T19:41:10+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/dwaxe\"> /u/dwaxe </a> <br/> <span><a href=\"https://www.djangoproject.com/weblog/2025/aug/11/welcome-our-new-fellow-jacob-tyler-walls/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1mnmxp7/welcome_our_new_fellow_jacob_tyler_walls/\">[comments]</a></span>",
        "id": 3305985,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mnmxp7/welcome_our_new_fellow_jacob_tyler_walls",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Welcome Our New Fellow - Jacob Tyler Walls",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Ok-Practice9330",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-11T20:00:00.543168+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-11T18:59:23+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;m trialing django-auto-prefetch. However, when I change from a django.db.models.ForeignKey to an auto_prefetch.ForeignKey it&#39;s generating a migration - the actual SQL drops and readds the foreign key constraint.</p> <p>Is this expected? Is there a workaround for this?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Ok-Practice9330\"> /u/Ok-Practice9330 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1mnlu98/djangoautoprefetch_generates_a_db_migration/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1mnlu98/djangoautoprefetch_generates_a_db_migration/\">[comments]</a></span>",
        "id": 3305986,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mnlu98/djangoautoprefetch_generates_a_db_migration",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "django-auto-prefetch generates a db migration",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/evelinachoco",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-11T15:39:59.975915+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-11T15:34:04+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey everyone,</p> <p>I\u2019m working on a personal Django project and i am looking for someone that can do the restructuring a couple of apps. Here\u2019s what I need:</p> <ol> <li><strong>Move a model</strong> (and its related stuff) from one app X to another Y (along with a few views, templates etc), then delete the old X app.</li> <li><strong>Split an existing app A</strong> into two B anc C (so rename them as well). One of the new apps should only have two models.</li> </ol> <p>I\u2019m happy to discuss details, timeline, and rates if you\u2019ve got experience with this kind of cleanup. This is a project i built on my own and i tried a couple of times to do it but failed so here i am. Please only answer if you are confident you can do it and have done something similar before. The project is currently deployed on heroku using postgres and available online but there are no users and i kind of would not mind if data from the models moved were lost, but would obviousl",
        "id": 3303797,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mng7mb/looking_for_help_with_restructuring_apps_paid",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Looking for help with restructuring apps (paid)",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/uzulmez17",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-11T15:40:00.181486+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-11T15:10:01+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi everyone,</p> <p>I have been working on a new Filter backend for Django REST framework.</p> <p>The de-facto library for filtering and query parameter handling is django-filter, but I had some use cases where it fell short. Here are some features:</p> <ul> <li>You use serializer fields to do parsing and validation. No more need to deal with Django forms and widgets.</li> <li>You can group your filters. Grouping allows you to customize interactions between your filters.</li> <li>You can use the constraint system to perform validation between your </li> <li>You can create nested filters with child filters (as seen in code snippet).</li> </ul> <p>... and more. In the documentation, I explain the reasoning behind these choices as well as presenting some real-world examples. Check it out:</p> <p><a href=\"http://github.com/realsuayip/rest-filters\">http://github.com/realsuayip/rest-filters</a></p> <p>I would like to see your comments on it. I&#39;m open to",
        "id": 3303798,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mnfkwe/introducing_restfilers_a_filter_backend_for",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Introducing rest-filers: A filter backend for Django REST framework.",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/JonG0uld",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-11T15:39:59.575428+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-11T14:56:11+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Did you know that the official FPL game (played by over 10 million people) is built using Python and Django??</p> <p><a href=\"http://fantasy.premierleague.com\">fantasy.premierleague.com</a> </p> <p>If you are a Python/Django Developer who enjoys both football and Fantasy Premier League please join the Python Developer Mini League - you&#39;ll need this access code: yna1io</p> <p>Even if you&#39;ve never played before, there are lots of easy &quot;how-to&quot; guides and a whole other corner of reddit devoted to the game <a href=\"https://www.reddit.com/r/FantasyPL/\">https://www.reddit.com/r/FantasyPL/</a> </p> <p>I think that I am almost there with my team for the start of the season. Still some decisions to make and it\u2019s likely to be very different come the deadline. Will share my team in the comments here! </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/JonG0uld\"> /u/JonG0uld </a> <br/> <span><a href=\"https://i",
        "id": 3303795,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mnf7ut/python_developer_fpl_mini_league",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Python Developer FPL Mini League",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/ivan_m21",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-11T15:39:59.784148+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-11T14:39:38+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey all, I have been a long time Django user (since 2015), especially django-rest. I have used django a lot but never really looked under the hood, recently I built an open-source tool which generates interactive diagram representations for big codebases and finally looked into how django works. I am sharing it below for everyone who wants to casually understand how django actually works under the hood:</p> <p><a href=\"https://preview.redd.it/2th8ucfgjeif1.png?width=2832&amp;format=png&amp;auto=webp&amp;s=224ed2f7210cef5391b424f187f2a553681304de\">https://preview.redd.it/2th8ucfgjeif1.png?width=2832&amp;format=png&amp;auto=webp&amp;s=224ed2f7210cef5391b424f187f2a553681304de</a></p> <p>To explore it interactively open the full diagram on <a href=\"https://github.com/CodeBoarding/GeneratedOnBoardings/blob/main/django/on_boarding.md\">GitHub</a></p> <p>The tool that generated it: <a href=\"https://github.com/CodeBoarding/CodeBoarding\">https://github.com/Code",
        "id": 3303796,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mnes77/i_generated_an_interactive_diagram_represnetation",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "I generated an interactive diagram represnetation of django's codebase (to explore what is under the hood as a visual learner)",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/psychoholic",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-11T12:24:55.797455+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-11T12:05:36+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>My wife and I had an idea for a project a few months ago that I finally got around to building (it&#39;s not ready for prime time yet so currently gated behind a mountain of Cloudflare rules). When I started on it I was using Flask for some quick hit tests of the concepts but was getting a bit frustrated extending features and how it does what it says on the tin and little else. I went down the headless CMS route for a bit playing with your standard headless Wordpress approach since I <em>used</em> to be pretty good in php but didn&#39;t feel like learning React or Node. Even tried Strapi which wasn&#39;t bad but not what I wanted either. Both of those CMS&#39;s were almost TOO feature rich and I felt like I was fighting them more than using them.</p> <p>At a previous company we were a heavy duty Django shop (I ran ops/infra teams so we only made sure it worked at scale and all the pre-production environments worked) and I&#39;m still friends with a b",
        "id": 3302252,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mnb4ym/used_django_for_the_first_time_on_a_project_and_i",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Used Django for the first time on a project and I am kind of blown away.",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Putrid_Set_3210",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-11T11:20:08.953695+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-11T10:43:58+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Been working with Django for a while now, I have significant experience and would be asset,,my laptop just got stolen when I was about to get my project to it&#39;s completion stage,,,but thank God I had it backed up on GitHub </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Putrid_Set_3210\"> /u/Putrid_Set_3210 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1mn9lbv/am_willing_to_work_on_any_django_project_in/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1mn9lbv/am_willing_to_work_on_any_django_project_in/\">[comments]</a></span>",
        "id": 3301805,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mn9lbv/am_willing_to_work_on_any_django_project_in",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Am willing to work on any Django project in exchange for a laptop",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/thibaudcolas",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-11T06:59:54.626760+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-11T06:01:45+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/thibaudcolas\"> /u/thibaudcolas </a> <br/> <span><a href=\"https://wagtail.org/blog/front-end-architecture-fundamentals/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1mn56bg/frontend_architecture_fundamentals/\">[comments]</a></span>",
        "id": 3300501,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mn56bg/frontend_architecture_fundamentals",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Front-end architecture fundamentals",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/brokenbutton12",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-11T04:49:53.586516+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-11T04:41:39+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I have a new Django app that handles different things of an industry. All the primary data, such as costumers and inventory info comes from the business&#39; ERP API endpoints. I sync this information on an hourly basis with a chron job and it always follow the same pattern:</p> <ul> <li><p>Update the Job&#39;s database row to register the update time and that the sync started</p></li> <li><p>Fetch the data</p></li> <li><p>Run a function that will parse (don&#39;t use serializer because it is very slow) the data and handle to allow me to bulk update and create the information</p></li> <li><p>Update the Job&#39;s database row again</p></li> </ul> <p>Right now my Django app is just a single big app and I&#39;m splitting it into separate apps to make maintance easier, since it is new and didn&#39;t hit production yet there&#39;s no need to worry about how the migrations/data will be, I can just reset everything if needed. I&#39;m thinking about creating ",
        "id": 3300017,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mn3tdj/should_i_put_my_data_synchronization_in_a",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Should I put my data synchronization in a separate app?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/fatherofgoku",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-11T01:34:53.138055+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-11T01:23:37+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Every time I hit migrate on a big project, there\u2019s that tiny voice in my head like this might be the one that blows everything up. 99% of the time it\u2019s fine\u2026 but that 1% sticks with you. Do you just trust it and hope for the best, or always run it on staging first?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/fatherofgoku\"> /u/fatherofgoku </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1mmzx36/do_django_migrations_make_anyone_else_nervous/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1mmzx36/do_django_migrations_make_anyone_else_nervous/\">[comments]</a></span>",
        "id": 3299439,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mmzx36/do_django_migrations_make_anyone_else_nervous",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Do Django migrations make anyone else nervous? Just curious !",
        "vote": 0
    }
]