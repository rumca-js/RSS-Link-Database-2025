[
    {
        "age": null,
        "album": "",
        "author": "/u/Existing_Moment_3794",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-02T13:34:32.483905+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-02T13:31:46+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi all, I&#39;m working on an internal project at my company where we&#39;re trying to connect a large language model (GPT-4o via OpenAI) to our Django-based web application. I\u2019m looking for advice on how to improve accuracy and reduce hallucinations in the current setup.</p> <p>Context: Our web platform is a core internal tool developed with Django + PostgreSQL, and it tracks the technical sophistication of our international teams. We use a structured evaluation matrix that assesses each company across various criteria. </p> <p>The platform includes data such as: \u2022 Companies and their projects \u2022 Sophistication levels for each evaluation criterion \u2022 Discussion threads (like a forum) \u2022 Tasks, attachments, and certifications</p> <p>We\u2019re often asked to generate ad hoc reports based on this data. The idea is to build a chatbot assistant that helps us write Django ORM querysets in response to natural language questions like:</p> <p>\u201cHow many companies hav",
        "id": 3235629,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mfqmjk/anyone_using_gpt4o_rag_to_generate_django_orm",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Anyone using GPT-4o + RAG to generate Django ORM queries? Struggling with hallucinations",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/devGiacomo",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-08-02T13:34:32.653493+00:00",
        "date_dead_since": null,
        "date_published": "2025-08-02T13:12:24+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey Django community! \ud83d\udc4b</p> <p>I\u2019m excited to share an open-source tool that has greatly improved my Django workflow:</p> <p>\ud83d\ude80 <a href=\"https://github.com/giacomo/dj-maker\"><strong>DJ Maker \u2013 GitHub</strong></a><br/> A lightweight yet early powerful Django code generator that instantly creates full apps \u2013 including models, views, URLs, templates, and even <strong>Django REST Framework APIs</strong> \u2013 right from the command line.</p> <h1>\ud83d\udd27 Why DJ Maker?</h1> <p><strong>\u2728 Key Features:</strong></p> <ul> <li>\ud83d\udd01 Full <strong>CRUD</strong> app scaffolding (models, views, urls, templates)</li> <li>\u2699\ufe0f Support for <strong>api, default and advanced routes</strong></li> <li>\ud83c\udfa8 Auto-generated <strong>Bootstrap 5</strong> HTML templates</li> <li>\ud83d\udcbb Beautiful CLI with interactive prompts (powered by Rich and Typer)</li> <li>\ud83e\uddea Preview and <code>--dry-run</code> modes to visualize before generating</li> <li>\u2705 <strong>91% test coverage</strong>, built with best practice",
        "id": 3235630,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1mfq7xr/feedback_dj_maker_generate_full_django_crud_apps",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "\ud83d\udc0d [Feedback] DJ Maker \u2013 Generate Full Django CRUD Apps & DRF APIs with One Command!",
        "vote": 0
    }
]