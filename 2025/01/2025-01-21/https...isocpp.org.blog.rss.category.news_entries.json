[
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-01-21T18:22:56+00:00",
        "description": "<p>\n\t<img alt=\"Depositphotos_478507824_S.jpg\" src=\"https://isocpp.org/files/img/Depositphotos_478507824_S.jpg\" style=\"width: 200px; margin: 10px; float: right; height: 200px;\" />The trick to understanding C++ compiler error messages is to focus on two things. First, look at the beginning of the error message, which tells you what went wrong at a very low level. Then skip over the intermediate errors that follow the chain of calls until you end up at the line of code that&nbsp;<em>you</em>&nbsp;wrote. That original line of code is the one that is leading the compiler to a bad place. After that, you sometimes get supplemental information that helps you understand the low-level error better.</p>\n<blockquote>\n\t<h3>\n\t\t<a href=\"https://devblogs.microsoft.com/oldnewthing/20241209-00/?p=110619\">Learning to read C++ Compiler Errors: Failing to Create a shared_ptr</a></h3>\n\t<p>\n\t\tby Raymond Chen</p>\n</blockquote>\n<p>\n\tFrom the article:</p>\n<blockquote>\n\t<p>\n\t\tConsider the following erroneous c",
        "id": 1951088,
        "language": null,
        "link": "https://isocpp.org//blog/2025/01/learning-to-read-cpp-compiler-errors-failing-to-create-a-shared-ptr-raymond",
        "manual_status_code": 0,
        "page_rating": 29,
        "page_rating_contents": 90,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 314,
        "source_url": "https://isocpp.org/blog/rss/category/news",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Learning to read C++ Compiler Errors: Failing to Create a shared_ptr -- Raymond Chen",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-01-21T06:27:38+00:00",
        "description": "<p>\n\tTwo one-day training workshops will be held in Madrid, co-located with the using std::cpp 2025 conference.</p>\n<h3>\n\t<a href=\"https://www.fundacion.uc3m.es/formacion/c-software-design/\">C++ Software Design - Klaus Iglberger</a></h3>\n<p>\n\tFrom the training description: <em>This 1-day training explores modern C++ design and the modern forms of the classic Gang-of-Four (GoF) design patterns. It provides guidelines, idioms and best practices for sustainable and maintainable design, which enable programmers to create professional, high-quality code.</em></p>\n<h3>\n\t<a href=\"https://www.fundacion.uc3m.es/formacion/concurrency-tools-in-the-c-standard-library-a-hands-on-workshop/\">Concurrency Tools in the C++ Standard Library - Mateusz Pusz</a></h3>\n<p>\n\tFrom the training description: <em>During this training, we will learn the concurrency utilities in the C++ Standard Library. We will also explain how new C++20 features improve the \"old\" abstractions we got before. We will talk about th",
        "id": 1952043,
        "language": null,
        "link": "https://isocpp.org//blog/2025/01/pre-conference-trainings-at-using-stdcpp-2025-with-klaus-iglberger-and-mate",
        "manual_status_code": 0,
        "page_rating": 29,
        "page_rating_contents": 90,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 314,
        "source_url": "https://isocpp.org/blog/rss/category/news",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Pre-conference trainings at using std::cpp 2025 with Klaus Iglberger and Mateusz Pusz",
        "vote": 0
    }
]