[
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-01-15T18:16:53+00:00",
        "description": "<p>\n\t<img alt=\"SANDOR_DARGO_ROUND.JPG\" src=\"https://isocpp.org/files/img/SANDOR_DARGO_ROUND.JPG\" style=\"width: 200px; margin: 10px; float: right; height: 200px;\" />This article explores how C++20 concepts can replace CRTP when implementing static interfaces for a family of classes. By leveraging concepts, we achieve cleaner, more readable, and less error-prone code&mdash;provided you have access to C++20.</p>\n<blockquote>\n\t<h3>\n\t\t<a href=\"https://www.sandordargo.com/blog/2024/12/04/crtp-vs-concepts\">Replace CRTP with Concepts</a></h3>\n\t<p>\n\t\tby Sandor Dargo</p>\n</blockquote>\n<p>\n\tFrom the article:</p>\n<blockquote>\n\t<p>\n\t\tIn my Meeting C++ 2024 trip report, among my favourite ideas I mentioned&nbsp;<a href=\"https://meetingcpp.com/2024/Talks/items/Design_Patterns___The_Most_Common_Misconceptions__2_of_N_.html\">Klaus Iglberger&rsquo;s talk</a>&nbsp;where he mentioned the possibility of replacing the curiously returning template pattern with the help of class tagging and concepts.</p>\n\t<",
        "id": 1911347,
        "language": null,
        "link": "https://isocpp.org//blog/2025/01/replace-crtp-with-concepts-sandor-dargo",
        "manual_status_code": 0,
        "page_rating": 29,
        "page_rating_contents": 90,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 314,
        "source_url": "https://isocpp.org/blog/rss/category/news",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Replace CRTP with Concepts -- Sandor Dargo",
        "vote": 0
    }
]