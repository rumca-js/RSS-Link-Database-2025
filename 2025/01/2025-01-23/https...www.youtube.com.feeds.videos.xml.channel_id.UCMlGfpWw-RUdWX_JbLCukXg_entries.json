[
    {
        "age": null,
        "album": "",
        "author": "CppCon",
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-01-23T15:07:07+00:00",
        "description": "https://cppcon.org\u200b\n---\n\nBack to Basics: Functional Programming and Monads in C++ - Jonathan Mu\u0308ller - CppCon 2024\n---\n\nFunctional programming is a declarative way of writing programs by composing functions.\nIn many situations, this can lead to code that is easier to write and understand and less error-prone.\nHowever, it requires a shift to a more functional mindset.\nThis talk gives an introduction to functional programming in C++ using the modern standard library.\nWe will cover algorithms using `std::ranges`, composable error handling with `std::optional` and `std::expected`, algebraic data types, and separating IO from computation.\nIn the end, we'll even cover the M-word.\n---\n\nSlides: https://github.com/CppCon/CppCon2024/blob/main/Presentations/Back_To_Basics_Functional_Programming_In_Cpp.pdf\n\nSponsored by JetBrains: https://www.jetbrains.com/clion/\n---\n\nJonathan M\u00fcller\n \nJonathan is a Software Engineer at think-cell. There, he is responsible for maintaining think-cell's core libra",
        "id": 1964554,
        "language": null,
        "link": "https://www.youtube.com/watch?v=-dXFmWXMrm0",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 420,
        "source_url": "https://www.youtube.com/feeds/videos.xml?channel_id=UCMlGfpWw-RUdWX_JbLCukXg",
        "status_code": 0,
        "tags": [],
        "thumbnail": "https://i2.ytimg.com/vi/-dXFmWXMrm0/hqdefault.jpg",
        "title": "Back to Basics: Functional Programming and Monads in C++ - Jonathan Mu\u0308ller - CppCon 2024",
        "vote": 0
    }
]