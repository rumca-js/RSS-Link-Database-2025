[
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-02-12T14:05:00+00:00",
        "description": "<div id=\"remove_no_follow\">\n\t\t<div class=\"grid grid--cols-10@md grid--cols-8@lg article-column\">\n\t\t\t\t\t  <div class=\"col-12 col-10@md col-6@lg col-start-3@lg\">\n\t\t\t\t\t\t<div class=\"article-column__content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n\n<p>Snowflake on Wednesday announced the public\u00a0preview of Cortex Agents, a set of APIs built on top of the Snowflake Intelligence platform, a low-code offering that was first <a href=\"https://www.infoworld.com/article/3603375/snowflake-bares-its-agentic-ai-plans-by-showcasing-its-intelligence-platform.html\">launched</a> in November at Build, the company\u2019s annual developer conference.</p>\n\n\n\n<p>Asked at a press and analyst briefing held earlier this week how the most recent launch differs from what was introduced at Build, Baris Gultekin, head of AI at Snowflake, responded, \u201cit is not a repeat\u201d and that the agents are what Software Intelligence, which will be in private preview soon, builds on.</p>",
        "id": 2097979,
        "language": "en-US",
        "link": "https://www.infoworld.com/article/3822506/snowflake-announces-preview-of-cortex-agent-apis-to-power-enterprise-data-intelligence.html",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 468,
        "source_url": "https://www.infoworld.com/feed/",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Snowflake announces preview of Cortex Agent APIs to power enterprise data intelligence",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-02-12T09:00:00+00:00",
        "description": "<div id=\"remove_no_follow\">\n\t\t<div class=\"grid grid--cols-10@md grid--cols-8@lg article-column\">\n\t\t\t\t\t  <div class=\"col-12 col-10@md col-6@lg col-start-3@lg\">\n\t\t\t\t\t\t<div class=\"article-column__content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n\n<p>Python is <a href=\"https://www.infoworld.com/article/3632272/python-wins-tiobe-language-of-the-year-honors.html\">one of the most popular programming language today</a>, in part due to its large ecosystem of tools for data science and AI applications. But <a href=\"https://www.infoworld.com/article/2253770/what-is-python-powerful-intuitive-programming.html\">Python</a> is also a popular choice for developing web apps, particularly using the <a href=\"https://www.infoworld.com/article/2336992/django-tutorial-get-started-with-django-50.html\">Django web framework</a>. I\u2019ve written a few articles demonstrating how <a href=\"https://www.infoworld.com/article/2334868/htmx-dynamic-html-without-the-javascri",
        "id": 2096195,
        "language": "en-US",
        "link": "https://www.infoworld.com/article/3802689/dynamic-web-apps-with-htmx-python-and-django.html",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 468,
        "source_url": "https://www.infoworld.com/feed/",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Dynamic web apps with HTMX, Python, and Django",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-02-12T09:00:00+00:00",
        "description": "<div id=\"remove_no_follow\">\n\t\t<div class=\"grid grid--cols-10@md grid--cols-8@lg article-column\">\n\t\t\t\t\t  <div class=\"col-12 col-10@md col-6@lg col-start-3@lg\">\n\t\t\t\t\t\t<div class=\"article-column__content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n\n<p>I\u2019ve been developing software for many years now.\u00a0Decades. I\u2019ve learned a lot along the way, and I dare to think that I\u2019ve collected some wisdom about software development worth sharing with others.\u00a0At some point, you think \u201cYeah, I\u2019ve got a grip on this thing.\u201d<br><br>And every once in a while, you have some revelation that is the culmination of what you\u2019ve learned along the way.\u00a0I\u2019ll never forget the moment I understood dependency injection.\u00a0<em>Of</em> <em>course</em> you would want to pass in an abstraction rather than create an implementation!<br><br>I had a similar revelation this week.\u00a0I\u2019m sure there are plenty of sager developers among you who have already figured this out, but it struc",
        "id": 2096197,
        "language": "en-US",
        "link": "https://www.infoworld.com/article/3820278/keep-your-code-open-to-possibilities.html",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 468,
        "source_url": "https://www.infoworld.com/feed/",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Keep your code open to possibilities",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-02-12T09:00:00+00:00",
        "description": "<div id=\"remove_no_follow\">\n\t\t<div class=\"grid grid--cols-10@md grid--cols-8@lg article-column\">\n\t\t\t\t\t  <div class=\"col-12 col-10@md col-6@lg col-start-3@lg\">\n\t\t\t\t\t\t<div class=\"article-column__content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n\n<p>Rust shares many concepts with other languages intended for systems programming. For instance, Rust distinguishes between memory allocated from the stack and memory allocated from the heap. It also ensures that variables declared within a scope are unavailable outside of that scope.</p>\n\n\n\n<p>But Rust implements these behaviors in its own way, with significant implications for how memory management works. Rust uses a variety of <em>ownership</em> metaphors to describe how resources are created, retained, and disposed of during a program\u2019s lifetime. Learning how to work with Rust\u2019s concept of ownership is an important rite of initiation for Rust programmers. This quick guide will help you get st",
        "id": 2096196,
        "language": "en-US",
        "link": "https://www.infoworld.com/article/3815535/rust-memory-management-explained.html",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 468,
        "source_url": "https://www.infoworld.com/feed/",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Rust memory management explained",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-02-12T02:50:30+00:00",
        "description": "<div id=\"remove_no_follow\">\n\t\t<div class=\"grid grid--cols-10@md grid--cols-8@lg article-column\">\n\t\t\t\t\t  <div class=\"col-12 col-10@md col-6@lg col-start-3@lg\">\n\t\t\t\t\t\t<div class=\"article-column__content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n\n<p>Microsoft Threat Intelligence in December observed a \u201cthreat actor\u201d using a publicly available ASP.NET machine key to inject malicious code and fetch the <a href=\"https://www.hhs.gov/sites/default/files/november-2024%E2%80%93godzilla-webshell-analyst-note.pdf\">Godzilla</a> post-exploitation framework, a \u201cbackdoor\u201d web shell used by intruders to execute commands and manipulate files. The company then identified more than 3,000 publicly disclosed ASP.NET machine keys\u2014i.e., keys that were disclosed in code documentation and repositories\u2014that could be used in these types of attacks, called ViewState code injection attacks.</p>\n\n\n\n<p>In response, Microsoft Threat Intelligence is warning organization",
        "id": 2095003,
        "language": "en-US",
        "link": "https://www.infoworld.com/article/3822367/dont-use-public-asp-net-keys-duh-microsoft-warns.html",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 468,
        "source_url": "https://www.infoworld.com/feed/",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Don\u2019t use public ASP.NET keys (duh), Microsoft warns",
        "vote": 0
    }
]