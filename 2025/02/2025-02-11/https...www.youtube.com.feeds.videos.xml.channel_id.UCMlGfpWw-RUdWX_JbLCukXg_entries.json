[
    {
        "age": null,
        "album": "",
        "author": "CppCon",
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-02-11T15:07:06+00:00",
        "description": "https://cppcon.org\u200b\n---\n\nBeyond Compilation Databases to Support C++ Modules: Build Databases - Ben Boeckel - CppCon 2024\n---\n\nClang's compilation database specification has been a way for tools to understand what is happening within a build. It has been used to drive language server protocols for editor/IDE integration, facilitate static analysis over codebases, and more. Alas, it is not powerful enough to properly describe a build that includes C++ modules. Something more is needed: a build database.\n\nIn this talk, I'll explore the limitations of the compilation database when it comes to modules, why modules require further enhancement, and plans in the works to generate the additional information needed to understand how the build of a codebase using C++ modules really works.\n---\n\nSlides: https://github.com/CppCon/CppCon2024/blob/main/Presentations/Beyond_Compilation_Databases_to_Support_Cpp_Modules.pdf\n\nSponsored by JetBrains: https://www.jetbrains.com/clion/\n---\n\nBen Boeckel\n \nB",
        "id": 2090518,
        "language": null,
        "link": "https://www.youtube.com/watch?v=GUqs_CM7K_0",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 420,
        "source_url": "https://www.youtube.com/feeds/videos.xml?channel_id=UCMlGfpWw-RUdWX_JbLCukXg",
        "status_code": 0,
        "tags": [],
        "thumbnail": "https://i4.ytimg.com/vi/GUqs_CM7K_0/hqdefault.jpg",
        "title": "Beyond Compilation Databases to Support C++ Modules: Build Databases - Ben Boeckel - CppCon 2024",
        "vote": 0
    }
]