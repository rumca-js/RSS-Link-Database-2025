[
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-02-09T22:15:31+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I have learn Most basic Django. I feel like I&#39;m not sure I have enough knowledge. So I want to find ideas for projects. I think it&#39;s good idea to start project to gain confidence.</p> <h1>Things I already know about Django</h1> <ul> <li>MVT Design Pattern</li> <li>Django Model</li> <li>Views - class-base, function-base</li> <li>Template</li> <li>Form</li> <li>Authentication - username/password, OAuth</li> <li>Testing</li> <li>Ninja</li> <li>Celery</li> <li>Django-Channel</li> </ul> <h1>My Background</h1> <ul> <li>I am college student in computer-sci</li> </ul> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Able_Ad_7858\"> /u/Able_Ad_7858 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1ilqtn4/need_inspiration_help/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1ilqtn4/need_inspiration_help/\">[comments]</a></span>",
        "id": 2077781,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1ilqtn4/need_inspiration_help",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Need Inspiration Help",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-02-09T21:07:22+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>A few months ago I wrote a <a href=\"https://www.reddit.com/r/django/comments/1gq5efh/building_efficient_api_in_django_rest_framework/?utm_source=share&amp;utm_medium=web3x&amp;utm_name=web3xcss&amp;utm_term=1&amp;utm_content=share_button\">post</a> about comparing the API serialization performance retrieve large amount of records in Django REST Framework, Django Ninja, and Golang. I provided a step-by-step guide in optimization for Django as well as dockerized example for each framework tested. A lot of you liked it, and one common ask was, how does FastAPI compared.</p> <p>It&#39;s taken me a while to sit down and work on this again, but I have now included a dockerized example of FastAPI with SQLAlchemy and Pydantic on the same set of data models with exact same API for comparison. I also added a dockerized example of Locust to do testing now. You can check it out and test it for yourself: <a href=\"https://github.com/oscarychen/building-efficient-ap",
        "id": 2077210,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1ilp876/django_rest_framework_django_ninja_fastapi_with",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Django REST framework, Django Ninja, FastAPI with Pydantic, and Golang API serialization performance.",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-02-09T19:24:35+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Learned a lot from this community and the various Django resources out there. Very grateful for that. </p> <p>Allowed me to launch afteractions.com, which allows you to schedule certain actions that happen in the event of your passing (e.g., sending emails, sharing important files). </p> <p>Built on Django, the rest of the tech stack is Heroku, Cloudflare, Mailgun, Stripe, Twilio. </p> <p>Totally free to try it out for 14 days (no credit card required). Would love to hear your feedback! </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/frankymichaels\"> /u/frankymichaels </a> <br/> <span><a href=\"http://afteractions.com\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1ilmsig/critique_this_django_app/\">[comments]</a></span>",
        "id": 2076853,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1ilmsig/critique_this_django_app",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Critique this Django App",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-02-09T19:22:54+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Not sure if this is a stupid question, but I can&#39;t figure it out. I want to have a &#39;static/&#39; and &#39;templates/&#39; folder at the project level to use as bases to work off for each app. The question is, when rendering a CSS file, for example, how do I select between &#39;project_dir/static/style.css&#39; and &#39;app_name/static/app_name/style.css&#39;? Is it as simple as typing in the full path? (This has only just occurred to me while typing this).</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/KzHyperz\"> /u/KzHyperz </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1ilmr1m/select_between_projectlevel_static_files_and/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1ilmr1m/select_between_projectlevel_static_files_and/\">[comments]</a></span>",
        "id": 2076852,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1ilmr1m/select_between_projectlevel_static_files_and",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Select between project-level static files and app-level",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-02-09T14:36:47+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Currently adding some features to a project where users can like photos and comments. </p> <p>My proposed plan to improve read performance is to use denormalization where each item in the MediaItems and Comments models has an integer field to count the number of likes and a liked_by field with a through parameter.</p> <p><code>class Comments(models.Model):</code><br/> <code>comment_content = models.TextField()</code><br/> <code>likes_count = models.PositiveIntegerField(default=0)</code><br/> <code>liked_by = models.ManyToManyField(User, related_name=&#39;liked_comments&#39;, through=&#39;Like&#39;)</code></p> <p>Is this an appropriate approach or am I overcomplicating things? </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/netzure\"> /u/netzure </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1ilg1h8/thoughts_on_denormalization_strategy/\">[link]</a></span> &#32; <span><a href=\"https://www.reddi",
        "id": 2075593,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1ilg1h8/thoughts_on_denormalization_strategy",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Thoughts on denormalization strategy?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-02-09T09:20:32+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi, I&#39;ve been developing my first project in Django and one of its features is that users can search for movies/series by title (shouldn&#39;t match the exact name) and add them to their watchlist. The problem I ran into is that I&#39;m not sure of how to provide the search results.<br/> The first thing that came to my mind was to use API that I&#39;d found on rapidapi, but the free plan offers only 500 requests per month which might get problematic when the app is used by multiple users. Then I thought I would query a database first and if there are no matches, I&#39;d make an API call and store it into the database.<br/> However, now I can&#39;t know for sure if the search query contains any possible match. For example, it can be some nonsense, which won&#39;t retrieve any data from the db and I would need to make API request to find out that there are no such movies. Or I can&#39;t be certain that the query will get enough data from the db. Li",
        "id": 2075592,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1ilazjf/need_advice_with_search_functionality_design",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Need advice with search functionality design",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-02-09T04:51:40+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/stsewd\"> /u/stsewd </a> <br/> <span><a href=\"https://stsewd.dev/posts/xss-in-djang-impersonate-and-django-gravatar2/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1il713q/xss_in_djangoimpersonate_193_and_djangogravatar2/\">[comments]</a></span>",
        "id": 2075591,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1il713q/xss_in_djangoimpersonate_193_and_djangogravatar2",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "XSS in django-impersonate 1.9.3 and django-gravatar2 1.4.4",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-02-09T04:14:48+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I just created a <strong>Python-based CLI tool</strong> that tracks student leaves and <strong>automatically sends a warning email</strong> if the leave count exceeds <strong>3</strong>. The project uses <strong>SMTP</strong> to send notifications, making it a simple yet effective way to automate attendance tracking.</p> <h1>\ud83d\udee0 Features:</h1> <p>\u2705 CLI-based input for student name, subject, and leave count.<br/> \u2705 Auto-sends an email if leaves exceed <strong>3</strong>.<br/> \u2705 Uses <strong>SMTP</strong> for email notifications.<br/> \u2705 Easily configurable and extendable.</p> <h1>\ud83d\udce9 How It Works:</h1> <p>1\ufe0f\u20e3 The student enters their <strong>name, subject, and leave count</strong>.<br/> 2\ufe0f\u20e3 If the leave count <strong>&gt;3</strong>, the script triggers an <strong>email warning</strong>.<br/> 3\ufe0f\u20e3 The email is sent using <strong>Python\u2019s smtplib</strong> with customized content.</p> <h1>\ud83d\udd17 Check out the GitHub Repo:</h1> <p>\ud83d\udc49 <a href=\"https://github.com/abhin",
        "id": 2075596,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1il6egs/i_built_a_clibased_student_leave_warning_system",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "\ud83d\ude80 I Built a CLI-Based Student Leave Warning System with Python!",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-02-09T02:39:36+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hello! I&#39;m currently having a project where we need to create a website using django and i need your help, can anyone help me setup it on django and also connect to a database and what other needs needed for a website. It&#39;s such a big help for me and also I&#39;m a college student!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/harumicu\"> /u/harumicu </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1il4o38/setup_website_on_django_by_codespaces/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1il4o38/setup_website_on_django_by_codespaces/\">[comments]</a></span>",
        "id": 2075594,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1il4o38/setup_website_on_django_by_codespaces",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Setup website on django by codespaces",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-02-09T01:06:36+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I don&#39;t know what should I do after finished the book. Should I start to create my own project or read another book or tutorial to solidify my understanding?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Wonderful_Title_829\"> /u/Wonderful_Title_829 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1il2v8v/ive_finished_django_for_beginners_book_whats_next/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1il2v8v/ive_finished_django_for_beginners_book_whats_next/\">[comments]</a></span>",
        "id": 2075595,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1il2v8v/ive_finished_django_for_beginners_book_whats_next",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "I've finished django for beginners book. What's next?",
        "vote": 0
    }
]