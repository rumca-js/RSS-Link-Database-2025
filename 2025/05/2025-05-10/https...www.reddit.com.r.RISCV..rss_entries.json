[
    {
        "age": null,
        "album": "",
        "author": "/u/hasmukh_lal_ji",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-10T22:09:41.595675+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-10T21:57:21+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey everyone,</p> <p>I&#39;ve always had a keen interest in CPU architecture. While I haven\u2019t deeply explored x86 or ARM, I\u2019ve picked up enough to help me with some reverse engineering tasks. Now, I really want to dive deep and properly learn a CPU architecture, firmware etc.</p> <p>I\u2019ve chosen RISC-V because of its open nature, and I genuinely believe it has a strong future. I want to contribute to that future in some way.</p> <p>Right now, I\u2019m going through the RISC-V Fundamentals (LFD210) course. But to be honest, the exam is just an excuse. I want to really understand the concepts and get my hands on it.</p> <p>Please let me know if you have any suggestions that could help me in this journey.</p> <p>Thanks in advance!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/hasmukh_lal_ji\"> /u/hasmukh_lal_ji </a> <br/> <span><a href=\"https://www.reddit.com/r/RISCV/comments/1kjlgol/preparing_for_riscv_foundational_asso",
        "id": 2648538,
        "language": null,
        "link": "https://www.reddit.com/r/RISCV/comments/1kjlgol/preparing_for_riscv_foundational_associate_rvfa",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 471,
        "source_url": "https://www.reddit.com/r/RISCV/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Preparing for RISC-V Foundational Associate (RVFA) by Linux Foundation",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Proper_Milk321",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-10T13:21:55.982860+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-10T13:20:01+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>As stated in the title I want to add a new instruction. It is similar to vfmacc.vv but it is called mfmacc.vv and treats the vectors registers as matrix. I have added the instruction to riscv-opcode and riscv-gnu-toolchain. I wrote a simple program to test if its compiles, it does, with no problem. Then i added the instruction in qemu. Currently it is just vfmacc with another name. When triying to execute it in qemu i come accross the following message: &quot;Illegal instruction (core dumped)&quot;. I tried the exact same code with vfmacc and it works.</p> <p>The changes i conduct in qemu file are:<br/> riscv/insn_trans/trans_rvv.c.inc:</p> <pre><code>GEN_OPFVV_TRANS(mfmacc_vv, opfvv_check) </code></pre> <p>riscv/helper.h</p> <pre><code>/*Matrix operation*/ DEF_HELPER_6(mfmacc_vv_h, void, ptr, ptr, ptr, ptr, env, i32) DEF_HELPER_6(mfmacc_vv_w, void, ptr, ptr, ptr, ptr, env, i32) DEF_HELPER_6(mfmacc_vv_d, void, ptr, ptr, ptr, ptr, env, i32) </code></pr",
        "id": 2645879,
        "language": null,
        "link": "https://www.reddit.com/r/RISCV/comments/1kja532/problems_adding_custom_instruction_to_riscv",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 471,
        "source_url": "https://www.reddit.com/r/RISCV/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Problems adding custom instruction to riscv vector extension in qemu",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Marcuss2",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-10T13:21:55.721843+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-10T12:38:12+00:00",
        "description": "<table> <tr><td> <a href=\"https://www.reddit.com/r/RISCV/comments/1kj9b4h/codasip_introduces_l150_32bit_3stage_core_focused/\"> <img src=\"https://external-preview.redd.it/eX11U15zNvfoZt8q1fAF5Z_eAUf1Svq9TsLfxdNc8KY.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=9f59bb10f7038a5621bcc0a90bfe29f15ff1275e\" alt=\"Codasip introduces L150 32-bit 3-stage core focused on customization\" title=\"Codasip introduces L150 32-bit 3-stage core focused on customization\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Marcuss2\"> /u/Marcuss2 </a> <br/> <span><a href=\"https://codasip.com/2025/05/08/bounded-customization-in-action-codasip-l150-and-cordic-acceleration-for-motor-control/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/RISCV/comments/1kj9b4h/codasip_introduces_l150_32bit_3stage_core_focused/\">[comments]</a></span> </td></tr></table>",
        "id": 2645878,
        "language": null,
        "link": "https://www.reddit.com/r/RISCV/comments/1kj9b4h/codasip_introduces_l150_32bit_3stage_core_focused",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 471,
        "source_url": "https://www.reddit.com/r/RISCV/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": "https://external-preview.redd.it/eX11U15zNvfoZt8q1fAF5Z_eAUf1Svq9TsLfxdNc8KY.png?width=640&crop=smart&auto=webp&s=9f59bb10f7038a5621bcc0a90bfe29f15ff1275e",
        "title": "Codasip introduces L150 32-bit 3-stage core focused on customization",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/LivingLinux",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-10T11:10:00.967413+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-10T10:12:05+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Disclosure: SpacemiT sent me the MUSE Pi Pro RISC-V SBC for free</p> <p>As it is has the same SpacemiT K1 as the Banana Pi BPI-F3, no surprises here.</p> <p>The Bianbu image has limited support for the GPU, mpv can use the VPU for hardware video decoding and it comes with a front-end for some AI programs (Ollama, Yolo, etc.).</p> <p>I also did some quick tests with Box64 and Docker.</p> <p><a href=\"https://youtu.be/1OsPdJXyRak\">https://youtu.be/1OsPdJXyRak</a></p> <p>They shipped it without a cooler, and pushing the 8 CPU cores to 100% will get it to 95 degrees Celsius in a couple of minutes, locking up the board. Adding a fan will prevent this.</p> <p>For anyone interested, here is the unboxing: <a href=\"https://youtu.be/1CzznQ4gntA\">https://youtu.be/1CzznQ4gntA</a></p> <p>Developer: <a href=\"https://developer.spacemit.com\">https://developer.spacemit.com</a><br/> Forum: <a href=\"https://forum.spacemit.com\">https://forum.spacemit.com</a></p> </div><!-",
        "id": 2645221,
        "language": null,
        "link": "https://www.reddit.com/r/RISCV/comments/1kj6wvw/unboxing_spacemit_muse_pi_pro_riscv_sbc",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 471,
        "source_url": "https://www.reddit.com/r/RISCV/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Unboxing SpacemiT MUSE Pi Pro RISC-V SBC",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/CrumbChuck",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-10T05:44:50.711896+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-10T05:12:00+00:00",
        "description": "<table> <tr><td> <a href=\"https://www.reddit.com/r/RISCV/comments/1kj2lwl/milkv_showcases_jupiter_nx_a_riscvbased/\"> <img src=\"https://external-preview.redd.it/vu7IF69rfQ-_ERFT0Pi9wnlQJcytGNuZpac7Lur_Apc.jpeg?width=640&amp;crop=smart&amp;auto=webp&amp;s=8fb9d16c05bb579b89b916f8b45b09680487fe24\" alt=\"Milk-V Showcases Jupiter NX, a RISC-V-Based Alternative to Jetson Nano Modules\" title=\"Milk-V Showcases Jupiter NX, a RISC-V-Based Alternative to Jetson Nano Modules\" /> </a> </td><td> <!-- SC_OFF --><div class=\"md\"><p>The SoC at the core of the Jupiter NX is based on the SpacemIT K1/M1 octa-core processor X60 CPU architecture and supports RV64GC(VB), RVA22, and RVV1.0 vector extensions.</p> <p>Jupiter NX will be available in configurations with 2GB, 4GB, 8GB, or 16GB of LPDDR4X RAM.</p> <p>The Jupiter NX is compatible with NVIDIA Jetson Nano baseboards.</p> <p>Listed starting price of $49.90.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/CrumbChuck",
        "id": 2644023,
        "language": null,
        "link": "https://www.reddit.com/r/RISCV/comments/1kj2lwl/milkv_showcases_jupiter_nx_a_riscvbased",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 471,
        "source_url": "https://www.reddit.com/r/RISCV/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": "https://external-preview.redd.it/vu7IF69rfQ-_ERFT0Pi9wnlQJcytGNuZpac7Lur_Apc.jpeg?width=640&crop=smart&auto=webp&s=8fb9d16c05bb579b89b916f8b45b09680487fe24",
        "title": "Milk-V Showcases Jupiter NX, a RISC-V-Based Alternative to Jetson Nano Modules",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/oscardssmith",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-10T03:35:20.537148+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-10T03:31:53+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Back in 2021 or so, the bitmanip extension draft included a number of really powerful and general operations (grev, gorl etc) that if I understand correctly got moved to a &quot;zbp&quot; extension when bitmanip got split up. From then, as far as I can tell, nothing happened with ratifying zbp.</p> <p>Is this more or less correct? Is there a plan to ratify it eventually or is it just outdated?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/oscardssmith\"> /u/oscardssmith </a> <br/> <span><a href=\"https://www.reddit.com/r/RISCV/comments/1kj0xxo/what_happened_to_the_zbp_instruction_set/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/RISCV/comments/1kj0xxo/what_happened_to_the_zbp_instruction_set/\">[comments]</a></span>",
        "id": 2643659,
        "language": null,
        "link": "https://www.reddit.com/r/RISCV/comments/1kj0xxo/what_happened_to_the_zbp_instruction_set",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 471,
        "source_url": "https://www.reddit.com/r/RISCV/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "What happened to the zbp instruction set?",
        "vote": 0
    }
]