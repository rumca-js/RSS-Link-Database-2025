[
    {
        "age": null,
        "album": "",
        "author": "/u/tesseralhq",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-28T21:01:47.063096+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-28T20:53:59+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey everyone, I\u2019m Megan writing from Tesseral, the YC-backed open source authentication platform built specifically for B2B software (think: SAML, SCIM, RBAC, session management, etc.). We released our Python SDK (supporting Flask) and would love feedback from Django devs on whether this is something they&#39;d be interested in...</p> <p>If you\u2019re interested in auth or if you have experience building it in Django, would love to know what\u2019s missing / confusing / would make this easier to use in your stack? Also, if you have general gripes about auth (it is very gripeable) would love to hear them. </p> <p>Here\u2019s our GitHub: <a href=\"https://github.com/tesseral-labs/tesseral\">https://github.com/tesseral-labs/tesseral</a> </p> <p>And our docs: <a href=\"https://tesseral.com/docs/what-is-tesseral\">https://tesseral.com/docs/what-is-tesseral</a> </p> <p>Appreciate the feedback! :) </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.",
        "id": 2793154,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1kxs9fu/we_built_a_python_sdk_for_our_open_source_auth",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "We built a Python SDK for our open source auth platform - would love feedback from Django devs!!",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Life_Letterhead_5738",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-28T19:56:48.169680+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-28T19:46:00+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi everyone,</p> <p>I just published an ebook called <strong>\u201cDjango Unchained for Beginners\u201d</strong> \u2013 a hands-on guide to learning Django by building two complete projects:</p> <ol> <li>\u2705 <strong>To-Do App</strong> \u2013 Covers core Django CRUD concepts</li> <li>\u2705 <strong>Blog App</strong> \u2013 Includes: <ul> <li>Custom user auth</li> <li>Newsletter system</li> <li>Comments</li> <li>Rich Text Editor</li> <li>PostgreSQL</li> <li>Deployed for free on Render</li> </ul></li> </ol> <p>\ud83d\udcc1 <strong>Source code included</strong> for both projects.</p> <p>\ud83c\udf81 I&#39;m giving away the ebook <strong>100% free to the first 50 people</strong>.</p> <p>\ud83d\udcdd If you grab a copy, I\u2019d really appreciate an <strong>honest review</strong> to help others!</p> <p>\ud83d\udcce <strong>Gumroad link and blog demo</strong>, Manually type the link from the image to the browser.</p> <p><a href=\"https://preview.redd.it/bzpynaqvtk3f1.png?width=1460&amp;format=png&amp;auto=webp&amp;s=3ef685187532b7d80bb100",
        "id": 2792637,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1kxqjhb/free_for_first_50_django_beginners_ebook_build",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "\ud83d\ude80 [Free for First 50] Django Beginners Ebook \u2013 Build Real Projects, 100% Off!",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Language-Purple",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-28T18:51:44.831749+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-28T18:06:18+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I apologize if any of this is basic, but I&#39;m a novice in Python. Our client has a legacy Django app hosted in Azure that we need to support (we didn&#39;t originally write this). I&#39;m trying to enable CORS, but it simply isn&#39;t working for me. Contrary to typical issues, my endpoints are allowing all requests to come through despite setting `CORS_ALLOWED_ORIGINS` to specific domains.</p> <p>This is the `settings.py` file. The `DEWM_HOSTED_UI_ORIGIN` variable is set to a legitimate domain, <a href=\"http://example.com\">http://example.com</a> for example. I made sure to put the cors middleware as high in the middleware array as possible.</p> <pre><code>&#39;&#39;&#39; Django settings for DevicesOfDewm project. Generated by &#39;django-admin startproject&#39; using Django 5.0.2. For more information on this file, see https://docs.djangoproject.com/en/5.0/topics/settings/ For the full list of settings and their values, see https://docs.djangoproj",
        "id": 2792112,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1kxo0xa/struggling_with_cors",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Struggling with CORS",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Life_Letterhead_5738",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-28T17:46:41.931167+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-28T17:29:26+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi everyone,</p> <p>I just published an ebook called <strong>\u201cDjango Unchained for Beginners\u201d</strong> \u2013 a hands-on guide to learning Django by building two complete projects:</p> <ol> <li>\u2705 <strong>To-Do App</strong> \u2013 Covers core Django CRUD concepts</li> <li>\u2705 <strong>Blog App</strong> \u2013 Includes: <ul> <li>Custom user auth</li> <li>Newsletter system</li> <li>Comments</li> <li>Rich Text Editor</li> <li>PostgreSQL</li> <li>Deployed for free on Render</li> </ul></li> </ol> <p>\ud83d\udcc1 <strong>Source code included</strong> for both projects.</p> <p>\ud83c\udf81 I&#39;m giving away the ebook <strong>100% free to the first 50 people</strong>.</p> <p>\ud83d\udcdd If you grab a copy, I\u2019d really appreciate an <strong>honest review</strong> to help others!</p> <p>\ud83d\udcce <strong>Gumroad link and blog demo</strong> will be added in the <strong>comments</strong> below.</p> <p>Thanks and happy coding! </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Life_Le",
        "id": 2791498,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1kxn2rv/free_for_first_50_django_beginners_ebook_build",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "\ud83d\ude80 [Free for First 50] Django Beginners Ebook \u2013 Build Real Projects, 100% Off!",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/AdAshamed5374",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-28T17:46:42.079833+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-28T17:22:28+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey everyone! \ud83d\udc4b</p> <p>I\u2019ve opened a small feature proposal to add a built-in <code>LastDayOfMonth</code> database function to Django:</p> <p>\ud83d\udd17 <strong>GitHub issue</strong>: <a href=\"https://github.com/django/new-features/issues/38\">https://github.com/django/new-features/issues/38</a></p> <h1>What it does</h1> <pre><code>pythonCopiaModificafrom django.db.models.functions import LastDayOfMonth Invoice.objects.annotate( period_end=LastDayOfMonth(&quot;issued_at&quot;) ) </code></pre> <p><em>Returns the last calendar day of the month for any</em> <code>DateField</code> <em>/</em> <code>DateTimeField</code> <em>expression.</em></p> <h1>Why it matters</h1> <ul> <li>Common accounting/reporting need (salary cut-offs, month-end KPIs).</li> <li>Today you must hand-roll a <code>Func</code> subclass or raw SQL for each backend.</li> <li>Boiler-plate is easy to get subtly wrong (leap years, Oracle quirks).</li> <li>A core helper standardises the pattern and ship",
        "id": 2791499,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1kxmwn3/proposal_add_builtin_lastdayofmonth_database",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Proposal: Add built-in LastDayOfMonth database function \u2013 feedback & \ud83d\udc4d votes welcome",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Responsible-Amoeba40",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-28T17:46:42.315238+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-28T16:57:50+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi there, I really want to focus on Full-Stack Django/Python however I work for a hospital that focuses heavily on Java/Spring Boot and some C#. While I&#39;m not too crazy about learning Java or C#, they&#39;re an important staple where I work at a Hospital in Tech-Operations. I feel like by focusing on Python, I won&#39;t be considered if I don&#39;t know Java or C#. Can I please get some advice? Thank you in advance.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Responsible-Amoeba40\"> /u/Responsible-Amoeba40 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1kxma90/question_about_pythondjango_career/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1kxma90/question_about_pythondjango_career/\">[comments]</a></span>",
        "id": 2791500,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1kxma90/question_about_pythondjango_career",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Question about Python/Django career",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Jafty2",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-28T16:41:45.710671+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-28T16:21:45+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>&quot;Why would you create a social network bro we already spend too much time scrolling gtfoh bro&quot;<br/> Well, that&#39;s the point: I am building a website that is supposed to create a &quot;real&quot; network of socialization, not by keeping people on their phone, but by allowing them to meet in small groups to share social-oriented activities together, with a host who facilitates that.</p> <p>The point of this post is to retrieve advices and get criticism about the way that I could improve it.</p> <p>My main goal is improve as much as possible, since my day to day &quot;engineer&quot; job won&#39;t allow me to code consequently.<br/> I tried to implement advanced theoretical concepts : TDD, DDD, clean architectures, and I built 99% of my application logic in pure python that communicates with gateways and database through Django. Therer are unit tests for each business behavior. </p> <p>I have a few ideas for next features that would allow the",
        "id": 2790753,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1kxldg7/i_have_built_a_social_network_with_django_html",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "I have built a social network with django, HTML, CSS, and a pinch of JS",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Life_Letterhead_5738",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-28T16:41:45.859768+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-28T16:21:04+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi everyone,</p> <p>I\u2019m a Django developer and recently published an ebook called <strong>\u201cDjango Unchained for Beginners.\u201d</strong> It\u2019s an English ebook focused on learning Django by building two real projects: a To-Do app and a full-featured Blog app (with newsletter, comments, auth, PostgreSQL, and deployed on Render).</p> <p>I\u2019m looking to sell the full copyright or collaborate with educators or platforms who want to distribute or expand this content.</p> <p>If you or anyone you know might be interested, please DM me or comment below. Happy to share sample pages and more info!</p> <p>I will add the Gumroad link and demo blog application link in the comments.</p> <p>Thanks for your time.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Life_Letterhead_5738\"> /u/Life_Letterhead_5738 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1kxlctb/selling_copyright_of_my_practical_django_beginner/\">[li",
        "id": 2790754,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1kxlctb/selling_copyright_of_my_practical_django_beginner",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Selling copyright of my practical Django beginner ebook \u2014 looking for collaborators or buyers",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/meagenvoss",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-28T15:37:40.142115+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-28T15:07:19+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hello Djangonauts!</p> <p>If you have never been to a Wagtail Space conference, this year is a great year to give it a go. We&#39;ll be hosting this free event online on October 8-10. Mark your calendars! </p> <p>We&#39;re still determining the best format and times for us to broadcast the conference content. We need YOUR help!</p> <p>Even if you&#39;re new to Wagtail or still learning what Wagtail is (visit <a href=\"http://Wagtail.org\">Wagtail.org</a> if you want some more info now), we&#39;d appreciate it if you could take a few minutes to fill out this short survey. Your input will help us make some key decisions about Wagtail Space and the broader Wagtail community.</p> <p>Here is the link: <a href=\"https://forms.gle/779JHGoWs67e1iKy7\">https://forms.gle/779JHGoWs67e1iKy7</a></p> <p>Thank you SO much for your time and your opinions!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/meagenvoss\"> /u/meagenvoss </a",
        "id": 2790108,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1kxjhr2/wagtail_space_and_community_survey",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Wagtail Space and Community Survey",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/duksen",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-28T13:26:59.443546+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-28T12:39:08+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I know a lot of you are full time and seasoned developers. But with the rise of AI coding a non developer, who is trying to start a business where saas is part of the valueproposition Django have been a game changer. </p> <p>It is well documented and have so many great robust packages. The batteries included approach is perfekt for vibecoding, as it creates a secure and easy to understand approach to build an app. Python is easy to understand the logic of as a newbie, and the structure of the Django app, makes it easy to follow best practices.<br/> I don\u2019t even need to learn sql. </p> <p>Adding HTMX makes it much easier to have some simple interactive stuff.</p> <p>Its simple to deploy on whatever infrastructure I might need. </p> <p>And finally since there is a strict way to code and structure the app, it will be much easier to hand over to a real developer, who can code the platform robustly, but reference the current logic. All in all, Django is lo",
        "id": 2788201,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1kxg0ty/django_is_the_perfect_vibecoding_framework",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Django is the perfect vibecoding framework",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Puzzleheaded_Ear2351",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-28T13:26:59.063054+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-28T11:56:49+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;m trying to learn how to implement push notifications in django. It was earlier for my hw assigning app and now a booking app. I don&#39;t need realtime things so no channels and no websockets. Just those push notifications you see on mobile lockscreen and bottom right in windows. Seems like there are no clear and &quot;latest&quot; tutorials on YouTube. Need help.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Puzzleheaded_Ear2351\"> /u/Puzzleheaded_Ear2351 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1kxf6cd/someone_teach_me_push_notifications_in_django/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1kxf6cd/someone_teach_me_push_notifications_in_django/\">[comments]</a></span>",
        "id": 2788199,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1kxf6cd/someone_teach_me_push_notifications_in_django",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Someone teach me push notifications in django",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/djv-mo",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-28T13:26:58.707635+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-28T11:51:08+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>drf-spectacular is a robust and easy-to-use third-party library that integrates seamlessly with DRF and generates OpenAPI-compliant documentation.</p> <p>Features :-</p> <p>\u2022 OpenAPI 3.0 Support \u2022 Seamless DRF Integration \u2022 Customizability \u2022 User-friendly Documentation \u2022 Swagger UI &amp; ReDoc</p> <p>Urls :- 1 - /api/schema/: Returns the raw OpenAPI schema.</p> <p>2 - /api/docs/swagger/: Provides a Swagger UI for easy interaction with your API.</p> <p>3 - /api/docs/redoc/: Offers a ReDoc UI for a more structured documentation experience.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/djv-mo\"> /u/djv-mo </a> <br/> <span><a href=\"https://i.redd.it/vo5mj3k6hi3f1.png\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1kxf2n7/django_tip_automate_drf_api_documentation_using/\">[comments]</a></span>",
        "id": 2788197,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1kxf2n7/django_tip_automate_drf_api_documentation_using",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Django tip Automate DRF API Documentation Using drf-spectacular",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Pini02",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-28T13:26:58.914484+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-28T11:21:57+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi, it\u2019s my first time deploying a web app and I\u2019d like to know if what I\u2019m gonna do is right. I have a Django application that I need to deploy on a windows machine and make that useable in the LAN. the step that I did were: - set DEBUG = False, ALLOWED_HOSTS=[*] and CSRF_TRUSTED_ORIGINS=[\u2018http://&lt;PC IP IN LAN&gt;\u2019] - installled waiterss and setup serve.py script using address 0.0.0.0 and port 8000 -setup Nginx for reverse proxy this way : Location / { Proxy_pass http://localhost:8000 } this setup works and I can use application on other device in the same LAN, but I\u2019d like to know if I missed something or I did something unsafe.</p> <p>Thanks for reading and for the help.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Pini02\"> /u/Pini02 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1kxejhl/deploying_in_lan/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments",
        "id": 2788198,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1kxejhl/deploying_in_lan",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Deploying in LAN",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/ThinkEasier",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-28T13:26:59.212193+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-28T11:17:53+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I have a database we use to manage our product data, and I&#39;m planning on building a CRUD web app for this database. I&#39;m using Django and DRF, but I&#39;m very new to both of these, so I&#39;m currently learning the basics and I&#39;m stuck on how my code is meant to be organised. I had this idea that DRF would be used to separately build an API, and then I could just build a Django app on top of that, while my other existing Python projects (just basic backend ETL and file management stuff) could be &#39;plugged in&#39; to this API so that I could get them away from using raw SQL. It seems from what I&#39;ve read however that I would want to have my Django and DRF modules in the same project, and that it&#39;s potentially an issue having two &#39;apps&#39; using the same database? My main questions then are: 1. Is it fine for my DRF modules to be stored in the same project as my Django web app, but to also define API access for my other projec",
        "id": 2788200,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1kxeguq/making_a_new_crud_app_in_django_for_a_product",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Making a new CRUD app in Django for a product database I have. Need advice on how to organise my project, particularly the DRF API",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/bouncingdolphins",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-28T07:51:46.863194+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-28T07:33:26+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi everyone,</p> <p>I just received an email from sendgrid that they are ending their free offerings which included like 100 email a day or something.</p> <p>I only used it to send password reset emails so I\u2019m not willing to pay for the cheapest option they offer now which is $20.</p> <p>I just started creating a few templates for transactional emails which was very easy and helpful with their tools.</p> <p>Also the Django package works like a charm.</p> <p>What do you guys recommend for low usage? Like 1-20 email a month.</p> <p>Thank you for reading.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/bouncingdolphins\"> /u/bouncingdolphins </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1kxb3cq/sendgrid_ends_free_package/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1kxb3cq/sendgrid_ends_free_package/\">[comments]</a></span>",
        "id": 2786840,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1kxb3cq/sendgrid_ends_free_package",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Sendgrid ends free package",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Aromatic_Leg3383",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-28T06:47:47.098986+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-28T05:49:08+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I recently built a <strong>backtesting web app</strong> using Django and would love to get some feedback from fellow Django developers.</p> <p><strong>What it does:</strong></p> <ul> <li>Lets users run and compare historical trading backtests</li> <li>Each user can view their backtest history from a personal dashboard</li> <li>Built with Django, PostgreSQL, and Tailwind CSS</li> <li>Includes session auth, background task handling, and simple job queueing</li> </ul> <p><strong>Why I made it:</strong></p> <p>I\u2019m working on a larger project around <strong>algorithmic trading tools</strong>, and this backtest module is a core feature. I wanted to make something clean, fast, and actually useful for traders and devs who want to test strategies easily.</p> <p>Thanks in advance! Happy to open source parts of it if there\u2019s interest.</p> <p><a href=\"https://preview.redd.it/qzzpgk2kog3f1.png?width=2754&amp;format=png&amp;auto=webp&amp;s=ad7d648da42278024144cc5d6",
        "id": 2786584,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1kx9ifb/built_a_backtest_app_with_django_would_love_your",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Built a Backtest App with Django \u2013 Would Love Your Feedback!",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/numegil",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-28T03:31:40.170865+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-28T02:31:03+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey <a href=\"/r/django\">r/django</a>! Long time user, first time contributing back to the community.</p> <p>Ever found yourself missing SQL&#39;s convenient GROUP BY functionality when using the Django admin? Django Admin Group-By solves that by letting you quickly group and summarize data right from your admin interface with minimal code setup.</p> <p><strong>Check out the repo here:</strong> <a href=\"https://github.com/numegil/django-admin-groupby\"><strong>https://github.com/numegil/django-admin-groupby</strong></a></p> <p><strong>How Django Admin Group-By works:</strong></p> <ul> <li>Specify in your admin.py which fields you want allow grouping by, and which aggregations (sum, etc.) you want to see.</li> <li>A &quot;Group By&quot; filter pops up in your admin sidebar to instantly transform your data into summarized views.</li> </ul> <p><strong>Example usage:</strong></p> <pre><code>@admin.register(Product) class ProductAdmin(GroupByAdminMixin, admi",
        "id": 2785760,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1kx5xgd/announcing_initial_release_of_djangoadmingroupby",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "\ud83c\udf89 Announcing initial release of `django-admin-groupby` package \ud83c\udf89",
        "vote": 0
    }
]