[
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-01T21:16:24.347950+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-01T20:06:49+00:00",
        "description": "<table> <tr><td> <a href=\"https://www.reddit.com/r/emulation/comments/1kci933/stikjit_debugger_is_now_available_on_the_app/\"> <img src=\"https://external-preview.redd.it/CRjDkyIKuFt_ygBT1xVI5dJFQDVqpacWCR-WIlRMuyU.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=fb0809d8bed5f4e8e37e369ac3c7a3f283e20f22\" alt=\"StikJIT (debugger) is Now Available on the App Store - enable JIT in emulators\" title=\"StikJIT (debugger) is Now Available on the App Store - enable JIT in emulators\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/NXGZ\"> /u/NXGZ </a> <br/> <span><a href=\"/r/EmulationOniOS/comments/1kbw5v0/stikjit_is_now_avaliable_on_the_app_store/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/emulation/comments/1kci933/stikjit_debugger_is_now_available_on_the_app/\">[comments]</a></span> </td></tr></table>",
        "id": 2577753,
        "language": null,
        "link": "https://www.reddit.com/r/emulation/comments/1kci933/stikjit_debugger_is_now_available_on_the_app",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 475,
        "source_url": "https://www.reddit.com/r/emulation/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": "https://external-preview.redd.it/CRjDkyIKuFt_ygBT1xVI5dJFQDVqpacWCR-WIlRMuyU.jpg?width=640&crop=smart&auto=webp&s=fb0809d8bed5f4e8e37e369ac3c7a3f283e20f22",
        "title": "StikJIT (debugger) is Now Available on the App Store - enable JIT in emulators",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-01T07:10:42.922288+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-01T05:43:55+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Over the past few months I&#39;ve looked a bit at self-hosted solutions for emulation (both for remote and home).</p> <p>There&#39;s a couple of nice projects that tackle this in some way:</p> <ul> <li><a href=\"https://emulatorjs.org/\">EmulatorJS</a> (in browser emulation), especially nice in combination with <a href=\"https://romm.app/\">The RomM Project</a></li> <li><a href=\"https://app.lizardbyte.dev/Sunshine/?lng=en-US\">Sunshine | LizardByte</a> Offers an open source solution to the nvidia protocol for cloud gaming. Works in conjunction with <a href=\"https://moonlight-stream.org/\">Moonlight</a> (the client that can connect to the server)</li> <li>Another great project that builds on sunshine and moonlight is <a href=\"https://github.com/games-on-whales/wolf\">Wolf</a></li> <li><a href=\"https://github.com/selkies-project/selkies\">Selkies Project</a> offers a WebRTC solution, meaning no specific client is needed (just a browser), similar to EmulatorJS, ",
        "id": 2571625,
        "language": null,
        "link": "https://www.reddit.com/r/emulation/comments/1kc1gj6/selfhosted_retro_cloud_gaming",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 475,
        "source_url": "https://www.reddit.com/r/emulation/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Self-hosted Retro Cloud Gaming",
        "vote": 0
    }
]