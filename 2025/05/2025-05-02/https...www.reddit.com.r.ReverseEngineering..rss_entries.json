[
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-02T02:28:14.666862+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-02T01:35:26+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi all,</p> <p>I often find myself needing to sanity-check a YARA rule against a test</p> <p>string or small binary, but spinning up the CLI or Docker feels heavy.</p> <p>So I built **YARA Playground** \u2013 a single-page web app that compiles</p> <p>`libyara` to WebAssembly and runs entirely client-side (no samples leave</p> <p>your browser).</p> <p>\u2022 CodeMirror 6 editors for rule + sample </p> <p>\u2022 WASM YARA-X engine, error guard for slow patterns </p> <p>\u2022 Shows pretty JSON, and tabular matches</p> <p>\u2022 Supports 10 MiB binary upload, auto-persists last rule/sample </p> <p><a href=\"https://www.yaraplayground.com\">https://www.yaraplayground.com</a></p> <p>Tech stack: Vite, TypeScript, CodeMirror, libyara-wasm (\u2248230 kB),</p> <p>Would love feedback, feature requests or bug reports (especially edge-</p> <p>case rules).</p> <p>I hope it&#39;s useful to someone, thanks!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Dil",
        "id": 2579280,
        "language": null,
        "link": "https://www.reddit.com/r/ReverseEngineering/comments/1kcpbw1/tool_yara_playground",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 476,
        "source_url": "https://www.reddit.com/r/ReverseEngineering/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Tool: YARA Playground",
        "vote": 0
    }
]