[
    {
        "age": null,
        "album": "",
        "author": "/u/Accomplished-War-361",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-17T18:45:26.828135+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-17T18:36:27+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi there, I am currently Doing a python application where one of the html pages is a html,css javascript chatbot.</p> <p>This chatbot relies on an open AI api key. I want to hide this key as an environment variable so I can use it in Javascript and add it as a config var in Heroku. Is it possible to do this.</p> <p>Thank you.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Accomplished-War-361\"> /u/Accomplished-War-361 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1kozxzr/hiding_api_key/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1kozxzr/hiding_api_key/\">[comments]</a></span>",
        "id": 2704873,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1kozxzr/hiding_api_key",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Hiding API key",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/alialavi14",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-17T18:45:26.555878+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-17T17:48:49+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi everyone, I hope you&#39;re all doing well!</p> <p>I&#39;m exploring the feasibility of using Django for applications that need to handle a massive number of asynchronous operations\u2014things like real-time chat systems, live dashboards, or streaming services. With Django&#39;s support for ASGI and asynchronous views, it&#39;s now possible to implement async features, but I&#39;m wondering how well it holds up in real-world, high-concurrency environments compared to frameworks that are natively asynchronous.</p> <p>Given that, I&#39;m curious:</p> <p>1\ufe0f\u20e3 Have you successfully deployed Django in high-concurrency, async-heavy environments?</p> <p>2\ufe0f\u20e3 Did you encounter limitations that led you to consider or switch to frameworks like Node.js, ASP.NET Core, or others?</p> <p>3\ufe0f\u20e3 What strategies or tools did you use to scale Django in such scenarios?</p> <p>I\u2019m especially interested in hearing about real-world experiences, the challenges you faced, and how",
        "id": 2704872,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1koyugq/senior_django_developers_do_you_stick_with_django",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Senior Django Developers: Do You Stick with Django for High-Concurrency Async Applications or Transition to Other Frameworks?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/silly_lynx2025",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-17T17:39:45.904358+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-17T17:17:36+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Do you think learning Django DRF as your first backend framework is a good idea? Or is it more suitable for more experienced devs looking to create their own SaaS/ start their own startup?</p> <p>Do you think Django will be just a detour for eventually learning an enterprise-level, backend-focused framework (asp.net core) for a more stable long-term career? Or will the concepts/ patterns/ architectures be transferrable?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/silly_lynx2025\"> /u/silly_lynx2025 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1koy510/django_as_your_first_framework/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1koy510/django_as_your_first_framework/\">[comments]</a></span>",
        "id": 2704591,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1koy510/django_as_your_first_framework",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Django as your first framework",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Extreme_Crazy_9116",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-17T17:39:46.211623+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-17T17:06:17+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p><strong>Location:</strong> Remote<br/> <strong>Type:</strong> Full-time / Contract</p> <h1>Must-Have Skills:</h1> <ul> <li><strong>Python 3.x</strong> with deep experience in <strong>Django</strong> and <strong>Django Rest Framework</strong></li> <li>Experience designing and building <strong>RESTful APIs</strong></li> <li>Familiarity with <strong>blockchain integration</strong> (e.g. interacting with smart contracts, wallets, Web3.py)</li> <li>Experience working with <strong>AI APIs</strong> (OpenAI, HuggingFace, LangChain, etc.)</li> <li>Strong understanding of <strong>PostgreSQL</strong>, <strong>Redis</strong>, and scalable backend architecture</li> <li>Experience with <strong>Docker</strong>, <strong>Git</strong>, and <strong>CI/CD pipelines</strong></li> <li>Comfortable with <strong>asynchronous programming</strong> (Celery, asyncio)</li> </ul> <h1>Nice to Have:</h1> <ul> <li>Basic Solidity knowledge (or understanding smart contract ABIs)</li> <l",
        "id": 2704592,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1koxvrl/backend_developer_pythondjango_web3_ai",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Backend Developer (Python/Django) \u2013 Web3 + AI",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Diligent_Tomato_8656",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-17T12:11:44.008164+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-17T11:15:28+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I\u2019ve built a website for myself using Django and Django REST Framework and it\u2019s working pretty well for my purposes. But I\u2019ve decided to take it further and deploy the app and maybe even turn it into something profitable. I\u2019m planning to build a mobile app using React Native.</p> <p>The app relies heavily on API calls to Gemini, and some of those responses need to be stored in the database. That\u2019s where I\u2019m in doubt. Django\u2019s async support isn\u2019t great, and since the app might need to handle thousands of API calls, FastAPI could be a better fit performance-wise.</p> <p>I also found that I\u2019d probably need to replace my DRF code with Django Ninja if I want better async support in Django. However, I\u2019m much more familiar with Django than FastAPI. Plus, Django seems like a better choice for bigger, long-term projects.</p> <p>Right now, the app is still simple, so switching to FastAPI wouldn\u2019t be too painful. But is it really worth the effort? Should I stick",
        "id": 2702777,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1koqjdd/django_vs_fastapi_for_gemini_api_calls",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Django vs FastAPI for Gemini API calls",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/CEENNNNNN",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-17T10:01:57.108807+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-17T09:49:14+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>im currently working on a dashboard on a web using Django, i don&#39;t know what to use to make a dashboard. my groupmates started using js for the front-end but they said they couldn&#39;t make it work. please help your guy out.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/CEENNNNNN\"> /u/CEENNNNNN </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1kop9be/web_dashboard/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1kop9be/web_dashboard/\">[comments]</a></span>",
        "id": 2702202,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1kop9be/web_dashboard",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Web Dashboard",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/AppearanceLower8590",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-17T08:55:45.743456+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-17T08:27:30+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;m working at a startup, and we would like to build an ecommerce component. Our stack is based on django. Django Oscar seems great - we won&#39;t depend on the UI since it&#39;s way too old, but we&#39;re thinking of using all the models, libraries, etc.</p> <p>I&#39;m reading in some other reddit threads that Django Oscar is slow (<a href=\"https://www.reddit.com/r/django/comments/1ekklgc/saleor%5C_vs%5C_oscar%5C_ecommerce/\">https://www.reddit.com/r/django/comments/1ekklgc/saleor\\_vs\\_oscar\\_ecommerce/</a>). I don&#39;t want to tie us down to a slow performing library - I&#39;m curious if this is actually a concern for those who are currently using it in production with 10k-100k users?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/AppearanceLower8590\"> /u/AppearanceLower8590 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1koo4ox/are_there_any_performance_concerns_with_django/\">[link]</a",
        "id": 2701949,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1koo4ox/are_there_any_performance_concerns_with_django",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Are there any performance concerns with Django Oscar?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/droopdifca",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-05-17T06:46:51.906464+00:00",
        "date_dead_since": null,
        "date_published": "2025-05-17T06:33:18+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I swear, python <a href=\"http://manage.py\">manage.py</a> migrate is like that one friend who says they\u2019ll \u201ctotally be there in 10 minutes\u201d and then... nothing. And by &quot;nothing&quot; I mean a whole bunch of \u201cno tables found\u201d errors, despite your confidence you did everything right. Like, can I just get a small victory here, Django? Please? \ud83d\ude02 #DjangoLife</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/droopdifca\"> /u/droopdifca </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1komh3t/that_feeling_when_python_managepy_migrate_finally/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1komh3t/that_feeling_when_python_managepy_migrate_finally/\">[comments]</a></span>",
        "id": 2701482,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1komh3t/that_feeling_when_python_managepy_migrate_finally",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "That feeling when python manage.py migrate finally works... but the database is still 80 missing",
        "vote": 0
    }
]