[
    {
        "age": null,
        "album": "",
        "author": "/u/Affectionate_Sky9709",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-27T18:08:08.731905+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-27T17:53:36+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>The results of the annual Django Developers Survey, a joint initiative by the Django Software Foundation and JetBrains PyCharm, are out! </p> <p>Here\u2019s what stood out to us from more than 4,600 responses:</p> <ul> <li>HTMX and Alpine.js are the fastest-growing JavaScript frameworks used with Django.</li> <li>38% of developers now use AI to learn or improve their Django skills.</li> <li>3 out of 4 Django developers have over 3 years of professional coding experience.</li> <li>63% of developers already use type hints, and more plan to.</li> <li>76% of developers use PostgreSQL as their database backend.</li> </ul> <p>What surprised you most? Are you using HTMX, AI tools, or type hints in your projects yet?</p> <p>Get the full breakdown with charts and analysis: <a href=\"https://lp.jetbrains.com/django-developer-survey-2025/\">https://lp.jetbrains.com/django-developer-survey-2025/</a> </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www",
        "id": 3916495,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1ohlesf/the_state_of_django_2025_is_here_4600_developers",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "The State of Django 2025 is here \u2013 4,600+ developers share how they use Django",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Mindless-Chemistry-3",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-27T18:08:08.924580+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-27T17:31:38+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Working on a notification system and looking for advice on the best architectural approach.</p> <p><strong>Current situation:</strong></p> <ul> <li>Built a notification service that sends notifications via WebSocket (Django Channels)</li> <li>Service has methods like <code>notify_course_published()</code>, <code>notify_assignment_submitted()</code>, etc.</li> <li>All business logic is in <code>NotificationServiceImpl</code>, which uses <code>WebSocketChannel</code> for delivery</li> </ul> <p><strong>The problem:</strong><br/> In the future, we may switch from WebSocket to Kafka (or need both). Right now, the service is hard-coded to use <code>WebSocketChannel</code>:</p> <pre><code>class NotificationServiceImpl(INotificationService): def __init__(self): self.channel = WebSocketChannel() # Hard-coded dependency def notify_course_published(self, ...): # Business logic here self.channel.broadcast_to_group(...) # Uses WebSocket </code></pre> <p><strong>Wh",
        "id": 3916496,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1ohktgw/best_approach_for_dependency_injection_switching",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Best approach for dependency injection: Switching notification channels (WebSocket -> Kafka) without tight coupling?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/varliukas14",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-27T16:55:59.125176+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-27T16:51:31+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey. I am working on an app where users will be uploading and viewing a lot of images.</p> <p>As image storage solution, I have chosen Google Cloud Storage. I have created a bucket and in my <a href=\"http://settings.py\">settings.py</a> I have configured to use the GCS as media storage:</p> <pre><code> STORAGES = { &quot;default&quot;: { &quot;BACKEND&quot;: &quot;storages.backends.gcloud.GoogleCloudStorage&quot;, &quot;OPTIONS&quot;: { &quot;bucket_name&quot;: GCS_BUCKET_NAME, &quot;project_id&quot;: GCS_PROJECT_ID, &quot;credentials&quot;: GCS_CREDENTIALS, &quot;default_acl&quot;: None, # no per-object ACLs (UBLA-friendly, private) &quot;object_parameters&quot;: { &quot;cache_control&quot;: &quot;private, max-age=3600&quot;, }, }, }, &quot;staticfiles&quot;: { &quot;BACKEND&quot;: &quot;whitenoise.storage.CompressedManifestStaticFilesStorage&quot;, }, } </code></pre> <p>Initially, I have been uploading the images using the following:</p> <pre><code>d",
        "id": 3915792,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1ohjq35/django_app_using_direct_to_gcs_image_uploads",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Django app using direct to GCS image uploads",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/__ped_",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-27T16:55:59.344307+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-27T16:42:49+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi everyone! </p> <p>I recently joined a startup team, where I am creating the backend using Django. The startup originally hired overseas engineers through UpWork who decided to use Django over other languages and frameworks. Our code isn&#39;t live yet, and I run into even the smallest changes to a model,it blows up migrations &amp; gives me error after error, and so I just wipe the local db and migrations and rebuild it.</p> <p>Obviously, I can&#39;t do this when the code is live and has real data in it. Two questions: is this a pain point you face, and is it always this messy, or once you learn it does this &#39;mess&#39; become manageable? and 2, what are some good resources that helped you improve your understanding of Django? </p> <p>For context, I am a junior engineer and the only engineer at this startup, and I&#39;m really anxious &amp; stressed about how making updates to production is going to go if development is giving me such a hard tim",
        "id": 3915793,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1ohjhhy/learning_django_migrations",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Learning Django Migrations",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/venom110299",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-27T16:55:59.494166+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-27T16:11:37+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>So I am thinking of making an inventory software for personal use and since I don&#39;t have much knowledge of React/Angular and no time to learn it, I am thinking of making my frontend in streamlit.</p> <p>Can streamlit do what other frontend frameworks like React and Angular do?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/venom110299\"> /u/venom110299 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1ohin7e/can_i_use_streamlit_with_django/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1ohin7e/can_i_use_streamlit_with_django/\">[comments]</a></span>",
        "id": 3915794,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1ohin7e/can_i_use_streamlit_with_django",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Can I use streamlit with django?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/joshuap",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-27T16:55:58.982668+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-27T14:51:19+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey all, we recently released some new monitoring and logging features for Django. We\u2019re a small team building a monitoring app that is simpler than other APM systems and includes error tracking and logging to help you fix bugs faster. Been at it since 2012. Check it out!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/joshuap\"> /u/joshuap </a> <br/> <span><a href=\"https://www.honeybadger.io/blog/python-performance-monitoring/?utm_source=reddit&amp;utm_medium=social\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1ohghdj/python_performance_monitoring_in_honeybadger/\">[comments]</a></span>",
        "id": 3915791,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1ohghdj/python_performance_monitoring_in_honeybadger",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Python performance monitoring in Honeybadger",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Embarrassed_Guest950",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-27T12:11:49.220039+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-27T11:38:05+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Quick question,</p> <p>I am building a public API (Django REST), the use case will be mostly form fields for companies to put on their websites. (POST)</p> <pre><code>rest_framework_api_key.permissions </code></pre> <p>I&#39;m using rest_framework_api_key for an API-key to make sure only allowed user can connect. I want to make it so that if a form gets send to the API, the backend validates the API-key and saves the name of the key to the form so I know which user filled in the form. </p> <p>Is this the right way to look at it and how would this work? or are there different ways?</p> <p>Thanks!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Embarrassed_Guest950\"> /u/Embarrassed_Guest950 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1ohc1fb/apikey_auth_apikey_name_save_to_form/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1ohc1fb/apikey_auth_apikey_name_sa",
        "id": 3913421,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1ohc1fb/apikey_auth_apikey_name_save_to_form",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "API-key auth -> API-key name save to form",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/MountainBother26",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-27T08:36:54.279172+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-27T07:55:22+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I\u2019m currently working on an MIS (Management Information System) project for an insurance business. The client\u2019s requirement is to upload insurance policy PDFs through a web portal. The system should then automatically extract relevant data from the uploaded PDFs and store it in a database.</p> <p>The uploaded PDF files can be up to 250 MB in size and may contain up to 20 pages.</p> <p>Request for Suggestions: Could you please recommend the most suitable model or API for this type of document processing task?</p> <p>Additionally, I would appreciate it if you could explain the pros and cons of the suggested options.</p> <p>Thank you in advance for your help </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/MountainBother26\"> /u/MountainBother26 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1oh8i67/pdf_data_extract_using_api_which_ai_model_api_use/\">[link]</a></span> &#32; <span><a href=\"https://",
        "id": 3912141,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1oh8i67/pdf_data_extract_using_api_which_ai_model_api_use",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Pdf data extract using api... which ai model api use ?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Confident-Display-44",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-27T02:47:25.062373+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-27T02:11:53+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I\u2019m thinking about building a SaaS marketplace p2p using Django.</p> <p>Is it a good choice for large-scale projects?</p> <p>And what should I know before getting started?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Confident-Display-44\"> /u/Confident-Display-44 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1oh2phf/im_thinking_about_building_a_saas_marketplace_p2p/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1oh2phf/im_thinking_about_building_a_saas_marketplace_p2p/\">[comments]</a></span>",
        "id": 3910880,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1oh2phf/im_thinking_about_building_a_saas_marketplace_p2p",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "I\u2019m thinking about building a SaaS marketplace p2p using Django.",
        "vote": 0
    }
]