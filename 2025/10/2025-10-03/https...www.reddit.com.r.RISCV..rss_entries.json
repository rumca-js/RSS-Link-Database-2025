[
    {
        "age": null,
        "album": "",
        "author": "/u/DeliciousBelt9520",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-03T19:29:31.142587+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-03T18:53:38+00:00",
        "description": "<table> <tr><td> <a href=\"https://www.reddit.com/r/RISCV/comments/1nx7s9i/terasic_announces_starter_kit_featuring_riscv/\"> <img src=\"https://external-preview.redd.it/l8vMs5DYDeO2kfPASNDQCiTzRbrEujzpgIyBUg0becw.jpeg?width=640&amp;crop=smart&amp;auto=webp&amp;s=c368ac0f7efae6726dc7165c9d397cace12ce0a5\" alt=\"Terasic Announces Starter Kit Featuring RISC-V Nios V Processor and Software Bundle\" title=\"Terasic Announces Starter Kit Featuring RISC-V Nios V Processor and Software Bundle\" /> </a> </td><td> <!-- SC_OFF --><div class=\"md\"><p>Terasic has introduced the Atum Nios V Starter Kit, a feature-rich evaluation platform designed to accelerate development with Altera\u2019s Nios V processor. The kit is aimed at embedded engineers, system developers, and educators looking for a practical way to explore RISC-V\u2013based designs on the Agilex 3 FPGA platform.</p> <p>The package includes the Atum A3 Nano board with a pre-installed heatsink and acrylic casing, a USB Type-C cable, and a 5V/2A DC power sup",
        "id": 3729184,
        "language": "en",
        "link": "https://www.reddit.com/r/RISCV/comments/1nx7s9i/terasic_announces_starter_kit_featuring_riscv",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 471,
        "source_url": "https://www.reddit.com/r/RISCV/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": "https://external-preview.redd.it/l8vMs5DYDeO2kfPASNDQCiTzRbrEujzpgIyBUg0becw.jpeg?width=640&crop=smart&auto=webp&s=c368ac0f7efae6726dc7165c9d397cace12ce0a5",
        "title": "Terasic Announces Starter Kit Featuring RISC-V Nios V Processor and Software Bundle",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Slicudis",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-03T07:10:43.481673+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-03T01:35:15+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;ve noticed that fence.i is a bit useless in user mode space. The reason is that a context switch may happen in the program with self-modifying code and the OS might decide to move the process to another core, which might potentially have an instruction cache with stale data. The solution to that could be using syscalls to make the OS get rid of all the stale data from all the instruction caches, but wouldn&#39;t that negatively affect the performance of the process?</p> <p>Could this issue be solved by making an extension that says that all icaches are guaranteed to be coherent? A similar case to Ztso, which changes the memory consistency model from RVWMO to RVTSO to make TSO code easier to execute, This new extension could repurpose fence.i to just forcing the core to wait until all older instructions are committed and then flush the pipeline.</p> <p>I am not a member of RISC-V International, but do you guys think that I should join RV Internat",
        "id": 3723615,
        "language": "en",
        "link": "https://www.reddit.com/r/RISCV/comments/1nwm7mb/a_solution_better_than_fencei",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 471,
        "source_url": "https://www.reddit.com/r/RISCV/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "A solution better than \"fence.i\"?",
        "vote": 0
    }
]