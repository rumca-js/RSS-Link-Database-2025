[
    {
        "age": null,
        "album": "",
        "author": "ACCU Conference",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-05T16:10:15.140850+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-05T14:00:41+00:00",
        "description": "ACCU Membership: https://tinyurl.com/ydnfkcyn\n---\n\nUsing Reflection to Generate C++ Python Bindings - Callum Piper - ACCU 2025\n---\n\nPython bindings for C++ can be valuable tools for developers who wish to make C++ libraries available for use in Python. There are many reasons developers may wish to do this, including testing, prototyping, or performance.\n\nOne of the issues often faced when writing Python bindings for C++ is the need to write excessive amounts of boilerplate code to bridge the gap between the C++ types and interfaces and their Python equivalents. Some libraries make this easier than others, but there is always overhead.\n\nOne of the easier and more commonly used libraries is PyBind11. This talk will explore how you can use Reflection in C++ to generate some of the necessary boilerplate code required when using PyBind11. We will present real-world examples that can be compiled using the latest experimental versions of compilers that support Reflection, and we'll also gene",
        "id": 3740438,
        "language": "en",
        "link": "https://www.youtube.com/watch?v=SJ0NFLpR9vE",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 421,
        "source_url": "https://www.youtube.com/feeds/videos.xml?channel_id=UCJhay24LTpO1s4bIZxuIqKw",
        "status_code": 0,
        "tags": [],
        "thumbnail": "https://i4.ytimg.com/vi/SJ0NFLpR9vE/hqdefault.jpg",
        "title": "Using Reflection to Generate C++ Python Bindings - Callum Piper - ACCU 2025",
        "vote": 0
    }
]