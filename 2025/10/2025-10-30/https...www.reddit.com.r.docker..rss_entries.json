[
    {
        "age": null,
        "album": "",
        "author": "/u/Difficult_Spite_774",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-30T22:10:14.774144+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-30T20:19:09+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hello everyone,</p> <p>Does anyone have practical experience with Docker in production?</p> <p>In our test environment, we have set up a Docker stack on a physical server on-prem. Now we&#39;d like to gradually move to production, but our system admins are still feeling a bit nervous.</p> <p>I am currently writing a governance/admin plan for our sys admins (and management). In the paper, I discuss topics such as image patches and log monitoring, etc. </p> <p>This research led me to Docker&#39;s paid plans (team and business). What is your experience with these subscriptions? Do you think such a paid plan would comfort our sys admins? </p> <p>In short, what was your experience from testing to production? And specifically with regard to collaboration with system administrators.</p> <p>Thank you in advance, I&#39;m really struggling with this process!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Difficult_Spite_7",
        "id": 3945673,
        "language": "en",
        "link": "https://www.reddit.com/r/docker/comments/1okaj18/docker_in_production_sysadmins_patches_etc",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 580,
        "source_url": "https://www.reddit.com/r/docker/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Docker in production: sysadmins, patches, etc",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Equivalent_Ad393",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-30T15:53:11.630752+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-30T14:38:32+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;ll keep everything short, So I built an image -&gt; later found a bug in the code -&gt; fixed it -&gt; built it again with new name and tag. -&gt; went to server -&gt; pulled the image -&gt; bug still there. </p> <p>Issue: The code change is present in the new container but not reflecting in the output.</p> <p>When I pull it on my local, it works but why not on the server. </p> <p>Any help is much appreciated, I&#39;m quite new to docker, soI don&#39;t know what additional information might be needed to resolve this issue. </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Equivalent_Ad393\"> /u/Equivalent_Ad393 </a> <br/> <span><a href=\"https://www.reddit.com/r/docker/comments/1ok1hcn/container_running_previous_versions_output/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/docker/comments/1ok1hcn/container_running_previous_versions_output/\">[comments]</a></span>",
        "id": 3942472,
        "language": "en",
        "link": "https://www.reddit.com/r/docker/comments/1ok1hcn/container_running_previous_versions_output",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 580,
        "source_url": "https://www.reddit.com/r/docker/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Container running previous version's output",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Silent_Employment966",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-30T15:53:11.961006+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-30T14:24:51+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I have been Running an AI app with RAG retrieval, agent chains, and tool calls. Recently some Users started reporting slow responses and occasionally wrong answers.</p> <p>Problem was I couldn&#39;t tell which part was broken. Vector search? Prompts? Token limits? Was basically adding print statements everywhere and hoping something would show up in the logs.</p> <p>APM tools give me API latency and error rates, but for LLM stuff I needed:</p> <ul> <li>Which documents got retrieved from vector DB</li> <li>Actual prompt after preprocessing</li> <li>Token usage breakdown</li> <li>Where bottlenecks are in the chain</li> </ul> <p><strong>My Solution:</strong></p> <p>Added <strong>Langfuse</strong> (open source LLM observability platform) self-hosted via <strong>Docker Compose</strong>. This sits at the application layer and gives me full tracing while Anannas handles the gateway layer.</p> <p><strong>Docker Setup:</strong></p> <p>Langfuse&#39;s architectu",
        "id": 3942473,
        "language": "en",
        "link": "https://www.reddit.com/r/docker/comments/1ok14zb/debugging_llm_apps_in_production_was_harder_than",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 580,
        "source_url": "https://www.reddit.com/r/docker/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Debugging LLM apps in production was harder than expected",
        "vote": 0
    }
]