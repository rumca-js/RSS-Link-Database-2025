[
    {
        "age": null,
        "album": "",
        "author": "/u/Glittering-Ad4182",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-14T23:45:06.056689+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-14T23:22:29+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Help me out, please. I am an embedded engineer(12+ years) who&#39;s just pivoted to a new role. Experienced in python,C and C++. Here I am in the team that is looking to build a product alongside other job duties- a web application with a UI and API for some of our clients. It is going to be in Swift because our company asked for it(using Vapor and Fluent). We are a solid team but I feel left out because I barely know any of the terms - what&#39;s ORM? what&#39;s MVC? why choose noSQL over postgres? What should be running in background jobs and what kind of queues do I need?<br/> Is there a starting point for me - like a primer or a course on Coursera or Educative or designguru or Alex Wu that I can do? Or some zines that I can often refer to? Swift is entirely new to me and so is this </p> <p>The homework that I did to ease me into this role:<br/> 1. Worked a lot on our existing Django application. Contributions mainly to add more models , more views",
        "id": 3814830,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1o6v5i8/primer_for_web_application_development",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Primer for web application development",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/dxt0434",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-14T18:57:10.275306+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-14T18:24:46+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/dxt0434\"> /u/dxt0434 </a> <br/> <span><a href=\"https://hodovi.cc/blog/bootstrapping-infrastructure-for-django-applications-with-terraform/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1o6nh9n/kickstarting_infrastructure_for_django/\">[comments]</a></span>",
        "id": 3812793,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1o6nh9n/kickstarting_infrastructure_for_django",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Kickstarting Infrastructure for Django Applications with Terraform",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Specific_Monk7753",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-14T18:57:10.055876+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-14T18:19:05+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi i have done some project along with restapi and learning the django. So please recommend the topics i need to cover from the beginner to advance. So i can do great at it</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Specific_Monk7753\"> /u/Specific_Monk7753 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1o6nbn8/django_topic_to_master/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1o6nbn8/django_topic_to_master/\">[comments]</a></span>",
        "id": 3812791,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1o6nbn8/django_topic_to_master",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Django Topic to master",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Repulsive-Dealer91",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-14T18:57:10.150493+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-14T18:01:42+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>In my chat app, I am serializing a chat list which contains the chat image (which is the other user&#39;s profile picture). But the profile picture url value is the MEDIA_URL (i.e, /media/) and not the full path. Elsewhere in the site (i.e., http pages) the image url value is the desired full path </p> <p>After asking chatgpt, I found out that it&#39;s because normally the serializer has access to the request object, which it uses to build the full path, but in case of django channels, inside the consumer when calling the serializer, it does not have access to the request object. </p> <p>Has anyone else faced this? Any solution?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Repulsive-Dealer91\"> /u/Repulsive-Dealer91 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1o6muj0/getting_absolute_image_url_with_django_channels/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/co",
        "id": 3812792,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1o6muj0/getting_absolute_image_url_with_django_channels",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Getting absolute image url with django channels and rest framework",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/actinium226",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-14T17:20:19.812662+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-14T16:53:41+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>For my tests, I copy down the production database, and I use the liveserver test case because my frontend is an SPA and so I need to use playwright to have a browser with the tests.</p> <p>The challenge is that once the liveserver testcase is done, all my data is blown away, because as the docs tell us, &quot;A TransactionTestCase resets the database after the test runs by truncating all tables.&quot;</p> <p>That&#39;s fine for CI, but when testing locally it means I have to keep restoring my database manually. Is there any way to stop it from truncating tables? It seems needlessly annoying that it truncates <em>all</em> data!</p> <p>I tried serialized_rollback=True, but this didn&#39;t work. I tried googling around for this, but most of the results I get are folks who are having trouble because their database is <em>not</em> reset after a test.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/actinium226\"> /u/act",
        "id": 3812064,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1o6ky68/how_to_prevent_transactiontestcase_from",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "How to prevent TransactionTestCase from truncating all tables?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/1ncehost",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-14T17:20:19.581809+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-14T15:57:15+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi, I posted a popular comment to a post a couple days ago asking what some advanced Django topics to focus on are: <a href=\"https://www.reddit.com/r/django/comments/1o52kon/comment/nj6i2hs/?utm_source=share&amp;utm_medium=web3x&amp;utm_name=web3xcss&amp;utm_term=1&amp;utm_content=share_button\">https://www.reddit.com/r/django/comments/1o52kon/comment/nj6i2hs/?utm_source=share&amp;utm_medium=web3x&amp;utm_name=web3xcss&amp;utm_term=1&amp;utm_content=share_button</a></p> <p>I mentioned <code>annotate</code> as being low hanging fruit for optimization and the top response to my comment was a question asking for details about it. Its a bit involved to respond to that question, and I figured it would get lost in the archive, so this post is a more thorough explanation of the concept that will reach more people who want to read about it.</p> <p>Here is an <code>annotate</code> I pulled from real production code that I wrote a couple years ago while refactor",
        "id": 3812063,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1o6jepy/how_to_use_annotate_for_db_optimization",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "How to use annotate for DB optimization",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/P4Kubz",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-14T02:00:04.349403+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-14T01:58:21+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hello guys, i was thinking about the lot of times that i want to use the <code>authenticate</code>a function for my logins but i dont really want a very strict verification for a username, i like to log in using JohnDoe, JOHNDOE or any variant it has. To solve this i have a custom backend, but sometimes setting up new projects i forget about it and when i wanna login its ends in fail. So, has django a built in function to handle this or even somebody has a package to solve this? and also, you as programmers finds useful this function? i wanna work in a tiny package (that would it be my first one) to solve this. lmk what you guys thinks about. </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/P4Kubz\"> /u/P4Kubz </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1o62zsb/insensitive_username_login/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1o62zsb/insensitive_use",
        "id": 3806479,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1o62zsb/insensitive_username_login",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Insensitive username login",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/curiousyellowjacket",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-14T02:00:04.722365+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-14T01:51:34+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I\u2019ve been hacking on a small tool to make <strong>production-like datasets</strong> safe to use in development and CI:</p> <blockquote> <p>TLDR:</p> <p>`django-postgres-anon` helps you anonymize data on the fly or dump it for dev/test environment. </p> <p>GitHub: <a href=\"https://github.com/CuriousLearner/django-postgres-anonymizer\">https://github.com/CuriousLearner/django-postgres-anonymizer</a></p> <p>Docs: [<a href=\"https://django-postgres-anonymizer.readthedocs.io/%5D()\">https://django-postgres-anonymizer.readthedocs.io/]()</a></p> <p>Example project is included in the repo (<code>/example_project</code>) for a quick try.</p> </blockquote> <h1>What it is?</h1> <p><strong>Django PostgreSQL Anonymizer</strong> adds a thin Django layer around the <code>postgresql anon</code> extension so you can define <strong>DB-level masking policies</strong> and generate/share <strong>sanitized dumps -</strong> without rewriting app code.</p> <p><strong>Why DB-lev",
        "id": 3806480,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1o62upj/django_postgresql_anonymizer_beta_dblevel_masking",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Django + PostgreSQL Anonymizer (beta) - DB-level masking for realistic dev/test datasets",
        "vote": 0
    }
]