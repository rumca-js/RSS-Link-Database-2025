[
    {
        "age": null,
        "album": "",
        "author": "/u/Puzzleheaded-Rope187",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-21T14:10:35.152066+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-21T13:26:45+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I\u2019ve been playing around with all these new \u201cvibe coding\u201d tools \u2014 Lovable, Bolt, Replit Agents, etc. They\u2019re honestly impressive for generating UIs and quick prototypes. But every time I try to build something that needs a real backend \u2014 solid architecture, clean domain separation, database design that actually scales \u2014 everything just collapses.</p> <p>Most of these tools stop at generating CRUD endpoints or simple APIs. Nothing close to something I\u2019d trust in production.</p> <p>Am I the only one who feels this gap? Feels like we have plenty of AI tools for UI and visuals, but none that can actually design a backend like a senior engineer would \u2014 with good structure, domain logic, maybe even DDD or hexagonal patterns.</p> <p>Curious if other devs have felt the same frustration or if I\u2019m just overthinking it. Would you actually use something that could generate a backend with good architecture and database design \u2014 not just scaffolding?</p> </div><!--",
        "id": 3865781,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1occxf5/frontend_ai_builders_are_cool_but_wheres_the",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "frontend AI builders are cool, but where\u2019s the \u201cbackend architect\u201d AI?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/wander_builder",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-21T12:43:43.794831+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-21T11:30:12+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi folks,</p> <p>I am building a simple saas tool that allows businesses to send notifications to its customers (it does other things, but context is notifcations feature).</p> <p>Wondering what are the free tools or tools with a generous free tier for sending notifications? (I don&#39;t plan on expanding to SMS anytime soon, but might expand to email).</p> <p>Tech stack info: Backend is django, front end is react.</p> <p>I imagine that for the first few months the monthly volume will not breach 50,000 notifications. Thanks a lot for your inputs :-) </p> <p>P.S. Thinking of one signal since mobile push notifications are free, but want to get inputs from the community before proceeding. </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/wander_builder\"> /u/wander_builder </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1ocaf7g/notification_service_with_generous_free_tier/\">[link]</a></span> &#32; <",
        "id": 3865111,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1ocaf7g/notification_service_with_generous_free_tier",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Notification service with generous free tier (rookie alert)",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Kerbourgnec",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-21T09:54:55.328102+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-21T08:46:48+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;ve picked up django from an old project made by amateurs, with traditional tools, drf, full sync, massive issues like the lack of any index in a massive db, etc...</p> <p>Over the years we&#39;ve expanded our internal skillset, adding proper indexing, redis, celery, daphne, channels (for websockets), etc... The one thing that is still missing for me are mainly async endpoints. We manage large databases and are currently planning a major revamp that can start on a healthy new project. Database I/O will become one of the main bottlenecks, even with proper indexing. What is the state of Django async? What is missing? What is still brittle? It seems to me that Django has started to migrate to async readiness in 3.0 already, and now with 6.0 looming, there is not much more left to do. I can&#39;t find a proper up to date roadmap / todo.</p> <p>With this in mind, should I directly build everything with ninja in async and stop asking questions?</p> </d",
        "id": 3863917,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1oc7p5o/what_is_still_missing_in_django_async",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "What is still missing in Django async?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Kalamologist",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-21T08:37:38.700398+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-21T07:56:04+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Kalamologist\"> /u/Kalamologist </a> <br/> <span><a href=\"/r/learnmachinelearning/comments/1oc6q60/deploying_a_model_in_django/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1oc6xqf/deploying_a_model_in_django/\">[comments]</a></span>",
        "id": 3863518,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1oc6xqf/deploying_a_model_in_django",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Deploying a model in Django",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/luigibu",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-21T05:52:26.039258+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-21T05:38:44+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>When I run test locally, all my test pass. But on GitHub most of them fail with error 301 (redirect). Any clue how to fix it?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/luigibu\"> /u/luigibu </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1oc4rq5/error_301_with_pytest_in_pipeline/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1oc4rq5/error_301_with_pytest_in_pipeline/\">[comments]</a></span>",
        "id": 3862794,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1oc4rq5/error_301_with_pytest_in_pipeline",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Error 301 with pytest in pipeline",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/MortyXIII",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-21T01:46:01.249785+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-21T01:20:42+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I am working on a WeChat-style app and am having trouble troubleshooting the unit tests for the application and keep getting the following error no matter how much i go through and work through the error message. Attached is the error below and an image of the test</p> <p><code>Creating test database for alias &#39;default&#39;...</code></p> <p><code>System check identified no issues (0 silenced).</code></p> <p><code>E</code></p> <p><code>======================================================================</code></p> <p><code>ERROR: test_creation (app_one.tests.CredsTestCase.test_creation)</code></p> <p><code>Credentials are created properly</code></p> <p><code>----------------------------------------------------------------------</code></p> <p><code>Traceback (most recent call last):</code></p> <p><code>File &quot;/Users/matthewsmith/Desktop/mysite/.venv/lib/python3.14/site-packages/django/db/backends/utils.py&quot;, line 105, in _execute</code></p",
        "id": 3861897,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1obzqxj/help_debugging_tests_in_django",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Help debugging tests in Django",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/curiousyellowjacket",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-21T01:46:01.113627+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-21T00:43:19+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p><strong>TL;DR:</strong> I\u2019ve bundled the battle-tested patterns I\u2019ve used for years into a clean, modern Django starter called <strong>Django Keel</strong>. It\u2019s opinionated where it matters, flexible where it should be, and geared for real production work - not just a tutorial toy.</p> <p>GitHub: <a href=\"https://github.com/CuriousLearner/django-keel?utm_source=chatgpt.com\">https://github.com/CuriousLearner/django-keel</a> (Please \u2b50 the repo, if you like the work)</p> <p>Docs: <a href=\"https://django-keel.readthedocs.io/\">https://django-keel.readthedocs.io/</a></p> <p>PS: I&#39;m available for Hire!</p> <h1>Why this exists (quick back-story)</h1> <p>For <strong>10+ years</strong> I developed and maintained a popular <strong>cookiecutter</strong> template used across client projects and open-source work. Over time, the \u201cbest practices\u201d list kept growing: environment-first settings, sane defaults for auth, structured logging, CI from day zero, pre-comm",
        "id": 3861896,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1obyxkd/django_keel_a_decade_of_django_best_practices_in",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Django Keel - A decade of Django best practices in one production-ready template \ud83d\udea2",
        "vote": 0
    }
]