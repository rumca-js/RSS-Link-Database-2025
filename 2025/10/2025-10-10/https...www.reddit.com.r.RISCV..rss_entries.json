[
    {
        "age": null,
        "album": "",
        "author": "/u/WinMassive5748",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-10T20:44:44.960220+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-10T16:03:19+00:00",
        "description": "<table> <tr><td> <a href=\"https://www.reddit.com/r/RISCV/comments/1o350gw/is_arm_and_x86_in_trouble/\"> <img src=\"https://preview.redd.it/f47t2je85buf1.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=f0dc90a90afcdd3b945ead79a43351fc5abae4a8\" alt=\"Is arm and x86 in trouble !!!\" title=\"Is arm and x86 in trouble !!!\" /> </a> </td><td> <!-- SC_OFF --><div class=\"md\"><p>Funny algorithm.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/WinMassive5748\"> /u/WinMassive5748 </a> <br/> <span><a href=\"https://i.redd.it/f47t2je85buf1.png\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/RISCV/comments/1o350gw/is_arm_and_x86_in_trouble/\">[comments]</a></span> </td></tr></table>",
        "id": 3785695,
        "language": "en",
        "link": "https://www.reddit.com/r/RISCV/comments/1o350gw/is_arm_and_x86_in_trouble",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 471,
        "source_url": "https://www.reddit.com/r/RISCV/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": "https://preview.redd.it/f47t2je85buf1.png?width=640&crop=smart&auto=webp&s=f0dc90a90afcdd3b945ead79a43351fc5abae4a8",
        "title": "Is arm and x86 in trouble !!!",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Chipdoc",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-10T20:44:44.480270+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-10T15:14:54+00:00",
        "description": "<table> <tr><td> <a href=\"https://www.reddit.com/r/RISCV/comments/1o33oq1/quintauris_and_lauterbach_elevate_riscv_debug/\"> <img src=\"https://external-preview.redd.it/eOScsiSmPVHIKNkZYLp1rnIQ87iUQ9NSKmdbq1CegCQ.jpeg?width=640&amp;crop=smart&amp;auto=webp&amp;s=394359e60b6d56678eb6ce4a608fe19a93b9bafc\" alt=\"Quintauris and Lauterbach Elevate RISC-V Debug &amp; Trace Capabilities for Automotive\" title=\"Quintauris and Lauterbach Elevate RISC-V Debug &amp; Trace Capabilities for Automotive\" /> </a> </td><td> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Chipdoc\"> /u/Chipdoc </a> <br/> <span><a href=\"https://www.quintauris.com/quintauris-lauterbach-partneship/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/RISCV/comments/1o33oq1/quintauris_and_lauterbach_elevate_riscv_debug/\">[comments]</a></span> </td></tr></table>",
        "id": 3785692,
        "language": "en",
        "link": "https://www.reddit.com/r/RISCV/comments/1o33oq1/quintauris_and_lauterbach_elevate_riscv_debug",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 471,
        "source_url": "https://www.reddit.com/r/RISCV/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": "https://external-preview.redd.it/eOScsiSmPVHIKNkZYLp1rnIQ87iUQ9NSKmdbq1CegCQ.jpeg?width=640&crop=smart&auto=webp&s=394359e60b6d56678eb6ce4a608fe19a93b9bafc",
        "title": "Quintauris and Lauterbach Elevate RISC-V Debug & Trace Capabilities for Automotive",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/RGthehuman",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-10T20:44:44.745936+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-10T13:30:19+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;m currently trying out riscv assembly by building small utility programs with it.</p> <p>How to get the command line arguments? I tried printing out whatever stack pointer is pointing to and I saw that the args were loaded in the memory. but the location of it varied depending on the length and number of arguments and I couldn&#39;t see a pattern. </p> <p>How to know where it&#39;ll be located?</p> <p>Edit: without using any runtime library.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/RGthehuman\"> /u/RGthehuman </a> <br/> <span><a href=\"https://www.reddit.com/r/RISCV/comments/1o30yw9/how_to_get_cli_args_in_programs_writen_in_asm/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/RISCV/comments/1o30yw9/how_to_get_cli_args_in_programs_writen_in_asm/\">[comments]</a></span>",
        "id": 3785694,
        "language": "en",
        "link": "https://www.reddit.com/r/RISCV/comments/1o30yw9/how_to_get_cli_args_in_programs_writen_in_asm",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 471,
        "source_url": "https://www.reddit.com/r/RISCV/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "How to get cli args in programs writen in asm",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/I00I-SqAR",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-10T20:44:44.606049+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-10T01:07:26+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>This contribution explores possible improvements in GCC code generation for RISC-V. We collected dynamic instruction counts from selected SPEC CPU 2017 benchmarks and compared the results with AArch64. Findings reveal that prominent compiler weaknesses include missing instruction patterns, extra move instructions, unused load offsets, and functionally dead code. Additionally, vectorising library functions, like memset and mathematical operations, are crucial for maximising RISC-V efficiency. </p> <p>This work has been carried out as a collaboration between BayLibre and Rivos Inc., and funded by the RISE Project.</p> <p><a href=\"https://www.youtube.com/watch?v=vtV696SszsY\">https://www.youtube.com/watch?v=vtV696SszsY</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/I00I-SqAR\"> /u/I00I-SqAR </a> <br/> <span><a href=\"https://www.reddit.com/r/RISCV/comments/1o2ndog/gnu_tools_cauldron_comparative_analysis_of_gcc/\">[",
        "id": 3785693,
        "language": "en",
        "link": "https://www.reddit.com/r/RISCV/comments/1o2ndog/gnu_tools_cauldron_comparative_analysis_of_gcc",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 471,
        "source_url": "https://www.reddit.com/r/RISCV/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "GNU Tools Cauldron: Comparative Analysis of GCC Codegen for AArch64 and RISC V",
        "vote": 0
    }
]