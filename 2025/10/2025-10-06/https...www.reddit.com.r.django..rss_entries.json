[
    {
        "age": null,
        "album": "",
        "author": "/u/grafieldas",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-06T19:28:18.919135+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-06T18:40:09+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hello, everyone. I am a collage student and this semester I have to create an API for school management system. The question that borrows me is that I want to create different permissions for each type of users: 1) School Administration 2) Student 3) Teacher</p> <p>Right now I created AbstractBaseUser class that has One to One Relationship with one of the following profiles. My question is that is it any possible way to only allow one user to have one profile. I am also very interesting in hearing your solutions for this problem,because my initial idea could be wrong. The reason why I created separate profiles so that I have corresponding tables for each user group to look up to for analysis. Also what would be best practise to automatically create user,when link it to student profile if school administrator is registering new students.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/grafieldas\"> /u/grafieldas </",
        "id": 3749096,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1nzrfn2/need_an_advice",
        "manual_status_code": 0,
        "page_rating": 85,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Need an advice",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/PerformanceSerious90",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-06T16:45:40.947793+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-06T16:16:07+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey everyone!</p> <p>I\u2019ve been working on <strong>Tripenai</strong>, a <strong>collaborative travel itinerary app</strong> that helps you and your friends keep every detail of a trip in one place \u2014 from planning cities and activities to tracking shared expenses.</p> <p>It\u2019s implemented using Django and React Native.</p> <p>The idea is to make trip planning less scattered:</p> <ul> <li>Create a trip with dates, goals, and destinations</li> <li>Invite others to collaborate on the same trip</li> <li>Add cities (stops) and plan activities for each one</li> <li>Track and split expenses as you go</li> <li>View everything on a single, organized timeline</li> </ul> <p>I\u2019d love your honest feedback \u2014 what do you think of the <strong>concept</strong>, <strong>usability</strong>, and <strong>features</strong>?</p> <p>Anything you\u2019d expect from a <strong>collaborative trip planner</strong> that would make it genuinely useful?</p> <p>Please feel free to DM me if y",
        "id": 3747625,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1nznjit/looking_for_feedback_on_my_trip_planner_app",
        "manual_status_code": 0,
        "page_rating": 85,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Looking for feedback on my trip planner app",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Life-Current5134",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-06T12:45:47.511586+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-06T12:43:15+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;ve had some free time lately and I&#39;ve been working on <strong>WoneraAI</strong> - an AI-powered football intelligence platform built with Django. It&#39;s been a great way for me to learn a few new technologies and apply AI in a real-world project. I&#39;d love to get feedback from you guys.</p> <h3>What it does:</h3> <p>Users ask football questions in natural language (e.g., <em>&quot;Show me today&#39;s matches where both teams scored in their last 2 meetings.&quot;</em>) and the AI converts it to SQL, executes it, and returns human-readable answers. This tool solves a common problem faced by football fans and bettors. To make it easily accessible, it&#39;s available on the web, WhatsApp bot, and via a REST API.</p> <h3>The Django Stack:</h3> <ul> <li><strong>Django 5.2</strong> with PostgreSQL</li> <li><strong>Celery</strong> for background tasks (real-time data ingestion)</li> <li><strong>Redis</strong> for caching and message queuing</l",
        "id": 3745390,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1nzhzzi/i_have_been_working_on_aipowered_football",
        "manual_status_code": 0,
        "page_rating": 85,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "I have been working on AI-powered football analytics platform with NLP \u2192 SQL conversion for 18+ languages - and here is where I am at...",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/pauloxnet",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-06T09:56:55.161134+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-06T09:16:44+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I\u2019ve written a short post exploring the idea of an automatically generated Django ORM feature matrix \u2014 a table showing which ORM features are supported by each database backend.</p> <p>The example uses mock data, but the concept is real: how great would it be to have something like this in the Django docs?</p> <p>Would love to hear what you think and what features you\u2019d like to see tracked!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/pauloxnet\"> /u/pauloxnet </a> <br/> <span><a href=\"https://www.paulox.net/2025/10/06/django-orm-comparison/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1nze7sb/django_one_orm_to_rule_all_databases/\">[comments]</a></span>",
        "id": 3744647,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1nze7sb/django_one_orm_to_rule_all_databases",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Django: one ORM to rule all databases \ud83d\udc8d",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/No_Pineapple449",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-10-06T08:43:13.759837+00:00",
        "date_dead_since": null,
        "date_published": "2025-10-06T08:31:09+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/No_Pineapple449\"> /u/No_Pineapple449 </a> <br/> <span><a href=\"/r/Python/comments/1np7qc8/project_df2tables_export_pandas_dataframes_as/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1nzdj0e/project_df2tables_export_pandas_dataframes_as/\">[comments]</a></span>",
        "id": 3744310,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1nzdj0e/project_df2tables_export_pandas_dataframes_as",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "[Project] df2tables - Export pandas DataFrames as interactive HTML tables",
        "vote": 0
    }
]