[
    {
        "age": null,
        "album": "",
        "author": "Blog Staff",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-15T22:34:06.947965+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-15T22:07:32+00:00",
        "description": "<p>\n\t<img alt=\"SANDOR_DARGO_ROUND.JPG\" src=\"https://isocpp.org/files/img/SANDOR_DARGO_ROUND.JPG\" style=\"width: 150px; margin: 10px; float: right; height: 153px;\" />Previously, we discussed&nbsp;<a href=\"https://www.sandordargo.com/blog/2025/07/23/format-your-own-type-part-1\">how to write our own formatter</a>&nbsp;and finished with a relatively simple solution for printing a struct called&nbsp;<code>ProgrammingLanguage</code>. Today, we&rsquo;ll take it to the next level.</p>\n<blockquote>\n\t<h3>\n\t\t<a href=\"https://www.sandordargo.com/blog/2025/07/30/format-your-own-type-part-2\">Format your own type (Part 2)</a></h3>\n\t<p>\n\t\tby Sandor Dargo</p>\n</blockquote>\n<p>\n\tFrom the article:</p>\n<blockquote>\n\t<p id=\"add-more-options-for-semantic-versioning\">\n\t\t<strong>Add more options for semantic versioning</strong></p>\n\t<p>\n\t\tLet&rsquo;s dream big. Instead of only handling major and minor versions (like Python 3.12), let&rsquo;s aim to fully support&nbsp;<a href=\"https://semver.org/\">semantic ver",
        "id": 3582612,
        "language": "en",
        "link": "https://isocpp.org//blog/2025/09/format-your-own-type-part-2-sandor-dargo",
        "manual_status_code": 0,
        "page_rating": 29,
        "page_rating_contents": 90,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 314,
        "source_url": "https://isocpp.org/blog/rss/category/news",
        "status_code": 0,
        "tags": [],
        "thumbnail": "https://isocpp.org/files/img/SANDOR_DARGO_ROUND.JPG",
        "title": "Format your own type (Part 2) -- Sandor Dargo",
        "vote": 0
    }
]