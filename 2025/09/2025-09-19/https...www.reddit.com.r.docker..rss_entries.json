[
    {
        "age": null,
        "album": "",
        "author": "/u/skebanga",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-19T14:28:23.847101+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-19T14:22:09+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;m trying to run vscode inside a running docker container.</p> <p>I have launched the container with the following flags:</p> <pre><code>docker run --detach --tty --privileged --network host --ipc=host --oom-score-adj=500 --ulimit nofile=262144:262144 --shm-size=1G --security-opt seccomp=unconfined </code></pre> <p>I have mounted some X11 and dbus sockets etc from the host:</p> <pre><code> &quot;/tmp/.X11-unix:/tmp/.X11-unix&quot;, &quot;/tmp/.docker.xauth:/tmp/.docker.xauth&quot;, &quot;/var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket&quot;, &quot;/run/user/94838726/bus:/run/user/94838726/bus&quot;, </code></pre> <p>I have also set some env vars:</p> <pre><code> &quot;DISPLAY=:101&quot;, &quot;XAUTHORITY=/tmp/.docker.xauth&quot;, &quot;SSH_AUTH_SOCK=/ssh-agent&quot;, &quot;DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/94838726/bus&quot;, </code></pre> <p>vscode launches fine, but I am unable to install any extensions. I get back an",
        "id": 3615611,
        "language": "en",
        "link": "https://www.reddit.com/r/docker/comments/1nl4xbz/running_vscode_inside_a_container",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 580,
        "source_url": "https://www.reddit.com/r/docker/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "running vscode inside a container?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/NecessarySignature65",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-19T14:28:24.013347+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-19T14:14:50+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I have setup traefik to use cloudflare as the dns challenge provider.</p> <p>My network only allows 1.1.1.1 and 8.8.8.8 as the resolvers.</p> <p>I am using docker swarm and have set this</p> <pre><code>--certificatesresolvers.cloudflare.acme.dnsChallenge.resolvers=1.1.1.1:53,8.8.8.8:53 </code></pre> <p>but I keep getting this error :</p> <p>propagation: time limit exceeded: last error: authoritative nameservers: DNS call error: read udp 172.18.0.3:43120-&gt;172.64.33.184:53: i/o timeout</p> <p>Am i misunderstanding the point of the resolvers setting or missing something obvious? why is it still trying to go to 172.64.33.184:53 and not 1.1.1.1:53</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/NecessarySignature65\"> /u/NecessarySignature65 </a> <br/> <span><a href=\"https://www.reddit.com/r/docker/comments/1nl4qqd/dockerswarm_traefik_resolvers/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/docker",
        "id": 3615612,
        "language": "en",
        "link": "https://www.reddit.com/r/docker/comments/1nl4qqd/dockerswarm_traefik_resolvers",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 580,
        "source_url": "https://www.reddit.com/r/docker/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "DockerSwarm Traefik Resolvers",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/romgo75",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-19T10:41:37.610796+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-19T09:08:52+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Dear community,</p> <p>I am building an image of a python project. </p> <p>This app needs to access to API KEY, through environment variable. Nothing special I believe. So currently for testing dokcerfile looks like : </p> <pre><code> environment: - API_KEY=${API_KEY} </code></pre> <p>I plan to create a docker secret to secure this data which shouldn&#39;t be in clear text. Let say i&#39;ll create a Secret called SECRET_API_KEY</p> <p>So the dockerfile should look like :</p> <pre><code>services: my_app: image: image:2.0 environment: - SECRET_API_KEY__FILE=/run/secrets/livekit_api_key secrets: - SECRET_API_KEY </code></pre> <p>But this require the app to read the content of the file. So I read that one way to do this is to create an <a href=\"http://entrypoint.sh\">entrypoint.sh</a> for my container to read the secret and load the content into env var could be somthing like this : </p> <pre><code>#!/bin/sh export_secret() { local secret_file=&quot;$1&quo",
        "id": 3613221,
        "language": "en",
        "link": "https://www.reddit.com/r/docker/comments/1nkymac/manage_secrets_for_custom_docker_image",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 580,
        "source_url": "https://www.reddit.com/r/docker/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Manage secrets for custom docker image",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/vmelikyan",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-19T05:14:55.387866+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-19T04:23:05+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>We built Lifecycle at GoodRx in 2019 and recently open-sourced it. Every GitHub pull request gets its own isolated environment with the services it needs. Optional services fall back to shared static deployments. When the PR is merged or closed, the environment is torn down.</p> <p>How it works:</p> <ul> <li>Define your services in a lifecycle.yaml</li> <li>Open a PR \u2192 Lifecycle creates an environment</li> <li>Get a unique URL to test your changes</li> <li>Merge/close \u2192 Environment is cleaned up</li> </ul> <p>It runs on Kubernetes, works with containerized apps, has native Helm support, and handles service dependencies.<br/> We\u2019ve been running it internally for 5 years, and it\u2019s now open-sourced under Apache 2.0.</p> <p><em>Docs:</em><a href=\"https://goodrxoss.github.io/lifecycle-docs\"> <em>https://goodrxoss.github.io/lifecycle-docs</em></a><br/> <em>GitHub:</em> <a href=\"https://github.com/GoodRxOSS/lifecycle\"><em>https://github.com/GoodRxOSS/lifecyc",
        "id": 3612522,
        "language": "en",
        "link": "https://www.reddit.com/r/docker/comments/1nktxln/lifecycle_ondemand_ephemeral_environments_from_prs",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 580,
        "source_url": "https://www.reddit.com/r/docker/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Lifecycle: on-demand ephemeral environments from PRs",
        "vote": 0
    }
]