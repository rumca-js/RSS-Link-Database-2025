[
    {
        "age": null,
        "album": "",
        "author": "/u/Muhznit",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T22:59:18.977188+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T22:24:40+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;ve not seen discussions of this yet, only passed by it briefly when doomscrolling. This kinda seems like it has potential, anyone around here poked around with it yet?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Muhznit\"> /u/Muhznit </a> <br/> <span><a href=\"https://rslstandard.org/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1nemhc0/rsl_open_licensing_protocol_protecting_content/\">[comments]</a></span>",
        "id": 3552869,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1nemhc0/rsl_open_licensing_protocol_protecting_content",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "RSL Open Licensing Protocol: Protecting content from AI scrapers and bringing back RSS? Pinch me if I'm dreaming",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/congolomera",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T21:50:16.318763+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T21:02:18+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/congolomera\"> /u/congolomera </a> <br/> <span><a href=\"https://javier-ramos.medium.com/mcp-vs-agent-orchestration-frameworks-langgraph-crewai-etc-ec6bd611aa4d?source=friends_link&amp;sk=7119ab4d740670c3d0aa6669f804cc91\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1nekiww/mcp_vs_agent_orchestration_frameworks_langgraph/\">[comments]</a></span>",
        "id": 3552411,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1nekiww/mcp_vs_agent_orchestration_frameworks_langgraph",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "MCP vs. Agent Orchestration Frameworks (LangGraph, CrewAI, etc)",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/bills2go",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T20:30:36.735219+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T20:03:04+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>My analysis of Algorithms and Data Structures used in Twitter&#39;s open sourced &#39;For Used&#39; recommendation engine. </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/bills2go\"> /u/bills2go </a> <br/> <span><a href=\"https://figureout.hashnode.dev/algorithms-and-data-structures-from-twitters-recommendation-algorithm-2025\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1nej02i/dsa_used_in_twitters_open_sourced_algorithm/\">[comments]</a></span>",
        "id": 3551829,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1nej02i/dsa_used_in_twitters_open_sourced_algorithm",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "DSA used in Twitter's Open sourced algorithm",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Doniisthemaindog",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T18:59:49.824123+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T18:58:31+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Doniisthemaindog\"> /u/Doniisthemaindog </a> <br/> <span><a href=\"https://www.braintrust.dev/blog/async-programming\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1nehbw7/the_rise_of_async_programming/\">[comments]</a></span>",
        "id": 3551094,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1nehbw7/the_rise_of_async_programming",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "The rise of async programming",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/FrequentBid2476",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T18:59:49.953454+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T18:15:43+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/FrequentBid2476\"> /u/FrequentBid2476 </a> <br/> <span><a href=\"https://auslake.vercel.app/blog/domain-driven-design-with-typescript-decorators\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1neg7r4/domaindriven_design_with_typescript_decorators/\">[comments]</a></span>",
        "id": 3551095,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1neg7r4/domaindriven_design_with_typescript_decorators",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Domain-Driven Design with TypeScript Decorators and Reflection",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/ketralnis",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T17:43:09.096089+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T17:30:26+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ketralnis\"> /u/ketralnis </a> <br/> <span><a href=\"https://security.apple.com/blog/memory-integrity-enforcement/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1nef0lt/memory_integrity_enforcement_a_complete_vision/\">[comments]</a></span>",
        "id": 3550504,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1nef0lt/memory_integrity_enforcement_a_complete_vision",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Memory Integrity Enforcement: A complete vision for memory safety in Apple devices",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/imjuni",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T17:43:09.203648+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T17:30:03+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><h1>Background: Common Pain Points</h1> <p>When writing HTTP requests in TypeScript projects, we often encounter these issues:</p> <ul> <li><strong>Scattered code</strong>: URLs, headers, and query strings end up spread across different parts of the codebase.</li> <li><strong>Inconsistent styles</strong>: Each developer writes request functions differently. Some mutate input values inside the function, others use external utilities. \u2192 This leads to poor reusability and harder maintenance.</li> <li><strong>Operational differences</strong>: When working with many APIs, each API may have slightly different timeout and retry policies. Hardcoding these policies into each function quickly becomes messy.</li> <li><strong>Readability issues</strong>: It\u2019s not always clear whether a given value is a path parameter, query string, or header. Different developers define them differently, and long-term maintenance of a shared codebase becomes harder.</li> </ul> <h1>T",
        "id": 3550505,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1nef09j/managing_http_requests_as_typesafe_typescript",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Managing HTTP Requests as Type-Safe TypeScript Classes",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/ketralnis",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T17:43:09.307485+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T17:29:35+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ketralnis\"> /u/ketralnis </a> <br/> <span><a href=\"https://43081j.com/2025/09/bloat-of-edge-case-libraries\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1neezti/the_bloat_of_edgecase_first_libraries/\">[comments]</a></span>",
        "id": 3550506,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1neezti/the_bloat_of_edgecase_first_libraries",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "The bloat of edge-case first libraries",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/ketralnis",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T17:43:08.649590+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T17:29:29+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ketralnis\"> /u/ketralnis </a> <br/> <span><a href=\"https://go.dev/blog/jsonv2-exp\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1neezq6/a_new_experimental_go_api_for_json/\">[comments]</a></span>",
        "id": 3550500,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1neezq6/a_new_experimental_go_api_for_json",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "A new experimental Go API for JSON",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/ketralnis",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T17:43:09.411166+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T17:28:31+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ketralnis\"> /u/ketralnis </a> <br/> <span><a href=\"https://nrinaudo.github.io/articles/capabilities.html\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1neeyu5/effects_as_capabilities_in_scala/\">[comments]</a></span>",
        "id": 3550507,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1neeyu5/effects_as_capabilities_in_scala",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Effects as Capabilities in Scala",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/ketralnis",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T17:43:09.514863+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T17:28:26+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ketralnis\"> /u/ketralnis </a> <br/> <span><a href=\"https://kotlinlang.org/docs/whatsnew2220.html\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1neeyr2/whats_new_in_kotlin_2220/\">[comments]</a></span>",
        "id": 3550508,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1neeyr2/whats_new_in_kotlin_2220",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "What's new in Kotlin 2.2.20",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/ketralnis",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T17:43:09.618905+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T17:28:06+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ketralnis\"> /u/ketralnis </a> <br/> <span><a href=\"https://labs.quansight.org/blog/scaling-asyncio-on-free-threaded-python\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1neeyfz/scaling_asyncio_on_freethreaded_python/\">[comments]</a></span>",
        "id": 3550509,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1neeyfz/scaling_asyncio_on_freethreaded_python",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Scaling asyncio on Free-Threaded Python",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/ketralnis",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T17:43:09.722968+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T17:27:49+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ketralnis\"> /u/ketralnis </a> <br/> <span><a href=\"https://slatedb.io/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1neey75/slatedb_an_embedded_database_built_on_object/\">[comments]</a></span>",
        "id": 3550510,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1neey75/slatedb_an_embedded_database_built_on_object",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "SlateDB: An embedded database built on object storage",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/ketralnis",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T17:43:08.752987+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T17:27:11+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ketralnis\"> /u/ketralnis </a> <br/> <span><a href=\"https://youtu.be/_xJ4maWhSNU\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1neexlm/from_unit_tests_to_whole_universe_tests_with_will/\">[comments]</a></span>",
        "id": 3550501,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1neexlm/from_unit_tests_to_whole_universe_tests_with_will",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "From Unit Tests to Whole Universe Tests (with Will Wilson)",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Effective_Crew_981",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T17:43:09.827056+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T17:27:10+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I started working as a full stack developer. My stack is Python, Node JS for backend, and Vue for FE. At the place where I started working, we use Golang. I understand that everything is the same, only the syntax and technical concepts of the language change. I use AI for syntax concepts and to advance in this job. Do you continue training or obtaining certifications after working eight hours? Or do you use some free time at work?</p> <p>Translated with DeepL.com (free version)</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Effective_Crew_981\"> /u/Effective_Crew_981 </a> <br/> <span><a href=\"http://www.leetcode.com\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1neexl0/programming_outside_worktime/\">[comments]</a></span>",
        "id": 3550511,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1neexl0/programming_outside_worktime",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Programming outside worktime?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/ketralnis",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T17:43:09.931502+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T17:26:56+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ketralnis\"> /u/ketralnis </a> <br/> <span><a href=\"https://purplesyringa.moe/blog/fenwick-layout-for-interval-trees/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1neexcf/fenwick_layout_for_interval_trees/\">[comments]</a></span>",
        "id": 3550512,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1neexcf/fenwick_layout_for_interval_trees",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Fenwick layout for interval trees",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/ketralnis",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T17:43:10.035063+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T17:25:13+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ketralnis\"> /u/ketralnis </a> <br/> <span><a href=\"https://www.infoq.com/presentations/Clojure-Expression-Problem/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1neevq8/clojures_solutions_to_the_expression_problem/\">[comments]</a></span>",
        "id": 3550513,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1neevq8/clojures_solutions_to_the_expression_problem",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Clojure's Solutions to the Expression Problem",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/ketralnis",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T17:43:08.856529+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T17:24:25+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ketralnis\"> /u/ketralnis </a> <br/> <span><a href=\"https://www.seangoedecke.com/pure-and-impure-engineering/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1neeuy6/pure_and_impure_software_engineering/\">[comments]</a></span>",
        "id": 3550502,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1neeuy6/pure_and_impure_software_engineering",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Pure and Impure Software Engineering",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/ketralnis",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T17:43:10.139576+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T17:23:52+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ketralnis\"> /u/ketralnis </a> <br/> <span><a href=\"https://mchav.github.io/rewriting-dataframes-for-microhs/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1neeuf0/rewriting_dataframes_for_microhaskell/\">[comments]</a></span>",
        "id": 3550514,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1neeuf0/rewriting_dataframes_for_microhaskell",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Rewriting Dataframes for MicroHaskell",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/ketralnis",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T17:43:10.244767+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T17:21:29+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ketralnis\"> /u/ketralnis </a> <br/> <span><a href=\"https://discourse.llvm.org/t/rfc-ripple-a-compiler-interpreted-api-to-support-spmd-and-loop-annotation-programming-for-simd-targets/88241\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1nees2b/rfc_ripple_an_llvm_compilerinterpreted_api_to/\">[comments]</a></span>",
        "id": 3550515,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1nees2b/rfc_ripple_an_llvm_compilerinterpreted_api_to",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "[RFC] Ripple: An LLVM compiler-interpreted API to support SPMD and loop annotation programming for SIMD targets",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/ketralnis",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T17:43:10.352321+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T17:21:09+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ketralnis\"> /u/ketralnis </a> <br/> <span><a href=\"https://www.youtube.com/watch?v=Q34e3jLWYLU\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1neerr1/a_new_case_for_elixir/\">[comments]</a></span>",
        "id": 3550516,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1neerr1/a_new_case_for_elixir",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "A New Case for Elixir",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/ketralnis",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T17:43:08.960342+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T17:20:57+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ketralnis\"> /u/ketralnis </a> <br/> <span><a href=\"https://openjdk.org/jeps/401\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1neerjh/jep_401_value_classes_and_objects_preview/\">[comments]</a></span>",
        "id": 3550503,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1neerjh/jep_401_value_classes_and_objects_preview",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "JEP 401: Value Classes and Objects (Preview)",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/ketralnis",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T17:43:10.455610+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T17:20:26+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ketralnis\"> /u/ketralnis </a> <br/> <span><a href=\"https://lawrencecpaulson.github.io/2025/09/05/All_or_nothing.html\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1neer12/program_verification_is_not_allornothing/\">[comments]</a></span>",
        "id": 3550517,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1neer12/program_verification_is_not_allornothing",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Program verification is not all-or-nothing",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/ketralnis",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T17:43:10.558887+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T17:19:34+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ketralnis\"> /u/ketralnis </a> <br/> <span><a href=\"http://blog.unicode.org/2025/09/unicode-170-release-announcement.html\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1neeq77/unicode_170_release_announcement/\">[comments]</a></span>",
        "id": 3550518,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1neeq77/unicode_170_release_announcement",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Unicode 17.0 Release Announcement",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/ketralnis",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T18:59:50.728611+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T17:19:03+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ketralnis\"> /u/ketralnis </a> <br/> <span><a href=\"https://blog.rust-lang.org/2025/09/10/rust-compiler-performance-survey-2025-results/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1neepqt/rust_compiler_performance_survey_2025_results/\">[comments]</a></span>",
        "id": 3551096,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1neepqt/rust_compiler_performance_survey_2025_results",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Rust compiler performance survey 2025 results",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/ketralnis",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T17:43:08.544645+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T17:18:41+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ketralnis\"> /u/ketralnis </a> <br/> <span><a href=\"https://raku.org/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1neepdf/raku_is_an_expressive_multiparadigm_open_source/\">[comments]</a></span>",
        "id": 3550499,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1neepdf/raku_is_an_expressive_multiparadigm_open_source",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Raku is an expressive, multi\u2011paradigm, Open Source language that works the way you think",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/spite",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T16:32:54.028939+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T16:10:41+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Being an SDET, I&#39;ve been thinking about how 100% test coverage has become this mythical goal in software development - like some kind of Holy Grail that promises perfect code and eternal deployment peace.</p> <p>The reality is: - Nobody has ever actually achieved meaningful 100% coverage - It&#39;s often counterproductive to even try - Yet we still put it in our CI gates and performance reviews - Junior devs get obsessed with it, senior devs avoid talking about it</p> <p>It&#39;s fascinating how this metric has taken on almost religious significance. We treat it like an ancient artifact that will solve all our problems, when really it&#39;s just... a number.</p> <p>What&#39;s your take? Is 100% test coverage a worthy goal, a dangerous distraction, or something in between? Have you ever worked on a codebase that actually achieved it in any meaningful way?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/spite\">",
        "id": 3549396,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1necwrf/the_holy_grail_of_qa_100_test_coverage_a",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "The Holy Grail of QA: 100% Test Coverage - A Developer's Mythical Quest",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/goto-con",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T16:32:54.198613+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T16:04:08+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/goto-con\"> /u/goto-con </a> <br/> <span><a href=\"https://youtu.be/ehuYrQvFcFg\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1necquf/c_memory_management_patrice_roy_kevin_carpenter/\">[comments]</a></span>",
        "id": 3549397,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1necquf/c_memory_management_patrice_roy_kevin_carpenter",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "C++ Memory Management \u2022 Patrice Roy & Kevin Carpenter",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/younesfaid",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T16:32:54.650164+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T13:43:42+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/younesfaid\"> /u/younesfaid </a> <br/> <span><a href=\"https://medium.com/@david.henry.124/web-scraping-with-python-b29f1edc8715\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1ne96wu/web_scraping_with_python/\">[comments]</a></span>",
        "id": 3549400,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1ne96wu/web_scraping_with_python",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Web Scraping With Python",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Varonis-Dan",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T16:32:53.425770+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T13:29:20+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>In September 2025, attackers compromised 19 NPM packages\u2014including <code>chalk</code>, <code>debug</code>, <code>color-string</code>, <code>wrap-ansi</code>, and more\u2014via a phishing email targeting Josh Junon. The result? <strong>2.67 billion downloads in one week</strong>.</p> <p>The email passed SPF/DKIM/DMARC, was AI-generated, and looked legit. The injected JS malware hooked into frontend bundles and hijacked Web3 wallet transactions.</p> <p>It wrapped APIs like:</p> <ul> <li><code>fetch()</code></li> <li><code>XMLHttpRequest</code></li> <li><code>window.ethereum.request()</code></li> <li><code>solana_signTransaction</code></li> </ul> <p>It rewrote recipient addresses using Levenshtein distance, manipulated DEX payloads, and maxed out ERC-20 approvals for future draining.</p> <p>All packages have since been patched. But this raises serious questions:</p> <ul> <li>Should NPM enforce stricter maintainer verification?</li> <li>How do we protect again",
        "id": 3549393,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1ne8usg/aigenerated_phishing_how_one_email_triggered_a",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "AI-Generated Phishing: How One Email Triggered a Global NPM Supply Chain Crisis",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/rgancarz",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T16:32:54.350636+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T13:23:51+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/rgancarz\"> /u/rgancarz </a> <br/> <span><a href=\"https://www.infoq.com/news/2025/09/airbnb-impulse-load-testing/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1ne8q38/impulse_airbnbs_new_framework_for_contextaware/\">[comments]</a></span>",
        "id": 3549398,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1ne8q38/impulse_airbnbs_new_framework_for_contextaware",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Impulse, Airbnb\u2019s New Framework for Context-Aware Load Testing",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/brendt_gd",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T16:32:54.500025+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T13:12:14+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/brendt_gd\"> /u/brendt_gd </a> <br/> <span><a href=\"https://stitcher.io/blog/impact-charts\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1ne8gir/finding_a_way_to_prioritize_my_programming_and/\">[comments]</a></span>",
        "id": 3549399,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1ne8gir/finding_a_way_to_prioritize_my_programming_and",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Finding a way to prioritize my programming and OSS projects to prevent burning out",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/JadeLuxe",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T16:32:53.801020+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T11:42:47+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/JadeLuxe\"> /u/JadeLuxe </a> <br/> <span><a href=\"https://reiner.org/hashed-sorting\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1ne6jtd/hashed_sorting_is_typically_faster_than_hash/\">[comments]</a></span>",
        "id": 3549395,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1ne6jtd/hashed_sorting_is_typically_faster_than_hash",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Hashed sorting is typically faster than hash tables1",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/BlueGoliath",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T16:32:53.635603+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T09:43:53+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/BlueGoliath\"> /u/BlueGoliath </a> <br/> <span><a href=\"https://eclipse.dev/eclipse/markdown/?f=news/4.37/index.md\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1ne4hb2/eclipse_437_released/\">[comments]</a></span>",
        "id": 3549394,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1ne4hb2/eclipse_437_released",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Eclipse 4.37 Released",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/evilhighlord",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T09:41:52.320663+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T09:27:54+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>In our <a href=\"https://creative-labs.hashnode.dev/hoppscotch-api-live-sync?source=more_series_bottom_blogs\">previous posts</a>, we laid the foundation for live API synchronization with sync engines, <a href=\"https://creative-labs.hashnode.dev/api-live-sync-6-sync-engine?source=more_series_bottom_blogs\">setup wizards, and real-time status indicators</a>. In the end, we had a working system that could detect changes and update collections automatically.</p> <p>But real-world development is messier than our initial implementation assumed. Teams work together, frameworks have\u2026uhm\u2026peculiarities, and developers need to know what&#39;s happening when things change. Today, we&#39;re diving into the advanced features that transform our live sync system from &quot;functional&quot; to &quot;usable.&quot;</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/evilhighlord\"> /u/evilhighlord </a> <br/> <span><a href=\"https://creativ",
        "id": 3547010,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1ne48oh/api_live_sync_7_importexport",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "API Live Sync #7: import-export",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/namigop",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T09:41:52.489098+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T08:55:27+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Some interesting technical info</p> <h1>C# + AvaloniaUI for the UI</h1> <ul> <li>Rider has the best support developing AvaloniaUI applications. Using CompiledBindings, it is easy to navigate between the views and viewmodels. It is really convenient to just put your cursor on a binding, hit F12 (Go to Definition) and it automatically navigates to the corresponding viewmodel class/property</li> <li>There&#39;s a plugin for a Live Preview editor but I barely used it. I prefer to just type out the xaml markup.</li> <li>I think hot-reload will be a lot more useful</li> <li>AvaloniaUI is basically WPF++. It just works(TM). Having a single code base for windows, macos and linux is huge time saver.</li> </ul> <h1>F# for the backend logic</h1> <ul> <li>F# is love. Sadly, Microsoft will always prioritize C#.</li> <li>In my opinion, F# code &quot;looks clean&quot;. C# code on the other hand has a lot visual noise - lots of mostly empty lines containing just an a",
        "id": 3547011,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1ne3qww/crossplatform_grpc_test_tool",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Cross-platform gRPC Test tool",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/DataBaeBee",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T08:35:15.723587+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T06:59:37+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/DataBaeBee\"> /u/DataBaeBee </a> <br/> <span><a href=\"https://leetarxiv.substack.com/p/pohlig-hellman-discrete-logarithms\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1ne1zxy/pohlighellman_discrete_logarithms/\">[comments]</a></span>",
        "id": 3546098,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1ne1zxy/pohlighellman_discrete_logarithms",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Pohlig-Hellman Discrete Logarithms",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/ordepdev29",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T08:35:16.139960+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T00:35:22+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ordepdev29\"> /u/ordepdev29 </a> <br/> <span><a href=\"https://ordep.dev/posts/livelocks\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1nduzwm/when_more_threads_make_things_worse/\">[comments]</a></span>",
        "id": 3546100,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1nduzwm/when_more_threads_make_things_worse",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "When more threads make things worse",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/gregorojstersek",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-11T08:35:16.464858+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-11T00:11:37+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/gregorojstersek\"> /u/gregorojstersek </a> <br/> <span><a href=\"https://newsletter.eng-leadership.com/p/the-impact-of-ai-on-engineering-teams\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/programming/comments/1nduidd/the_impact_of_ai_on_engineering_teams/\">[comments]</a></span>",
        "id": 3546101,
        "language": "",
        "link": "https://www.reddit.com/r/programming/comments/1nduidd/the_impact_of_ai_on_engineering_teams",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 477,
        "source_url": "https://www.reddit.com/r/programming/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "The Impact of AI on Engineering Teams",
        "vote": 0
    }
]