[
    {
        "age": null,
        "album": "",
        "author": "/u/rkhunter_",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-04T20:26:14.662682+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-04T20:04:57+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/rkhunter_\"> /u/rkhunter_ </a> <br/> <span><a href=\"https://www.crowdfense.com/cve-2025-53149-windows-ksthunk-heap-overflow/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/ReverseEngineering/comments/1n8kmym/an_analysis_of_heapbased_buffer_overflow_in/\">[comments]</a></span>",
        "id": 3497749,
        "language": "",
        "link": "https://www.reddit.com/r/ReverseEngineering/comments/1n8kmym/an_analysis_of_heapbased_buffer_overflow_in",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 476,
        "source_url": "https://www.reddit.com/r/ReverseEngineering/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "An Analysis of Heap-based buffer overflow in Kernel Streaming WOW Thunk Service Driver - CVE-2025-53149",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/rkhunter_",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-04T20:26:14.469849+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-04T20:03:42+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Elastic Security Labs recently encountered a signature validation issue with one of our Windows binaries.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/rkhunter_\"> /u/rkhunter_ </a> <br/> <span><a href=\"https://www.elastic.co/security-labs/malformed-authenticode-signature\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/ReverseEngineering/comments/1n8klrk/investigating_a_mysteriously_malformed/\">[comments]</a></span>",
        "id": 3497748,
        "language": "",
        "link": "https://www.reddit.com/r/ReverseEngineering/comments/1n8klrk/investigating_a_mysteriously_malformed",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 476,
        "source_url": "https://www.reddit.com/r/ReverseEngineering/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Investigating a Mysteriously Malformed Authenticode Signature \u2014 Elastic Security Labs",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/sqli",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-04T20:26:14.827596+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-04T19:40:44+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/sqli\"> /u/sqli </a> <br/> <span><a href=\"https://awfulsec.com/generative_testing_inline_assembly_in_rust.html#generative-testing-inline-assembly-in-rust\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/ReverseEngineering/comments/1n8k0ay/generative_testing_inline_assembly_in_rust/\">[comments]</a></span>",
        "id": 3497750,
        "language": "",
        "link": "https://www.reddit.com/r/ReverseEngineering/comments/1n8k0ay/generative_testing_inline_assembly_in_rust",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 476,
        "source_url": "https://www.reddit.com/r/ReverseEngineering/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Generative Testing Inline Assembly in Rust",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Titoot69",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-04T18:46:42.752376+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-04T17:24:05+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey everyone,</p> <p>I&#39;ve always been super curious about how Godot handles PCK encryption under the hood. So recently, I decided to check out the engine source (and other existing tools), and see how you&#39;d actually recover a key from a compiled game.</p> <p>But as I looked at the existing tools, I was pretty surprised. Almost all of them are outdated, were tricky to get running, or were just really slow, especially on bigger game files. It felt like there had to be a better way.</p> <p>After a bunch of work, I&#39;m super excited to share what I came up with: <a href=\"https://github.com/Titoot/KeyDot\">KeyDot</a>.</p> <p>It extracts the key in just ~50ms!</p> <p>At the moment there&#39;s support for Windows and WASM but I&#39;m planning to add more in the future but I don&#39;t have any samples to test on :(</p> <p>This started as a passion project, but I&#39;d love to make it a genuinely useful tool for the community. This is where I could re",
        "id": 3496775,
        "language": "",
        "link": "https://www.reddit.com/r/ReverseEngineering/comments/1n8gf87/i_built_a_blazingly_fast_tool_to_extract",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 476,
        "source_url": "https://www.reddit.com/r/ReverseEngineering/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "I built a blazingly fast tool to extract encryption keys from Godot (Win, WASM)!",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/No_Abalone_4148",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-04T14:30:12.631274+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-04T12:04:24+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Actually I want to reverse engineee an android app. Just to know how They connecting with a LED device. I am using that LED device in one of my products. And I want to program or send instruction to that LED aa per my use case. Can anyone help me. Here is a link. </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/No_Abalone_4148\"> /u/No_Abalone_4148 </a> <br/> <span><a href=\"https://play.google.com/store/apps/details?id=com.wifiled.ipixels\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/ReverseEngineering/comments/1n889ag/need_help/\">[comments]</a></span>",
        "id": 3494477,
        "language": "",
        "link": "https://www.reddit.com/r/ReverseEngineering/comments/1n889ag/need_help",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 476,
        "source_url": "https://www.reddit.com/r/ReverseEngineering/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Need help",
        "vote": 0
    }
]