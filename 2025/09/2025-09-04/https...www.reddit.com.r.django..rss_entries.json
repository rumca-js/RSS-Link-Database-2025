[
    {
        "age": null,
        "album": "",
        "author": "/u/bip123",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-04T18:50:07.266905+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-04T18:12:12+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Does anyone know of a way to \u201cvirtualise\u201d a model so that it doesn\u2019t persist to the database but is rather queries its contents via api - ie an abstraction layer - with the benefit of still being a normal citizen in the admin backend. I\u2019m aiming to bring a virtual view of running jobs and other third party entities using my admin backend (single Ui, commands, etc) without mograting to db. The LLMs suggest Managed=False plus overriding a long list of manager and admin functions to get this to work, but it\u2019s proving problematic. </p> <p>Looking for any experiences or if I\u2019m going down the wrong path. </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/bip123\"> /u/bip123 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1n8hoom/virtual_model/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1n8hoom/virtual_model/\">[comments]</a></span>",
        "id": 3496803,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1n8hoom/virtual_model",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "\u201cVirtual\u201d model",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/dwaxe",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-04T18:50:07.474764+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-04T17:16:31+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/dwaxe\"> /u/dwaxe </a> <br/> <span><a href=\"https://www.djangoproject.com/weblog/2025/sep/04/last-call-for-djangocon-us-2025-tickets/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1n8g82l/last_call_for_djangocon_us_2025_tickets/\">[comments]</a></span>",
        "id": 3496804,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1n8g82l/last_call_for_djangocon_us_2025_tickets",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Last call for DjangoCon US 2025 tickets!",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/thibaudcolas",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-04T16:20:50.852415+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-04T15:57:23+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/thibaudcolas\"> /u/thibaudcolas </a> <br/> <span><a href=\"https://www.djangoproject.com/weblog/2025/sep/04/keyboard-shorcuts-in-django-via-gsoc-2025/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1n8e32v/keyboard_shortcuts_in_django_via_gsoc_2025/\">[comments]</a></span>",
        "id": 3495588,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1n8e32v/keyboard_shortcuts_in_django_via_gsoc_2025",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Keyboard shortcuts in Django via GSoC 2025",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Pitiful_Loss1577",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-04T14:33:02.853737+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-04T14:00:27+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>So, since i am using react in frontend. What is way to send message to client?<br/> For eg:- if i do login what response should i send ?<br/> is it like this?<br/> Response({message:&quot;Login Successful&quot;,status=200}. #and display the message in ui.</p> <p>or send only status code/default error object?</p> <p>- and same question for errors?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Pitiful_Loss1577\"> /u/Pitiful_Loss1577 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1n8axi4/how_do_you_send_required_message_or_handle/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1n8axi4/how_do_you_send_required_message_or_handle/\">[comments]</a></span>",
        "id": 3494518,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1n8axi4/how_do_you_send_required_message_or_handle",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "How do you send required message or handle exception in django/DRF?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/itssimon86",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-04T14:33:03.007719+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-04T12:20:43+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>In addition to logging API requests, Apitally can now capture application logs and correlate them with requests, so users get the full picture of what happened when troubleshooting issues.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/itssimon86\"> /u/itssimon86 </a> <br/> <span><a href=\"https://apitally.io/blog/application-logs-release-announcement\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1n88lp5/api_request_logs_and_correlated_application_logs/\">[comments]</a></span>",
        "id": 3494519,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1n88lp5/api_request_logs_and_correlated_application_logs",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "API request logs and correlated application logs in one place",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/itsme2019asalways",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-04T14:33:03.159438+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-04T12:11:39+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Does Django have a go-to library for user registration, login, and token/session management, or do we usually implement this ourselves? I know Django has the built-in User model \u2014 should we extend/use that with custom code? Also, why do people often use access + refresh tokens instead of just JWTs or sessions?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/itsme2019asalways\"> /u/itsme2019asalways </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1n88ews/what_do_you_use_for_auth_in_django/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1n88ews/what_do_you_use_for_auth_in_django/\">[comments]</a></span>",
        "id": 3494520,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1n88ews/what_do_you_use_for_auth_in_django",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "What do you use for Auth in Django?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Great-Comedian-736",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-04T14:33:02.699808+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-04T11:47:30+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>One of my client want to replace the Postgresql DB with Snowflake for a data quality control web app. </p> <p>According to them it&#39;s better, faster, more reliable (more likely they have a long running contract).</p> <p>I am still the lead on the project and what I say will stick, but I want to have more feedback on pros and cons.</p> <p>The cons for me are obvious, a lot of the manager/ORM strengths are lost and the implementation increase complexity.</p> <p>But I might not have the full picture</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Great-Comedian-736\"> /u/Great-Comedian-736 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1n87wzp/snowflake_as_backend_for_django/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1n87wzp/snowflake_as_backend_for_django/\">[comments]</a></span>",
        "id": 3494517,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1n87wzp/snowflake_as_backend_for_django",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Snowflake as backend for Django",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Upstairs-Concert5800",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-04T09:17:39.341687+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-04T08:39:44+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi everyone,</p> <p>I\u2019m working on a Django project where I need to serve media files securely. My setup is roughly like this:</p> <ul> <li>Caddy is the public-facing server.</li> <li>Django handles authentication and permissions.</li> <li>Files are stored locally on the same server where Caddy and Django are running (for speed), although they are also stored on FTP</li> <li>We can&#39;t use S3 or similar services</li> </ul> <p>I want users to be able to access files <strong>only if Django says they are allowed</strong>, but I also want Caddy to <strong>serve the files directly</strong> for efficiency (so Django doesn\u2019t have to stream large files).</p> <p>So the question I have:</p> <ol> <li>What\u2019s the best way to structure this \u201cCaddy \u2192 Django \u2192 Caddy\u201d flow? Is it even possible?</li> </ol> <p>I have tried to create django endpoint auth-check, which returns 200 if allowed, 401 not allowed. Based on this results the caddy will allow to serve the file o",
        "id": 3492452,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1n84puk/caddy_django_setup_serving_files",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Caddy + Django setup serving files",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/airhome_",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-04T09:17:39.199962+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-04T08:34:19+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I spend most of my time writing the AI first property management app that powers our short term rental business. AI first means that the software is developed to run autonomously, with human intervention for edge cases or exceptions.</p> <p>Over time, I&#39;ve found that despite re-writes and refactoring, AI first software tends to turn into horrible spaghetti code. The reason for this is unlike traditional software, there are not well established patterns like MVC and nice frameworks like Django for building AI first software for real businesses.</p> <p>There are tons of frameworks for building synchronous agents. LiteLLM, Langchain, CrewAI, AutoGen, and others handle the LLM orchestration beautifully. But in an AI first application for real world businesses, almost everything unfolds over days or weeks. A guest books a reservation, gets welcome messages, reminders before arrival, check-in assistance, and follow-ups after departure. The core challeng",
        "id": 3492451,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1n84n22/building_aifirst_apps_with_django",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Building AI-First Apps with Django",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/AfraidAsk4201",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-04T08:17:18.404838+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-04T07:42:18+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hello Devs,</p> <p>I have been working professionally for about 3 years, mostly through remote contracts and freelance projects. For most of that time, I have been figuring things out on my own, and I\u2019ve always wanted to be part of a team with more experienced developers to learn from.</p> <p>Recently, I joined a startup, but instead of being the learner in the room, I have found myself leading the team. While I&#39;m willing to take on responsibility and guide others, I also worry about missing out on the growth that comes from working alongside senior engineers.</p> <p>My question is: in your experience, does taking on leadership early accelerate learning in different ways, or is it still more valuable to actively seek out a team with stronger mentors? How do you see the balance between responsibility and learning from seniors?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/AfraidAsk4201\"> /u/AfraidAsk4201 </a",
        "id": 3492174,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1n83uwj/does_taking_on_leadership_early_help_growth_or_is",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Does taking on leadership early help growth, or is learning from senior devs more valuable?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/itsme2019asalways",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-04T07:17:02.893150+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-04T06:39:36+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/itsme2019asalways\"> /u/itsme2019asalways </a> <br/> <span><a href=\"/r/FastAPI/comments/1n82vae/would_you_settle_for_fastapi_or_django_in_the/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1n82w7k/would_you_settle_for_django_or_fastapi_in_the/\">[comments]</a></span>",
        "id": 3491906,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1n82w7k/would_you_settle_for_django_or_fastapi_in_the",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Would you settle for Django or FastAPI in the long run?",
        "vote": 0
    }
]