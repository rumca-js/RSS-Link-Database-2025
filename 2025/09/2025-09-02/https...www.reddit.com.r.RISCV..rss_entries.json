[
    {
        "age": null,
        "album": "",
        "author": "/u/m_z_s",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-02T20:31:10.682273+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-02T19:38:10+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>There are about 3 days until KickStart campaign ends. If you want a board based around the JH7110S, now is probably the time. </p> <p>To save anyone who is undecided time I&#39;ll just list a summary of the rewards here:</p> <table><thead> <tr> <th>Product</th> <th>KS price</th> <th>price after KS</th> </tr> </thead><tbody> <tr> <td>VisionFive 2 Lite - 2GB</td> <td>$19.90 ; \u20ac18 ; HK$ 156</td> <td>$27.99</td> </tr> <tr> <td>VisionFive 2 Lite - 2GB + WiFi</td> <td>$23 ; \u20ac20 ; HK$ 181</td> <td>$31.99</td> </tr> <tr> <td>VisionFive 2 Lite - 4GB + WiFi</td> <td>$30 ; \u20ac26 ; HK$ 235</td> <td>$42.99</td> </tr> <tr> <td>VisionFive 2 Lite - 8GB + WiFi</td> <td>$37 ; \u20ac32 ; HK$ 290</td> <td>$53.99</td> </tr> <tr> <td>VisionFive 2 Lite - 8GB + WiFi + 64GB EMMc</td> <td>$45 ; \u20ac39 ; HK$ 353</td> <td>$63.99</td> </tr> </tbody></table> <p>The prices do not include shipping costs! See the &quot;About Shipping&quot; part of the page.</p> <p><a href=\"https://www.kickstar",
        "id": 3479873,
        "language": "en",
        "link": "https://www.reddit.com/r/RISCV/comments/1n6tag8/visionfive_2_lite_3_days_reminder",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 471,
        "source_url": "https://www.reddit.com/r/RISCV/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "VisionFive 2 Lite -3 days reminder",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Van3ll0pe",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-02T16:29:18.521797+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-02T16:14:02+00:00",
        "description": "<table> <tr><td> <a href=\"https://www.reddit.com/r/RISCV/comments/1n6nt6x/riscv_32i_design_cpu/\"> <img src=\"https://b.thumbs.redditmedia.com/LKE1ZgyhsSEXuxUWed-tZcUMJsBlXbrG-PBWbRrtE4w.jpg\" alt=\"RISCV 32I Design CPU\" title=\"RISCV 32I Design CPU\" /> </a> </td><td> <!-- SC_OFF --><div class=\"md\"><p>Hello everyone,</p> <p>I am trying to create a design for a RISCV 32I core in order to later implement it in VHDL for FPGA.</p> <p>I haven&#39;t yet created the risk control unit, but I would like to hear your opinion on what I have drawn.<br/> If something is missing or somethins is wrong</p> <p>PS:<br/> The ALU take rs1_branch and rs2_branch just to manage branch condition.</p> <p><a href=\"https://preview.redd.it/bd5a7vs01smf1.png?width=1569&amp;format=png&amp;auto=webp&amp;s=c058cfa63a7110704f1aaba790cd9e36cb3110be\">https://preview.redd.it/bd5a7vs01smf1.png?width=1569&amp;format=png&amp;auto=webp&amp;s=c058cfa63a7110704f1aaba790cd9e36cb3110be</a></p> </div><!-- SC_ON --> &#32; submitted by",
        "id": 3477820,
        "language": "en",
        "link": "https://www.reddit.com/r/RISCV/comments/1n6nt6x/riscv_32i_design_cpu",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 471,
        "source_url": "https://www.reddit.com/r/RISCV/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": "https://b.thumbs.redditmedia.com/LKE1ZgyhsSEXuxUWed-tZcUMJsBlXbrG-PBWbRrtE4w.jpg",
        "title": "RISCV 32I Design CPU",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/gorv256",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-02T15:28:45.375295+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-02T14:56:21+00:00",
        "description": "<table> <tr><td> <a href=\"https://www.reddit.com/r/RISCV/comments/1n6lqls/ladybird_browser_on_orangepi_rv2/\"> <img src=\"https://preview.redd.it/6gvkl7e3krmf1.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=a7ab5a8969eec5c8c3892177c9b1360676520661\" alt=\"Ladybird browser on OrangePi RV2\" title=\"Ladybird browser on OrangePi RV2\" /> </a> </td><td> <!-- SC_OFF --><div class=\"md\"><p>As a fan of the upcoming Ladybird browser project I was interested if it works on RISC-V. So I decided to build it on my OrangePi RV2. Ran into quite a few issues with the vcpkg based build process and it took almost a day to compile but in the end it worked!</p> <p>This is probably the first ever successful build of Ladybird on RISCV judging from the missing pieces in the build scripts :D</p> <p>Really amazing to see how far along RISC-V software ecosystem already is when a &quot;messy&quot; project like a new web browser with tons of system/library dependencies can be ported in just a couple hours.</p> </div>",
        "id": 3477212,
        "language": "en",
        "link": "https://www.reddit.com/r/RISCV/comments/1n6lqls/ladybird_browser_on_orangepi_rv2",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 471,
        "source_url": "https://www.reddit.com/r/RISCV/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": "https://preview.redd.it/6gvkl7e3krmf1.png?width=640&crop=smart&auto=webp&s=a7ab5a8969eec5c8c3892177c9b1360676520661",
        "title": "Ladybird browser on OrangePi RV2",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/0BAD-C0DE",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-02T13:27:42.971529+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-02T13:03:17+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p><a href=\"https://riscv.org/wp-content/uploads/2024/12/riscv-calling.pdf\">Calling convention</a> says that registers <code>gp</code> and <code>tp</code> (aka <code>x3</code> and <code>x4</code>) are not covered (or <em>unallocatable</em>).</p> <p>How should I treat them during context switches:</p> <ul> <li>Save and restore? </li> <li>Ignore as if they didn&#39;t exist?</li> <li>Don&#39;t save but use at my own risk?</li> </ul> <p>I am personally leaning towards first option, just in case. But does this make sense?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/0BAD-C0DE\"> /u/0BAD-C0DE </a> <br/> <span><a href=\"https://www.reddit.com/r/RISCV/comments/1n6ivra/nonisa_how_to_threat_gp_and_tp_registers_in/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/RISCV/comments/1n6ivra/nonisa_how_to_threat_gp_and_tp_registers_in/\">[comments]</a></span>",
        "id": 3476103,
        "language": "en",
        "link": "https://www.reddit.com/r/RISCV/comments/1n6ivra/nonisa_how_to_threat_gp_and_tp_registers_in",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 471,
        "source_url": "https://www.reddit.com/r/RISCV/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "[non-ISA] How to threat gp and tp registers in context switches?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/dramforever",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-02T12:27:21.244031+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-02T12:16:59+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/dramforever\"> /u/dramforever </a> <br/> <span><a href=\"https://www.reddit.com/r/RISCV/comments/1n6hvqr/what_is_the_worst_ratified_riscv_instruction/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/RISCV/comments/1n6hvqr/what_is_the_worst_ratified_riscv_instruction/\">[comments]</a></span>",
        "id": 3475567,
        "language": "en",
        "link": "https://www.reddit.com/r/RISCV/comments/1n6hvqr/what_is_the_worst_ratified_riscv_instruction",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 471,
        "source_url": "https://www.reddit.com/r/RISCV/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "What is the worst ratified RISC-V instruction?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/0BAD-C0DE",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-02T12:27:21.101011+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-02T11:39:30+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I am thinking about &quot;translating&quot; some often used instruction sequences into their &quot;compressed&quot; counterpart. Mainly aiming at slimming down the code size and lowering a little bit the pressure on I-cache.</p> <p>Besides the normal challenges posed by limitations like available registers and smaller immediates (which I live as an intriguing pastime), I am wondering whether there is any advantage in keeping the length of compressed instruction sequences to an even number (by adding a <code>c.nop</code>), as I would keep some of the non-compressed instructions in place (because their replacement would not be worth it).</p> <p>With longer (4+) compressed sequences I already gain some code size savings but, do I get any losses with odd lengths followed by non-compressed instruction(s)?</p> <p>I think I can &quot;easily&quot; get 40 compressed instructions in a 50 non-compressed often-used instruction sequence. And 6 to 10 of those are c",
        "id": 3475566,
        "language": "en",
        "link": "https://www.reddit.com/r/RISCV/comments/1n6h4y3/rv64c_compressed_instruction_sequences",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 471,
        "source_url": "https://www.reddit.com/r/RISCV/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "[RV64C] Compressed instruction sequences",
        "vote": 0
    }
]