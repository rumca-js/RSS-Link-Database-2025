[
    {
        "age": null,
        "album": "",
        "author": "/u/noman-dev",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-22T23:36:30.379580+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-22T23:32:45+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey guys. Im learning django on my own. I love to learn by building. But I&#39;m facing lots of errors from django framework. Do you have any advice regarding that?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/noman-dev\"> /u/noman-dev </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1no21k2/suggest_the_best_way_to_learn_django/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1no21k2/suggest_the_best_way_to_learn_django/\">[comments]</a></span>",
        "id": 3640490,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1no21k2/suggest_the_best_way_to_learn_django",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Suggest the best way to learn django",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Admirable_Ad_7646",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-22T23:36:30.101117+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-22T22:49:31+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I am planning to learn Django and wanted to switch field. How is job market for fresher as well as a senior to get into Django roles?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Admirable_Ad_7646\"> /u/Admirable_Ad_7646 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1no12zq/how_is_the_job_market_for_django_developers_in/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1no12zq/how_is_the_job_market_for_django_developers_in/\">[comments]</a></span>",
        "id": 3640489,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1no12zq/how_is_the_job_market_for_django_developers_in",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "How is the job market for Django developers in India?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/trung2607",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-22T20:02:38.917225+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-22T19:34:07+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><pre><code>&quot;&quot;&quot; Django settings for complaint_backend project. Generated by &#39;django-admin startproject&#39; using Django 5.2.5. For more information on this file, see https://docs.djangoproject.com/en/5.2/topics/settings/ For the full list of settings and their values, see https://docs.djangoproject.com/en/5.2/ref/settings/ &quot;&quot;&quot; from pathlib import Path from environs import Env # new env = Env() env.read_env() # Build paths inside the project like this: BASE_DIR / &#39;subdir&#39;. BASE_DIR = Path(__file__).resolve().parent.parent # Quick-start development settings - unsuitable for production # See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/ # SECURITY WARNING: keep the secret key used in production secret! SECRET_KEY = env.str(&quot;SECRET_KEY&quot;) # SECURITY WARNING: don&#39;t run with debug turned on in production! DEBUG = env.bool(&quot;DEBUG&quot;, default=False) ALLOWED_HOSTS = [&quot;.herokua",
        "id": 3639086,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1nnw760/why_do_i_keep_getting_cors_errors_on_my_react",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Why do i keep getting cors errors on my react frontend?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/PersonalSoup1657",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-22T15:20:46.361427+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-22T14:31:36+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi everyone,</p> <p>I\u2019ve been learning <strong>Django (Python)</strong> for about a year \u2014 covering its ORM, PostgreSQL, and building REST APIs. My next plan was to learn <strong>React</strong> and then move to <strong>Next.js</strong> for the frontend.</p> <p>My long-term goal is to build a <strong>modern, scalable, AI-powered School Management SaaS</strong> with a robust architecture.</p> <p>However, at the company where I work, there\u2019s pressure to deliver a ready-made school management system quickly so they can start earning revenue. Most of the \u201coff-the-shelf\u201d products we find (e.g., on CodeCanyon) are built in <strong>CodeIgniter (PHP)</strong>.</p> <p>Now I\u2019m stuck:</p> <ul> <li>Should I pause my Django/React/Next.js learning and dive into CodeIgniter so I can customize these ready-made solutions?</li> <li>Is CodeIgniter still a solid choice for new projects, especially for something I hope will scale and last 10\u201320 years?</li> <li>How active i",
        "id": 3636694,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1nno2s5/should_i_switch_from_django_to_codeigniter_for_a",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Should I switch from Django to CodeIgniter for a school management SaaS, or stick with modern stacks?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/AdDifficult9782",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-22T15:20:46.036614+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-22T14:29:34+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I\u2019m a startupper. I really like using Django for this kind of projects. It\u2019s too fast and comfortable to develop. Why do you choose Django for the MVPs ? How Django\u2019s helped you to solve your problems ?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/AdDifficult9782\"> /u/AdDifficult9782 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1nno0uk/why_django_is_the_best_backend_framework_for_the/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1nno0uk/why_django_is_the_best_backend_framework_for_the/\">[comments]</a></span>",
        "id": 3636693,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1nno0uk/why_django_is_the_best_backend_framework_for_the",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Why Django is the best backend framework for the startup and mvp projects ?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/PJC10183",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-22T07:23:10.921579+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-22T06:58:01+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi Everyone, I am looking for recommendation on some courses that go past the beginner stages of creating a django project. A lot of the ones I have gone through cover the simple CRUD projects with function based views and touching on CBVs as well. I would like something that goes more in depth and touches on concepts such as multi-tenant, htmx etc. Can anyone recommend anything they have used themselves?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/PJC10183\"> /u/PJC10183 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1nnfjua/courses_that_go_past_the_beginner_stage/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1nnfjua/courses_that_go_past_the_beginner_stage/\">[comments]</a></span>",
        "id": 3633586,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1nnfjua/courses_that_go_past_the_beginner_stage",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Courses that go past the beginner stage",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/OfficeAccomplished45",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-22T07:23:10.659459+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-22T06:56:55+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>hi <a href=\"/r/django\">r/django</a> </p> <p>In the past, I had to shut down a small django projects because cloud costs and maintenance overhead were just too high. It ended up sitting quietly on GitHub, untouched. I kept wondering: what would happen if this project could stay online?</p> <p>That\u2019s why we created <strong>Leapcell</strong>: a platform designed so your ideas can stay alive without getting killed by costs in the early stage.</p> <p><strong>Deploy up to 20 websites for free (in our free tier)</strong></p> <p>Yes, this is included in our free tier. Most PaaS platforms give you a single free VM (like the old Heroku model), but those machines often sit idle. Leapcell takes a different approach: by leveraging a serverless container architecture, we can fully utilize compute resources and let you host multiple services simultaneously. That means while others only let you run <strong>one</strong> project for free, we let you run up to <strong>2",
        "id": 3633585,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1nnfj7k/we_just_launched_leapcell_deploy_20_django",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "We just launched Leapcell, deploy 20 Django website for free",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/dwaxe",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-22T07:23:10.493598+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-22T06:51:15+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/dwaxe\"> /u/dwaxe </a> <br/> <span><a href=\"https://www.djangoproject.com/weblog/2025/sep/21/sarah-boyce-maternity-leave-announcement/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1nnffvu/sarah_boyce_maternity_leave_announcement/\">[comments]</a></span>",
        "id": 3633584,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1nnffvu/sarah_boyce_maternity_leave_announcement",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Sarah Boyce - Maternity leave announcement",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/bootstrapper-919",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-22T02:55:14.153222+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-22T02:40:00+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;m starting a new project that require heavy I/O tasks (LLM calls and 3p APIs) and ORM calls on most views. I also want to make the project&#39;s frontend Django rendered + htmx (so not SPA).</p> <p>To optimize performance and resources, given that a big portion of the app is I/O, I&#39;m considering to use async views so I can serve more requests. But given Django&#39;s limitations, I&#39;m debating what&#39;s the best way to do that:</p> <p><strong>ASGI and async views all the way</strong></p> <p>Have the app run with uvcorn, write mainly async views and use ORM async methods (aget, afilter). Given that the ORM is not really async, when needing to make multiple ORM calls, batch them in one function and use sync_to_async</p> <ul> <li>Performance pros - ASGI and async views will allow asyncio to share threads while waiting for LLM responses</li> <li>Performance cons - Every ORM request will require a hop, which according to Django docs is around ",
        "id": 3632597,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1nnaz9n/django_design_for_heavy_io_and_orm_applications",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Django Design for Heavy I/O and ORM applications",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/learnerAsh",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-22T01:49:34.090080+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-22T01:43:19+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p><a href=\"https://www.youtube.com/watch?v=-cFvzE0Jt6c\">https://www.youtube.com/watch?v=-cFvzE0Jt6c</a></p> <p><a href=\"https://docs.nanodjango.dev/en/latest/index.html\">https://docs.nanodjango.dev/en/latest/index.html</a></p> <p><a href=\"https://nanodjango.dev/play/\">https://nanodjango.dev/play/</a> (playground)</p> <p>You can build an API using any method you would in a full Django project, nanodjango has built-in support for <a href=\"https://django-ninja.dev/\">Django Ninja</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/learnerAsh\"> /u/learnerAsh </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1nn9t69/nanadjango_it_looks_promising_simple_to_start/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1nn9t69/nanadjango_it_looks_promising_simple_to_start/\">[comments]</a></span>",
        "id": 3632399,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1nn9t69/nanadjango_it_looks_promising_simple_to_start",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "nanadjango, it looks promising, simple to start, built API support....",
        "vote": 0
    }
]