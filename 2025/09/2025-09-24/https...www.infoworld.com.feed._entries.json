[
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-24T12:19:44.068173+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-24T10:52:03+00:00",
        "description": "<div id=\"remove_no_follow\">\n\t\t<div class=\"grid grid--cols-10@md grid--cols-8@lg article-column\">\n\t\t\t\t\t  <div class=\"col-12 col-10@md col-6@lg col-start-3@lg\">\n\t\t\t\t\t\t<div class=\"article-column__content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n\n<p>Eight organizations that operate the world\u2019s largest software package registries issued a coordinated warning that their current funding model was \u201cdangerously fragile,\u201d signaling potential changes to how enterprises access the infrastructure powering billions of software downloads monthly.</p>\n\n\n\n<p>The joint statement, published as an open letter on the Open Source Security Foundation (OpenSSF) website, came from leaders of the Python Software Foundation, Rust Foundation, Eclipse Foundation, OpenJS Foundation, and four other major open-source stewards. It represented the first unified call for sustainable funding from organizations whose registries handle what they described as \u201ctrillions\u201d of ",
        "id": 3652634,
        "language": "en-US",
        "link": "https://www.infoworld.com/article/4062319/open-source-registries-signal-shift-toward-paid-models-as-ai-strains-infrastructure.html",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 468,
        "source_url": "https://www.infoworld.com/feed/",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Open source registries signal shift toward paid models as AI strains infrastructure",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-24T12:19:44.550861+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-24T09:00:00+00:00",
        "description": "<div id=\"remove_no_follow\">\n\t\t<div class=\"grid grid--cols-10@md grid--cols-8@lg article-column\">\n\t\t\t\t\t  <div class=\"col-12 col-10@md col-6@lg col-start-3@lg\">\n\t\t\t\t\t\t<div class=\"article-column__content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n\n<p>GraalVM 25, an update to Oracle\u2019s tool for compiling <a href=\"https://www.infoworld.com/java/\" data-type=\"link\" data-id=\"https://www.infoworld.com/java/\">Java</a> applications into native binaries, has arrived alongside the newly released <a href=\"https://www.infoworld.com/article/3846172/jdk-25-the-new-features-in-java-25.html\">JDK 25</a>. The update enhances the precision of points-to analysis in Native Image and allows source-phase imports from <a href=\"https://www.infoworld.com/article/3843110/how-wasm-reinvents-web-development.html\">WebAssembly</a> modules. Oracle also revealed plans to detach GraalVM from the Java ecosystem train.</p>\n\n\n\n<p>Downloadable from <a href=\"http://www.graalvm.org",
        "id": 3652638,
        "language": "en-US",
        "link": "https://www.infoworld.com/article/4061937/graalvm-25-arrives-backed-by-jdk-25.html",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 468,
        "source_url": "https://www.infoworld.com/feed/",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "GraalVM 25 arrives, backed by JDK 25",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-24T12:19:44.432052+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-24T09:00:00+00:00",
        "description": "<div id=\"remove_no_follow\">\n<body><div class=\"grid grid--cols-10@md grid--cols-8@lg article-column\">\n\t\t\t\t\t  <div class=\"col-12 col-10@md col-6@lg col-start-3@lg\">\n\t\t\t\t\t\t<div class=\"article-column__content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n\n<p>When I started coding in the 1970s, I used BASIC.\u00a0I remember discovering the cool new language feature called <code>GOSUB</code> that let you jump around easily in code and then return to where you had previously been. What a revelation!\u00a0\u00a0</p>\n\n\n\n<p>The language at the time had variables\u2014but no constants.\u00a0Parameters were not a thing\u2014we had <code>GOSUB</code>!\u2014and the notion of scope was completely unheard of. Everything was a global variable. Wild, right?</p>\n\n\n\n<p>Immutability is the exact opposite of those Wild West days. Instead of \u201canything goes,\u201d we get \u201ctie everything down and nothing will slide around the back of the stage coach.\u201d</p>\n\n\n\n<p>And the notion of a constant was bizarre.\u00a0I ",
        "id": 3652637,
        "language": "en-US",
        "link": "https://www.infoworld.com/article/4061746/how-immutability-tamed-the-wild-west.html",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 468,
        "source_url": "https://www.infoworld.com/feed/",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "How immutability tamed the Wild West",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-24T12:19:44.188474+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-24T09:00:00+00:00",
        "description": "<div id=\"remove_no_follow\">\n\t\t<div class=\"grid grid--cols-10@md grid--cols-8@lg article-column\">\n\t\t\t\t\t  <div class=\"col-12 col-10@md col-6@lg col-start-3@lg\">\n\t\t\t\t\t\t<div class=\"article-column__content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n\n<blockquote class=\"wp-block-quote is-layout-flow wp-block-quote-is-layout-flow\">\n<p><em>There should be one\u2014and preferably only one\u2014obvious way to do it.</em><em>\u2014Tim Peters, <a href=\"https://www.python.org/dev/peps/pep-0020/#id2\">Zen of Python</a></em></p>\n</blockquote>\n\n\n\n<p>While that quote is excellent, <a href=\"https://www.infoworld.com/article/2253770/what-is-python-powerful-intuitive-programming.html\">Python</a> doesn\u2019t always adhere to it in principle. One area where Python has fallen short of the ideal is package management. For too long, managing Python projects involved a mishmash of tools and methodologies. However, a few clean and simple toolsets are emerging. One of them is <a href=\"h",
        "id": 3652635,
        "language": "en-US",
        "link": "https://www.infoworld.com/article/2256032/how-to-manage-python-projects-with-poetry.html",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 468,
        "source_url": "https://www.infoworld.com/feed/",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "How to manage Python projects with Poetry",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-24T12:19:44.312185+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-24T09:00:00+00:00",
        "description": "<div id=\"remove_no_follow\">\n<body><div class=\"grid grid--cols-10@md grid--cols-8@lg article-column\">\n\t\t\t\t\t  <div class=\"col-12 col-10@md col-6@lg col-start-3@lg\">\n\t\t\t\t\t\t<div class=\"article-column__content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n\n<p><a href=\"https://www.infoworld.com/article/2338730/what-is-reactive-programming-programming-with-event-streams.html\">Reactive programming</a> is an important coding style that evolved from the <a href=\"https://www.infoworld.com/article/2263963/what-is-functional-programming-a-practical-guide.html\">functional programming</a> world. <a href=\"https://www.infoworld.com/article/2338708/reactive-javascript-with-stable-diffusion.html\">Reactive code</a> is ideal for processing and connecting realtime streaming data.\u00a0You can use reactive programming to compose <a href=\"https://www.infoworld.com/article/2334333/what-is-streaming-data-event-stream-processing-explained.html\">streams</a> into pipelines t",
        "id": 3652636,
        "language": "en-US",
        "link": "https://www.infoworld.com/article/2338760/reactive-java-with-spring-webflux-and-reactor.html",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 468,
        "source_url": "https://www.infoworld.com/feed/",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Reactive Java with Spring WebFlux and Reactor",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-24T02:37:47.759233+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-24T01:51:51+00:00",
        "description": "<div id=\"remove_no_follow\">\n\t\t<div class=\"grid grid--cols-10@md grid--cols-8@lg article-column\">\n\t\t\t\t\t  <div class=\"col-12 col-10@md col-6@lg col-start-3@lg\">\n\t\t\t\t\t\t<div class=\"article-column__content\">\n<section class=\"wp-block-bigbite-multi-title\"><div class=\"container\"></div></section>\n\n\n\n<p>QR codes are ubiquitous these days, as they are an easy way to deliver marketing content or direct users to websites and apps.</p>\n\n\n\n<p>They have also become a hiding place for malicious code.</p>\n\n\n\n<p>A threat research team at cybersecurity company Socket has discovered what it called  \u201ca sophisticated backdoor mechanism\u201d that, when incorporated into an enterprise\u2019s app or website, steals passwords stored in visitors\u2019 cookies via code embedded in QR codes.</p>\n\n\n\n<p>The malicious package, <a href=\"https://socket.dev/npm/package/fezbox/overview/1.3.0\" target=\"_blank\" rel=\"noreferrer noopener\">fezbox</a>, is disguised as a utility library and has \u201clayers of obfuscation\u201d including the \u201cinnovativ",
        "id": 3650432,
        "language": "en-US",
        "link": "https://www.infoworld.com/article/4061997/qr-codes-become-the-vehicle-for-malware-in-new-technique.html",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 468,
        "source_url": "https://www.infoworld.com/feed/",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "QR codes become the vehicle for malware in new technique",
        "vote": 0
    }
]