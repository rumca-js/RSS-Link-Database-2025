[
    {
        "age": null,
        "album": "",
        "author": "/u/Visible-Wrap-7729",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-24T22:15:29.716922+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-24T22:14:44+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I want to become a full stack development , i have learned python basics and i did a lot of projects using python without frameworks, i built a good programming knowledge, so after that, i studied front end basics (html, css, JavaScript) without any framework, now i am learning Django, so am i in the correct way? what should i study to complete this way ?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Visible-Wrap-7729\"> /u/Visible-Wrap-7729 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1nppql0/what_is_the_correct_way_to_become_a_full_stack/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1nppql0/what_is_the_correct_way_to_become_a_full_stack/\">[comments]</a></span>",
        "id": 3657346,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1nppql0/what_is_the_correct_way_to_become_a_full_stack",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "What is the correct way to become a full stack developer",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Comfortable_Virus505",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-24T22:15:29.475255+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-24T21:20:32+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Yooooo, I have been thinking about posting this for a while and I am finally doing it.</p> <p>I have been building a civic engagement website using Django and HTMX for the past several months, and I am kind of bored of working by myself. I would love to work with someone who has roughly the same experience level as me (I have been learning Python for the last 3 years and Django for almost 2). I am 99% self taught/LLM tutor taught so you will have to pardon some of the copy pasta in the project, but I understand how about 99% of it works. I want to work with someone who wants to create as close to a real world work experience as possible. I have been applying to dev jobs for over a year now with no traction anywhere and I want to make this thing as legit as possible so it looks good on a resume. This is a learning exercise, but there is a possibility of monetization later on.</p> <p>The project is called RepCheck and can be found at <a href=\"http://www",
        "id": 3657345,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1npoetw/looking_for_a_collaborator",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Looking for a collaborator",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/cloudster314",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-24T19:08:46.872416+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-24T18:13:28+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>After using Django for 10 years, I recently moved to FastAPI. The primary reason revolves around Async I/O, which is possible to do with Django. However, it seems to be easier with FastAPI.</p> <p>We&#39;ve been working with college students to give them some development experience. Our company benefits by staying abreast of the latest trends, learning from their wonderful creative ideas and drafting on their awesome energy.</p> <p>This is the project the students are working with: <a href=\"https://github.com/Oppkey/fastopp\">FastOpp</a></p> <p>Prior to working on FastOpp, all the students were using Django.</p> <p>These are the shortcomings we encountered with Django:</p> <ul> <li><strong>Sync-First Architecture</strong>: Originally designed for synchronous operations</li> <li><strong>Async Retrofitting</strong>: Adding async to existing sync code creates complexity</li> <li><strong>Mixed Patterns</strong>: Developers must constantly think about sync ",
        "id": 3656096,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1npjknw/django_architecture_versus_fastapi",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Django Architecture versus FastAPI",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/m0n4rch77",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-24T18:05:23.591257+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-24T17:23:46+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Best way to learn django</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/m0n4rch77\"> /u/m0n4rch77 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1npi9yz/how_to_learn/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1npi9yz/how_to_learn/\">[comments]</a></span>",
        "id": 3655550,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1npi9yz/how_to_learn",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "How to learn",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Best_Distance_6949",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-24T18:05:23.288128+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-24T16:01:25+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey <a href=\"/r/django\">r/django</a>,</p> <p>One recurring headache in Django projects is keeping seed data consistent across environments.</p> <ul> <li>You add reference data (categories, roles, settings) in development\u2026 and forget to sync it to staging or production.</li> <li>Different environments drift apart, leading to version conflicts or missing records.</li> <li>Deployment scripts end up with ad-hoc JSON fixtures or SQL patches that are hard to maintain.</li> </ul> <p>I got tired of that. So I built <a href=\"https://github.com/Starscribers/django-synced-seeders?utm_source=chatgpt.com\"><strong>django-synced-seeders</strong></a> \u2014 a simple, ORM-friendly way to version and sync your seed data.</p> <h1>What it does</h1> <ul> <li><strong>Versioned seeds</strong>: Every export is tracked so you don\u2019t re-import the same data.</li> <li><strong>Environment sync</strong>: Run <code>syncseeds</code> in staging or production to automatically bring them up",
        "id": 3655549,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1npg2yi/i_built_an_initial_data_syncing_system_for_django",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "I built an initial data syncing system for Django projects",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/eoBattisti",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-24T13:18:28.188306+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-24T12:46:34+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I have an micro-saas mvp running in AWS, for the moment I went with a dockerized app with sqlite as my database in a t3.micro instance. With this configuration we do have 2 users (betatesters we could say) and the costs are in avg $11 USD, but I know that to move foward we should have a Postgres instance, a domain name (we only use the IP now), probably a load balancer etc, what are some strategies that you guys use to reduce costs? Or what are the strategies to make your infra more reliable and performant and maintain a low-cost app?</p> <p>Think about my user base, I do not need any complex kubernetes infrastructure, this project can grow to 100-200 users maybe.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/eoBattisti\"> /u/eoBattisti </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1npb6nj/how_can_i_optimize_costs_for_my_django_app/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.",
        "id": 3653475,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1npb6nj/how_can_i_optimize_costs_for_my_django_app",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "How can I optimize costs for my Django app?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Cool-Pie430",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-24T11:41:43.259717+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-24T11:10:58+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>This is my first framework I&#39;ve touched so far. I&#39;m stubborn and won&#39;t quit Django but I&#39;ve been going at the official Django tutorial for the past 4 days and it&#39;s just so much. Some of the concepts are confusing and there&#39;s so much &quot;magic&quot;, don&#39;t know how to put it better other than &quot;magic&quot;.</p> <p>Did anyone feel the same when starting out Django? Started with it just because everyone recommended it and feel a bit disheartened that I don&#39;t get it straight out the bat, just need some reassurance.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Cool-Pie430\"> /u/Cool-Pie430 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1np9afg/was_anyone_overwhelmed_with_official_django/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1np9afg/was_anyone_overwhelmed_with_official_django/\">[comments]</a></span>",
        "id": 3652131,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1np9afg/was_anyone_overwhelmed_with_official_django",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Was anyone overwhelmed with official Django tutorial at the start?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/learnerAsh",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-24T11:41:43.547191+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-24T10:10:35+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p><a href=\"https://www.youtube.com/watch?v=-cFvzE0Jt6c\">https://www.youtube.com/watch?v=-cFvzE0Jt6c</a></p> <p><a href=\"https://docs.nanodjango.dev/en/latest/index.html\">https://docs.nanodjango.dev/en/latest/index.html</a></p> <p><a href=\"https://nanodjango.dev/play/\">https://nanodjango.dev/play/</a> (playground)</p> <p>You can build an API using any method you would in a full Django project, nanodjango has built-in support for <a href=\"https://django-ninja.dev/\">Django Ninja</a></p> <p>NOTE: repost of the earlier thread. As Title had a Typo, and Title can&#39;t be changed on Reddit</p> <p><a href=\"https://www.reddit.com/r/django/comments/1nn9t69/nanadjango_it_looks_promising_simple_to_start/\">https://www.reddit.com/r/django/comments/1nn9t69/nanadjango_it_looks_promising_simple_to_start/</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/learnerAsh\"> /u/learnerAsh </a> <br/> <span><a href=\"https://www.reddit.com/r",
        "id": 3652132,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1np89pb/nanodjango_it_looks_promising_simple_to_start",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "nanodjango, it looks promising, simple to start, built API support....",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Ok-Childhood-5005",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-24T07:43:59.862571+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-24T06:51:38+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey everyone,</p> <p>I&#39;m working on a new project using <code>cookiecutter-django</code> with <code>django-tenants</code> for a multi-tenant setup. I&#39;ve got everything running with Docker Compose, but the performance is incredibly slow.</p> <p>The project takes a frustratingly long time to load, even for the most basic pages like the homepage. When I try to visit a tenant subdomain (e.g., demo.<code>localhost:8000</code>), it&#39;s even worse. It feels like every single request is taking forever.</p> <p>I&#39;m running on Windows, and I&#39;ve heard that Docker can sometimes be slow with file synchronization, but I&#39;m not sure if that&#39;s the only issue or if there&#39;s something specific to the multi-tenancy middleware that could be causing this.</p> <p>Does anyone have experience with this kind of setup and know what might be causing the massive slowdown? Any advice on how to troubleshoot or fix this would be hugely appreciated! I&#39;",
        "id": 3651713,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1np5b89/why_is_my_dockerized_django_project_so_slow_with",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Why is my Dockerized Django project so slow with multi-tenancy? Help!",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/wander_builder",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-24T07:43:59.711663+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-24T06:37:24+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi, I am a beginner trying to build a microsaas. I have completed my MVP core flows and now trying to add a few security measures. </p> <p>An example - I plan to use DRF&#39;s throttling functions to ensure OTP flows are not getting misused, etc. </p> <p>But apart from this what else do I need to implement to ensure bot attacks and other such things don&#39;t happen? </p> <p>Is there a security checklist that I need to ensure is taken care of? Thanks a lot for any support! :-) </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/wander_builder\"> /u/wander_builder </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1np5361/security_measures_for_a_microsaas_product/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1np5361/security_measures_for_a_microsaas_product/\">[comments]</a></span>",
        "id": 3651712,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1np5361/security_measures_for_a_microsaas_product",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Security measures for a (micro)saas product",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/Alarming_Rest1557",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-24T04:23:37.645043+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-24T04:11:30+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I am a little confused about where to define the tasks while working with Celery. What I&#39;ve seen is that there are two ways to do it.</p> <ol> <li>Define the tasks inside the Django application and create a <a href=\"http://celery.py\">celery.py</a> as the starting point. Then create two Docker containers: one is the Django app, and the other is the Celery worker. So practically, I have two Django apps running, and I can call the Celery task from my Django app easily because it&#39;s defined in the same project by using <code>task1.delay()</code></li> <li>The second way is to have the Celery worker in a different project. So one Docker container will be the Django app, and the second one will be a lighter worker because it&#39;s not running the whole Django app. Now, the problem I&#39;ve seen with this implementation is that because the task is defined in another project, the only way I can call them is to re-implement the task function signature ag",
        "id": 3650844,
        "language": "",
        "link": "https://www.reddit.com/r/django/comments/1np2mv6/should_the_celery_tasks_be_defined_inside_the",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Should the Celery tasks be defined inside the Django application?",
        "vote": 0
    }
]