[
    {
        "age": null,
        "album": "",
        "author": "/u/thecursedspiral",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-24T22:14:07.001831+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-24T21:51:27+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi folks, I&#39;m new here in this environment, I dare say I don&#39;t even know a lot about the basics of reverse engineering even.</p> <p>I used some software in the recent past, like Hopper Disassembler, Ghidra, Radare and Frida (just a little bit), Binary Ninja, and Cutter / Rizin.</p> <p>My question refers to Cutter / Rizin specifically. Pre packaged versions of Cutter (like from github, and homebrew, which probably pulls it from there), specifically for the arm64 mac platform, feel really unstable in my Macbook Air M1. This is my newest machine, but Cutter is rather stable both in a rather old intel mac from 2014 and in a linux desktop that is mostly from around 2011. I think the arm version available just doesn&#39;t seem good enough - so prone to crashing it&#39;s not useful.</p> <p>The macports version though, seems comparatively much more stable. But it comes with no plugins. Not even rz-ghidra (at least this one, you can find in Arch Linux ",
        "id": 3657339,
        "language": "",
        "link": "https://www.reddit.com/r/ReverseEngineering/comments/1npp6cv/seeking_to_install_plugins_for_cutter_rizin",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 476,
        "source_url": "https://www.reddit.com/r/ReverseEngineering/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Seeking to install plugins for Cutter / Rizin",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/mahmoudimus",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-24T04:21:51.836419+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-24T03:45:07+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi folks - I had some free time and I wanted to write a very easy to update and hackable sigmaker that can work across multiple IDA versions. </p> <p>What&#39;s a sigmaker? Sigmaker stands for &quot;signature maker.&quot; It enables users to create unique binary pattern signatures that can identify specific addresses or routines within a binary, even after the binary has been updated.</p> <p>I explain more in the readme. Of note though, there&#39;s an optional runtime switcher that activates SIMD processing. It&#39;s cleverly designed such that it uses NEON for ARM machines, AVX2 if present with SSE2 fallback. If none of those exist, it falls down to scalar scans. While that routine is done in a header-only file, the interesting part IMO is the interfacing with Cython. That lets me call into C pretty seamlessly without having to setup the IDA SDK. (Just pip install sigmaker[speedups]&quot; and it should just work).</p> <p>I think there&#39;s a possibi",
        "id": 3650837,
        "language": "",
        "link": "https://www.reddit.com/r/ReverseEngineering/comments/1np259u/ida_python_sigmaker_with_simd_support",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 476,
        "source_url": "https://www.reddit.com/r/ReverseEngineering/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "IDA Python Sigmaker with SIMD support",
        "vote": 0
    }
]