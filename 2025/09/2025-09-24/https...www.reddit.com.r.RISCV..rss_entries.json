[
    {
        "age": null,
        "album": "",
        "author": "/u/mrb00k",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-24T12:01:36.539500+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-24T10:51:53+00:00",
        "description": "<table> <tr><td> <a href=\"https://www.reddit.com/r/RISCV/comments/1np8y1z/milkv_titan_images/\"> <img src=\"https://a.thumbs.redditmedia.com/Fu3bWCSFcTGAxos4D7J_3-xvQUdk6k6tj7431Qy3bK8.jpg\" alt=\"Milk-V Titan Images\" title=\"Milk-V Titan Images\" /> </a> </td><td> <!-- SC_OFF --><div class=\"md\"><p>source: <a href=\"https://x.com/milkv_official/status/1945076816160469412\">https://x.com/milkv_official/status/1945076816160469412</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/mrb00k\"> /u/mrb00k </a> <br/> <span><a href=\"https://www.reddit.com/gallery/1np8y1z\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/RISCV/comments/1np8y1z/milkv_titan_images/\">[comments]</a></span> </td></tr></table>",
        "id": 3652374,
        "language": "en",
        "link": "https://www.reddit.com/r/RISCV/comments/1np8y1z/milkv_titan_images",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 471,
        "source_url": "https://www.reddit.com/r/RISCV/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": "https://a.thumbs.redditmedia.com/Fu3bWCSFcTGAxos4D7J_3-xvQUdk6k6tj7431Qy3bK8.jpg",
        "title": "Milk-V Titan Images",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/fullgrid",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-24T07:55:22.808678+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-24T07:13:42+00:00",
        "description": "<table> <tr><td> <a href=\"https://www.reddit.com/r/RISCV/comments/1np5nsc/chinas_latest_gpu_arrives_with_claims_of_cuda/\"> <img src=\"https://external-preview.redd.it/WMoFSM_ESNhbjEkciy-Rd0SY0RIYgPT1B4RqqWSMj-g.jpeg?width=640&amp;crop=smart&amp;auto=webp&amp;s=1e6a5a5393e6e1773fbc67615613b404ec6ab6f7\" alt=\"China's latest GPU arrives with claims of CUDA compatibility and RT support\" title=\"China's latest GPU arrives with claims of CUDA compatibility and RT support\" /> </a> </td><td> <!-- SC_OFF --><div class=\"md\"><blockquote> <p>While previous <a href=\"https://www.tomshardware.com/news/china-fenghua-no1-gpu-certification\">Fenghua No.1</a> and <a href=\"https://www.tomshardware.com/news/innosilicon-fenghua-no-2-gpu-launching-august-3\">Fenghua No.2</a> graphics cards were based on Imagination Technologies&#39; PowerVR IP, the new Fenghua No.3 leverages the open-source RISC-V architecture instead. The graphics card reportedly borrows a page from OpenCore Institute&#39;s Nanhu V3 project.</p",
        "id": 3651757,
        "language": "en",
        "link": "https://www.reddit.com/r/RISCV/comments/1np5nsc/chinas_latest_gpu_arrives_with_claims_of_cuda",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 86,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 471,
        "source_url": "https://www.reddit.com/r/RISCV/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": "https://external-preview.redd.it/WMoFSM_ESNhbjEkciy-Rd0SY0RIYgPT1B4RqqWSMj-g.jpeg?width=640&crop=smart&auto=webp&s=1e6a5a5393e6e1773fbc67615613b404ec6ab6f7",
        "title": "China's latest GPU arrives with claims of CUDA compatibility and RT support",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/I00I-SqAR",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-24T01:19:18.261654+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-24T00:43:39+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>A collection of learning material regarded towards RISC-V: <a href=\"https://github.com/riscv/learn\">https://github.com/riscv/learn</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/I00I-SqAR\"> /u/I00I-SqAR </a> <br/> <span><a href=\"https://www.reddit.com/r/RISCV/comments/1noyfrg/riscvorg_learn_riscv/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/RISCV/comments/1noyfrg/riscvorg_learn_riscv/\">[comments]</a></span>",
        "id": 3650135,
        "language": "en",
        "link": "https://www.reddit.com/r/RISCV/comments/1noyfrg/riscvorg_learn_riscv",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 471,
        "source_url": "https://www.reddit.com/r/RISCV/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "riscv.org: Learn RISC-V",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/I00I-SqAR",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-24T01:19:17.073549+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-24T00:36:56+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>&quot;Hey there (maybe again)! In this book, you&#39;ll learn how to build a minimal RISC-V hypervisor which can boot Linux-based operating systems.</p> <p>This is a sequel to the online book <a href=\"https://1000os.seiya.me/en/\">Operating System in 1,000 Lines</a>. In that book, you have learned how to build a minimal operating system from scratch in C, but this time, we&#39;ll start from scratch (again) in your favorite language, Rust!</p> <p>From scratch means we&#39;ll start from the bare-metal programming in Rust, that is <em>type-1 hypervisor</em>, in 1000 lines of code like we did for the OS.</p> <p>However, this time we&#39;ll cheat a little bit, by relying on the power of Rust&#39;s ecosystem: third-party libraries (<em>&quot;crates&quot;</em>) to avoid implementing things that don&#39;t really matter for learning hypervisors.</p> <ul> <li>You can download the implementation examples from <a href=\"https://github.com/nuta/hypervisor-in-1000-li",
        "id": 3650133,
        "language": "en",
        "link": "https://www.reddit.com/r/RISCV/comments/1noyao6/hypervisor_in_1000_lines_for_riscv",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 471,
        "source_url": "https://www.reddit.com/r/RISCV/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Hypervisor in 1,000 Lines (for RISC-V)",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/I00I-SqAR",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-24T01:19:18.751717+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-24T00:32:54+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>By <a href=\"https://www.electropages.com/author/robin_mitchell\">Robin Mitchell</a></p> <p>&quot;<strong>Key Things to Know:</strong></p> <ul> <li>AI workloads are outpacing traditional hardware, exposing the limitations of CPUs and even GPUs in handling deep learning at scale.</li> <li>Researchers at University College Dublin have demonstrated a bare-metal RISC-V System-on-Chip (SoC) with the open-source NVIDIA Deep Learning Accelerator (NVDLA), removing the need for a full operating system.</li> <li>This approach achieves higher efficiency per watt and faster inference times, making it suitable for resource-constrained edge AI deployments.</li> <li>Open-source hardware and modular RISC-V design support transparent, reproducible AI systems, strengthening trust and long-term maintainability.</li> </ul> <p>Artificial intelligence is no longer confined to academic theory or tech demos; it\u2019s now driving innovation across nearly every sector, from healthca",
        "id": 3650136,
        "language": "en",
        "link": "https://www.reddit.com/r/RISCV/comments/1noy7pw/electropagescomblog_riscv_acceleration_for_deep",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 471,
        "source_url": "https://www.reddit.com/r/RISCV/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "electropages.com/blog: RISC-V Acceleration for Deep Learning at the Edge",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/I00I-SqAR",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-24T01:19:17.665515+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-24T00:27:27+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>By Uros Popovic:</p> <p>&quot;I recently implemented a minimal proof of concept time-sharing operating system kernel on RISC-V. In this post, I\u2019ll share the details of how this prototype works. The target audience is anyone looking to understand low-level system software, drivers, system calls, etc., and I hope this will be especially useful to students of system software and computer architecture.</p> <p>This is a redo of an exercise I did for my undergraduate course in operating systems, and functionally it should resemble a typical operating systems project. However, this experiment focuses on modern tooling, as well as the modern architecture of RISC-V. RISC-V is an amazing technology that is easy to understand more quickly than other CPU architectures, while remaining a popular choice for many new systems, not just an educational architecture.</p> <p>Finally, to do things differently here, I implemented this exercise in Zig, rather than tradition",
        "id": 3650134,
        "language": "en",
        "link": "https://www.reddit.com/r/RISCV/comments/1noy3nd/another_day_another_kernel_writing_an_operating",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 471,
        "source_url": "https://www.reddit.com/r/RISCV/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Another day, another kernel: Writing an operating system kernel from scratch",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": "/u/I00I-SqAR",
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-09-24T01:19:16.558498+00:00",
        "date_dead_since": null,
        "date_published": "2025-09-24T00:23:37+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Tenstorrent would like to introduce RiescueC as the next open-source release in a suite of tools under their RiESCUE umbrella, which provides a suite of python scripts and libraries for generating RISC-V tests.</p> <p>RiescueC is a comprehensive compliance test generation framework for RISC-V, that operates through multiple sophisticated modules to generate, execute, and validate RISC-V assembly tests. RiescueC supports:</p> <ul> <li>Multiple RISC-V extensions (I, M, A F, C, D, V, etc.)</li> <li>Self-checking test generation</li> <li>Configurable test constraints</li> <li>Comprehensive instruction set extension support</li> </ul> <p><a href=\"https://tenstorrent.com/vision/riescuec-a-compliance-test-generator\">https://tenstorrent.com/vision/riescuec-a-compliance-test-generator</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/I00I-SqAR\"> /u/I00I-SqAR </a> <br/> <span><a href=\"https://www.reddit.com/r/RISCV/comme",
        "id": 3650132,
        "language": "en",
        "link": "https://www.reddit.com/r/RISCV/comments/1noy0t4/tenstorrent_announcing_riescuec_a_compliance_test",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 471,
        "source_url": "https://www.reddit.com/r/RISCV/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "tenstorrent: Announcing RiescueC, a Compliance Test Generator",
        "vote": 0
    }
]