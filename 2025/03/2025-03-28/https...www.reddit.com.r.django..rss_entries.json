[
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-28T21:48:39+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p><a href=\"https://i.redd.it/teb1g47w2ire1.gif\">https://i.redd.it/teb1g47w2ire1.gif</a></p> <p>This <a href=\"https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/command-line-installing.html?trk=097e3904-44bf-4aaf-8973-98d13e4e3a18&amp;sc_channel=el\">CLI assistant</a> might be a game-changer for you for Django:</p> <ul> <li>It can troubleshoot those cryptic Django error messages and actually explain what&#39;s wrong</li> <li>Ask it to add features like &#39;add a simple search function to my app&#39; and it writes the code + explains implementation</li> <li>Can generate test cases</li> <li>Helps with deployment configs for different environments</li> </ul> <p>You can use it for free with BuilderID.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/vogejona\"> /u/vogejona </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1jm6m4x/built_a_django_app_by_basically_just_explaining/\">[link]</a></span> &",
        "id": 2433743,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jm6m4x/built_a_django_app_by_basically_just_explaining",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Built a Django app by basically just explaining what I wanted in the terminal",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-28T15:26:05+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;d like to create an authentication system with google OAuth2 and drf but I&#39;m really confused about the concepts and how to actully use them. Any video or tutorail ?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/nima_x86\"> /u/nima_x86 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1jlxo13/google_oauth2_drf/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jlxo13/google_oauth2_drf/\">[comments]</a></span>",
        "id": 2431207,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jlxo13/google_oauth2_drf",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Google OAuth2 + DRF",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-28T12:58:24+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hello there, Im developing a small for storing links, the idea is simple a user can have folders and into the folders it has links, the folders can be either collaborative or not but a cuestion crossed my mind early... Must I use cache for the links and folders and how can I implement it? Because i think that caching the links for x time it would be a issue, the users wont see inmediatly the new links added or also the updates (for example a description or a modification of a link). </p> <p>For context i have poor notions of caching in Django and i have used it only for a weather widget. </p> <p>Thank you for your suggestions. </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Additional_Track_377\"> /u/Additional_Track_377 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1jlugkv/cache_strategy_for_my_project/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jlugkv",
        "id": 2429425,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jlugkv/cache_strategy_for_my_project",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Cache Strategy for my project",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-28T11:04:28+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I have a problem I need to tackle regarding a frontend card at work. I&#39;ll give a bit of context first.</p> <p>The app I&#39;m working on is mostly legacy code built with Django templates, Jquery an SCSS.</p> <p>Currently the app has a collapsing sidebar done with some third party library called Inspinia. It collapses on tablet screen sizes and down but currently it&#39;s fixed open on desktop.</p> <p>My current card has the following instructions:</p> <p>- Sidebar should remain the same in tablet and down sizes</p> <p>- On desktop the tablet should now also be collapsible</p> <p>- The sidebar should be opened by default</p> <p>- If the user changes the sidebar opened state, it should be remembered via cookies or something</p> <p>So far what I&#39;ve tried was to do this purely by css/javascript means. However I&#39;ve ran into too many obstacles.</p> <p>- Having to keep the sidebar opened meant I needed to hardcode the css classes on the html, be",
        "id": 2428511,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jlshy5/question_about_frontend_task_im_stuck_on",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Question about frontend task I'm stuck on.",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-28T10:11:56+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Newbie self-learner here, I&#39;m looking for any project reco to get some insights on how to structure the app which uses the tech stack mentioned. TIA!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/jungalM\"> /u/jungalM </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1jlrq22/looking_for_recommendation_for_github_project/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jlrq22/looking_for_recommendation_for_github_project/\">[comments]</a></span>",
        "id": 2428512,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jlrq22/looking_for_recommendation_for_github_project",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Looking for recommendation for Github Project that uses DRF backend and React query",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-28T03:15:39+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey everyone! \ud83d\udc4b</p> <p>I\u2019ve been working with Django professionally for a while and realized that every time I start a new project, I repeat the same setup process: installing packages, configuring DRF, setting up Docker, writing boilerplate scripts, adding linters, and so on.</p> <p>So I decided to build a <strong>production-ready Django starter blueprint</strong> that includes <strong>everything I usually set up manually</strong> \u2014 and I just open-sourced it! \ud83d\ude4c<br/> <strong>\ud83d\udd27 Features</strong></p> <p>\u2022 \u2699\ufe0f <strong>Django + Django REST Framework (DRF)</strong></p> <p>\u2022 \ud83d\udce6 <strong>OpenAPI schema with drf-spectacular</strong></p> <p>\u2022 \ud83e\udde9 <strong>Unfold Admin UI</strong> (beautiful and modern Django admin)</p> <p>\u2022 \ud83e\uddea <strong>Pre-configured pre-commit hooks</strong></p> <p>\u2022 \ud83e\uddf9 <strong>Ruff for linting + formatting</strong></p> <p>\u2022 \ud83d\udc33 <strong>Docker &amp; Docker Compose for dev</strong></p> <p>\u2022 \u26a1\ufe0f <strong>uv for Python dependency management</strong></p> <p",
        "id": 2426795,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jlloms/i_built_an_advanced_django_starter_blueprint_with",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "\ud83d\ude80 I Built an Advanced Django Starter Blueprint \u2014 With DRF, OpenAPI, uv, Docker, and More!",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-28T03:00:49+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/dtebar_nyc\"> /u/dtebar_nyc </a> <br/> <span><a href=\"https://i.redd.it/omp7gs1wicre1.jpeg\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jllemn/a_category_page_under_construction/\">[comments]</a></span>",
        "id": 2426796,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jllemn/a_category_page_under_construction",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "A category page. Under construction...",
        "vote": 0
    }
]