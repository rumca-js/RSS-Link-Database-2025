[
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-07T18:39:59+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hello Redditors,</p> <p>We&#39;re a team building a cutting-edge Learning Management System (LMS) using Django, and we&#39;re looking for an experienced Django developer to help us finalize the project.</p> <p><em>Project Overview:</em></p> <p>Our LMS aims to solve problems for private career colleges in Alberta and the way they manage their courses, students, and instructors. We&#39;ve made significant progress, but we need an expert&#39;s touch to ensure the project meets the highest standards.</p> <p><em>Responsibilities:</em></p> <ul> <li>Review and optimize our existing Django codebase</li> <li>Implement new features and functionality as needed</li> <li>Ensure scalability, security, and performance</li> <li>Collaborate with our team to resolve any issues or bugs</li> </ul> <p><em>Requirements:</em></p> <ul> <li>3+ years of experience with Django development</li> <li>Strong understanding of Django&#39;s ORM, templates, and views</li> <li>Experien",
        "id": 2271318,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1j5wc0n/seeking_experienced_django_developer_to_help",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Seeking Experienced Django Developer to Help Finalize Our Learning Management System (LMS)",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-07T17:56:35+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi all,</p> <p>I just released <a href=\"https://vault.mellonpass.com\">MellonPass</a>, a password manager web application built on top of Django (backend), Svelte using Typescript (frontend), a combination of GraphQL and a little bit of REST API, PostgreSQL (database), RabbitMQ (worker for async tasks), and Redis (cache). I deployed it on AWS using EC2 (nano machines :D, so it&#39;s pretty slow!)</p> <p>PostgreSQL, RabbitMQ, and Redis servers are all deployed in a hand-written fashion (Need to study more on DevOps) and are also secured with strict IP protection.</p> <p>For account registration and setup, the server will send you a one-time link to verify and complete your account via email. I used MailGun here, their free tier. Limited only to 100 emails per day. So if you can&#39;t receive an email, you can try again tomorrow.</p> <p>The app is best displayed in a desktop browser. (I&#39;m not a solid FE dev).</p> <p>There is a chance that the applic",
        "id": 2270835,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1j5v6o0/password_manager_using_django_and_svelte",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Password Manager using Django and Svelte (TypeScript)",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-07T15:55:40+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Put together a <strong>complete Java beginner repository</strong> \u2013 <strong>Java for All (JFA)</strong>. This covers <strong>everything from the basics to core Java concepts</strong>, along with <strong>notes and practice problems</strong> to help you learn and practice.</p> <h1>What\u2019s Inside?</h1> <p>\u2714 <strong>Java Basics</strong> \u2013 What is Java? Why use it?<br/> \u2714 <strong>Data Types &amp; Variables</strong><br/> \u2714 <strong>Loops &amp; Conditional Statements</strong> (with practice problems)<br/> \u2714 <strong>Exception Handling</strong> \u2013 try-catch, finally, throw, throws<br/> \u2714 <strong>Object-Oriented Programming (OOPs)</strong> \u2013 Classes, Objects, Inheritance &amp; More<br/> \u2714 <strong>Much more\u2026</strong></p> <p>\ud83d\udcbb <strong>Check it out here:</strong> <a href=\"https://github.com/abhinandan2540/JFA\">https://github.com/abhinandan2540/JFA</a></p> <p>If you find it useful, <strong>drop a \u2b50 on the repo</strong>! Open to contributions, feedback, and discussion",
        "id": 2269692,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1j5rom6/java_for_all_jfa_a_complete_java_beginner",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Java for All (JFA) \u2013 A Complete Java Beginner Repository",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-07T13:37:13+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>There is no need to import the models in the shell. Instead Django will do it for us.</p> <p>Previously, when using the Django shell, we had to manually import models, but Now, Django automatically imports models when you enter the shell, so we can start using them right away!</p> <p>this was a part of shell_plus inside Django extensions package</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/djv-mo\"> /u/djv-mo </a> <br/> <span><a href=\"https://i.redd.it/hvkq0wqct9ne1.png\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1j5nwzh/django_52_shell_auto_import_tip/\">[comments]</a></span>",
        "id": 2268693,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1j5nwzh/django_52_shell_auto_import_tip",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Django 5.2 Shell auto import tip",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-07T08:13:59+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Marc Lou&#39;s Shipfast is great. I wanted something like this - but for Django.</p> <p>I know that Django already has &quot;Batteries included&quot;, but when it comes down to it, there are a lot of pitfalls and configuration errors that took me days to fix in the past.</p> <p>If you are using DaisyUI + Tailwind i think you might especially appreciate the *no Node.js* dev workflow of compiling the CSS.</p> <p>Let me know what you think :)</p> <p><a href=\"https://djipfast.com\">https://djipfast.com</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/faibg\"> /u/faibg </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1j5insz/i_built_djipfast_a_shipfast_alternative_but_for/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1j5insz/i_built_djipfast_a_shipfast_alternative_but_for/\">[comments]</a></span>",
        "id": 2266700,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1j5insz/i_built_djipfast_a_shipfast_alternative_but_for",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "I built DjipFast - a shipfast alternative but for django",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-07T01:38:50+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi all,</p> <p>I\u2019ve worked mostly on backend in terms of creating models, APIs having OpenAPI specification docs etc and also have used docker containers and tied multi containers using docker compose.</p> <p>Now I\u2019ve been introduced to Kubernetes and this one pod one container is so confusing to me.</p> <p>Why do we need pods? Make it manageable? Why not someone include these management/ scaling methods etc in docker itself? It feels like adding additional wrapper to docker and repeating writing config files etc. </p> <p>If I have a VM then I can only have one Kubernetes to manage all the docker files? </p> <p>E.g. In one VM I can setup multiple website/ backends right? How does Kubernetes help me there? </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Sayv_mait\"> /u/Sayv_mait </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1j5c3hy/docker_and_kubernetes/\">[link]</a></span> &#32; <span><a href",
        "id": 2265163,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1j5c3hy/docker_and_kubernetes",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Docker and Kubernetes",
        "vote": 0
    }
]