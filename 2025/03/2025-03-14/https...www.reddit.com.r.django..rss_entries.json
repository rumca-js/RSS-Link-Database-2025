[
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-14T22:47:59+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I have simple JWT added on http cookie. LogOutView deletes the cookie and blacklists refresh token after logout. Where I should implement functions what prevent the classic navigating back to session issue on browser. Does it need to add in BE or FE? and what it should do? I have some idea but not quite sure how its done the right way.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Ok_Bumblebee5878\"> /u/Ok_Bumblebee5878 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1jbgnn7/drf_react_secure_logout/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jbgnn7/drf_react_secure_logout/\">[comments]</a></span>",
        "id": 2325808,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jbgnn7/drf_react_secure_logout",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "DRF + React: Secure logout",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-14T22:10:05+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Django-simple-history stores Django model state on every create, update, or delete database operation; it can even revert back to old versions of a model, record which user changed a model, interact with multiple databases, and more. Rather than making code changes, django-simple-history gives us the ability to view and perform many of the changes via the admin interface.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/djv-mo\"> /u/djv-mo </a> <br/> <span><a href=\"https://i.redd.it/kftx4l78bqoe1.png\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jbft9v/django_tip_tracking_model_changes_easily/\">[comments]</a></span>",
        "id": 2325807,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jbft9v/django_tip_tracking_model_changes_easily",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Django Tip Tracking Model Changes Easily",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-14T21:16:17+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>In this month&#39;s Talking Postgres podcast (focused on the human side of Postgres), guest Dawn Wages came on the podcast to talk about &quot;<a href=\"https://talkingpostgres.com/episodes/why-python-developers-just-use-postgres-with-dawn-wages\">Why Python developers just use Postgres</a>&quot;. Dawn is a Django developer and chair of the PSF and soon-to-be-author of Domain-driven Django which has a chapter aptly called &quot;Just Use Postgres&quot;. Dawn is a delight to talk to I&#39;m hoping some of you will enjoy this conversation about free as in cake vs. free as in puppies, why write a book for Django developers, the awesome Djangonaut Space mentoring program, and Simon Willison&#39;s TIL blog posts. </p> <p>Let me know what you think of the show (I&#39;m the host)\u2014am hoping you find it useful. You can find Talking Postgres anywhere you get your podcasts...</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/cl",
        "id": 2325437,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jbel7p/why_python_developers_just_use_postgres_with_dawn",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Why Python developers just use Postgres with Dawn Wages, a new episode of Talking Postgres podcast",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-14T21:02:01+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I\u2019m building a Django-based site for tracking recipes and need some help deeply understanding Django models and relationships. Specifically, I get lost trying to know when and where to use ForeignKey, OneToOneField, and ManyToManyField.</p> <p>For context, my website involves these main models: \u2022 Recipe \u2022 Ingredient \u2022 Measurement \u2022 Author (Chef) \u2022 Food Category (e.g., Dessert, Main Course)</p> <p>My main confusion revolves around: Determining which model should contain the ForeignKey or OneToOneField.</p> <p>How and when to use a ManyToManyField, especially when I want to include additional details such as ingredient quantity and measurements</p> <p>From my current understanding, for example, a user and profile would be a one-to-one relationship, so the profile model should include the user as a OneToOneField. Also, one user can have multiple posts, but a single post can only have one user, so the post model should include the user as a ForeignKey.</",
        "id": 2325438,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jbe9jg/models_question",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Models question",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-14T19:38:45+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I am using serializer to insure proper data input. Field &quot;uuid&quot; specified in model (on which serializer is based) as UNIQUE one, so when I try to put it into serializer it returns error: &quot;This uuid already exists&quot;. Bro, I dont want to change it nor add another one, just check is it realy uuid.</p> <p>If you interested in this, here is GitHub with project: <a href=\"https://github.com/DenisKurko/WhatToRead\">https://github.com/DenisKurko/WhatToRead</a> (&quot;dev&quot; branch)</p> <p>Paths to key files are:</p> <ul> <li>serializers (DelBookSerializer) - whattoread/api/serializers.py</li> <li>models (Book) - whattoread/api/models.py</li> <li>views (DelBookView) - whattoread/api/views.py</li> </ul> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Cautious_Vacation943\"> /u/Cautious_Vacation943 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1jbcb8d/i_just_want_to_read/\">[link]</a></sp",
        "id": 2324554,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jbcb8d/i_just_want_to_read",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "I JUST WANT TO READ",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-14T19:36:54+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/herchila6\"> /u/herchila6 </a> <br/> <span><a href=\"https://getastra.xyz\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jbc9lp/i_built_astra_1click_django_deploymentfeedback/\">[comments]</a></span>",
        "id": 2324555,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jbc9lp/i_built_astra_1click_django_deploymentfeedback",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "I Built Astra: 1-Click Django Deployment\u2014Feedback Welcome!",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-14T19:33:33+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/konmari523\"> /u/konmari523 </a> <br/> <span><a href=\"https://developerwithacat.com/blog/032025/quick-store-temp-data/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jbc6sk/the_filesystem_a_quick_dirty_way_to_store_temp/\">[comments]</a></span>",
        "id": 2324556,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jbc6sk/the_filesystem_a_quick_dirty_way_to_store_temp",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "The filesystem - a quick & dirty way to store temp data in your Django API",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-14T19:17:41+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/dog404_\"> /u/dog404_ </a> <br/> <span><a href=\"https://youtu.be/LUNFTjIe2XU?feature=shared\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jbbt4y/django_52_expected_april_includes_imports_by/\">[comments]</a></span>",
        "id": 2324553,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jbbt4y/django_52_expected_april_includes_imports_by",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Django 5.2 expected april includes imports by default in shell.",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-14T19:04:47+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I just recently joined an AI software testing company as a marketer, but I admittedly come from a background heavy on B2C marketing and less on B2B (and even less towards developers!). </p> <p>I&#39;m curious what resonates the most with dev leads and their teams. It&#39;s a crowded space full of options \u2013 at least a dozen AI software testing platforms have received significant venture capital in the last few years. </p> <p>So, what are the marketing campaigns that have resonated most with you? And how did you discover them? Thanks for the help!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/kleubay\"> /u/kleubay </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1jbbi3y/what_are_some_great_marketing_campaignstactics/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jbbi3y/what_are_some_great_marketing_campaignstactics/\">[comments]</a></span>",
        "id": 2324557,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jbbi3y/what_are_some_great_marketing_campaignstactics",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "What are some great marketing campaigns/tactics you've seen directed towards the developer community?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-14T18:24:16+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>At what point does it make sense to switch from Django REST Framework to Django Ninja? I\u2019ve been using DRF for my project, but I\u2019m wondering if Django Ninja\u2019s speed and async capabilities would be worth the transition. Curious to hear from anyone who\u2019s made the switch\u2014was it worth it, and what were the biggest pros/cons?</p> <p>My framework is used purely for API endpoints to connect to my mobile app. Typically the type of requests you would expect in a social media platform.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/alexstrehlke\"> /u/alexstrehlke </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1jbaj6x/switching_from_drf_to_django_ninja/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jbaj6x/switching_from_drf_to_django_ninja/\">[comments]</a></span>",
        "id": 2324088,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jbaj6x/switching_from_drf_to_django_ninja",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Switching from DRF to Django Ninja?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-14T17:06:50+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><h1>\ud83d\ude80 New VS Code Extension: Django Template Helper \ud83d\udee0\ufe0f</h1> <p>Hey Django devs! \ud83d\udc4b</p> <p>I just released a new <strong>VS Code extension</strong> that makes working with Django templates much smoother! If you&#39;ve ever struggled with <strong>Emmet not working</strong>, missing <strong>auto-closing tags</strong>, or broken <strong>syntax highlighting</strong> for <code>{% ... %}</code> and <code>{{ ... }}</code> \u2013 this extension is for you! \ud83c\udfaf</p> <h1>\ud83d\udd25 Features:</h1> <p>\u2705 <strong>Emmet support</strong> for Django templates (<code>.html</code> files) \u2705 <strong>Auto-closing tags</strong> for <code>{% block %}</code>, <code>{% for %}</code>, etc. \u2705 <strong>Syntax highlighting</strong> for <code>{% ... %}</code> and <code>{{ ... }}</code> \u2705 <strong>One-click setup</strong> to fix VS Code\u2019s default Django settings \u2705 <strong>Better formatting</strong> for template files</p> <h1>\ud83d\udce5 Installation:</h1> <p>\ud83d\udca1 Get it from the <strong>VS Code Marketplace</strong>:<b",
        "id": 2323581,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jb8wie/django_templatehtml_fix",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Django template/html fix",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-14T16:36:50+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey everyone,</p> <p>I&#39;m running a <strong>Django project</strong> on my <strong>MacBook Air M2</strong>, and I\u2019ve noticed that <strong>any command</strong> like <code>runserver</code>, <code>migrate</code>, <code>makemigrations</code>, etc., takes <strong>minutes</strong> to execute. The terminal just hangs for a long time before finally starting.</p> <p>\ud83d\ude80 <strong>Current setup:</strong></p> <ul> <li><strong>Python 3.12.7</strong> installed globally on macOS</li> <li><strong>Python 3.11.5</strong> inside the project&#39;s <code>venv</code></li> <li>Django running within the virtual environment</li> </ul> <p>Has anyone with an <strong>M2 Mac</strong> experienced this issue? Any tips to optimize Python/Django performance on macOS? \ud83e\udd14\ud83d\udcbb</p> <p>Thanks! \ud83d\ude80</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/South-Contest8384\"> /u/South-Contest8384 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1jb86",
        "id": 2323582,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jb86k2/django_is_extremely_slow_on_macbook_air_m2",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Django is extremely slow on MacBook Air M2 \ud83d\ude29",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-14T16:05:49+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>is it good choice to use <code>StreamingHttpResponse</code> for SSE in drf ?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/No-Package3822\"> /u/No-Package3822 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1jb7gjf/streaminghttpresponse/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jb7gjf/streaminghttpresponse/\">[comments]</a></span>",
        "id": 2323036,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jb7gjf/streaminghttpresponse",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "StreamingHttpResponse",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-14T15:17:15+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>good eve reddit, i just wanted to consult what is the best course of action regarding to my deployment of my django project. This is my first time hosting a django app. This project serves as my final year project in uni. here are my options;</p> <p>Option 1: Hosthinger VPS Hosting: using Ubuntu with OpenLiteSpeed For Django</p> <p>Option 2: AWS EC2 or Elastic Beanstalk </p> <p>Option 3: Render or Railway</p> <p>My target is affordability and learning curve because im still a begineer. Also Can you share some docs or guides regarding of my deployment for django? My stack is Django + Mysql.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Inner_Sport3340\"> /u/Inner_Sport3340 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1jb6ayq/deployment_help/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jb6ayq/deployment_help/\">[comments]</a></span>",
        "id": 2322434,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jb6ayq/deployment_help",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "deployment help!",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-14T14:41:52+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I am making an ERP to sell to multiple companies. I am doing a multitenant version, separating the tenants with a tenant model.</p> <p>I did separate the different modules such as crm into different apps, but in the end its still a monolith.</p> <p>Will Django as a monolith be able to handle a business like that in case it is successful? I prefer base Django than DRF, so it would be awesome if it would work. Otherwise I would have to make it with DRF and break the monolith I guess. </p> <p>I am not an expert btw, just been coding for a year and made a couple of apps, including a CRM for a company. It works well because it\u2019s just one company and one module, but idk how its going to be with a lot of companies and a lot of modules.</p> <p>As a side note, I am planning to host on a DigitalOcean droplet and a PostgreSQL thing from them because it\u2019s the only provider I understand the pricing of. Will the provider affect the result as well?</p> <p>Any advic",
        "id": 2322433,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jb5hrw/architectural_decisions_in_django_for_multitenant",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Architectural decisions in Django for multitenant project",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-14T14:37:12+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey everybody. I recently started a Wagtail CMS blog where I frequently write about Django/Wagtail, and web development in general, from the perspective of a junior dev. The latest entry is on the junior dev market. Maybe a few people here could find it interesting:</p> <p><a href=\"https://django-horizons.fly.dev/\">https://django-horizons.fly.dev/</a></p> <p>Let me know what you think!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Acrobatic_Umpire_385\"> /u/Acrobatic_Umpire_385 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1jb5dyj/django_horizons_a_wagtail_blog_ive_been_writing/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jb5dyj/django_horizons_a_wagtail_blog_ive_been_writing/\">[comments]</a></span>",
        "id": 2322435,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jb5dyj/django_horizons_a_wagtail_blog_ive_been_writing",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Django Horizons: a Wagtail blog I've been writing",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-14T13:22:33+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>After years of sprinkling <code>print()</code> statements and logs throughout my Django codebase when debugging, I&#39;ve discovered a much better way that&#39;s been here all along.<br/> Using VS Code launch config for the debugger. I always used it for running the application, but I was testing it out and I discovered you can do the same with the shell command</p> <pre><code>{ &quot;version&quot;: &quot;0.2.0&quot;, &quot;configurations&quot;: [ { &quot;name&quot;: &quot;Django Shell&quot;, &quot;type&quot;: &quot;debugpy&quot;, &quot;request&quot;: &quot;launch&quot;, &quot;program&quot;: &quot;${workspaceFolder}/manage.py&quot;, &quot;args&quot;: [&quot;shell&quot;], &quot;django&quot;: true } ] } </code></pre> <p>Just drop this in your <code>.vscode/launch.json</code> file and select &quot;Django Shell&quot; from the debug dropdown, and use it as you would when running server.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://ww",
        "id": 2321808,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jb3s85/til_you_can_actually_debug_the_django_shell_in_vs",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "TIL: You can actually debug the Django shell in VS Code and it's changed everything",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-14T12:02:39+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/dwaxe\"> /u/dwaxe </a> <br/> <span><a href=\"https://www.djangoproject.com/weblog/2025/mar/14/dsf-member-of-the-month-cory-zue/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jb29xf/dsf_member_of_the_month_cory_zue/\">[comments]</a></span>",
        "id": 2320927,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jb29xf/dsf_member_of_the_month_cory_zue",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "DSF member of the month - Cory Zue",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-14T00:45:25+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>In my app I have a WebSocket connection with a consumer to handle a live-chat and stuff and because in this consumer I have to generate an HTML form with a CSRF token in it, I&#39;m currently passing the CSRF token from the WebSocket to the consumer via their <em>URL</em> if it&#39;s the correct word.</p> <p><strong>Is this a safe thing to do?</strong></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Affectionate-Ad-7865\"> /u/Affectionate-Ad-7865 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1jarlsx/is_it_safe_to_put_a_csrf_token_inside_the_url_of/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jarlsx/is_it_safe_to_put_a_csrf_token_inside_the_url_of/\">[comments]</a></span>",
        "id": 2318188,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jarlsx/is_it_safe_to_put_a_csrf_token_inside_the_url_of",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Is it safe to put a CSRF_TOKEN inside the URL of a websocket-consumer connection?",
        "vote": 0
    }
]