[
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-31T21:52:45+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/dxt0434\"> /u/dxt0434 </a> <br/> <span><a href=\"https://django.wtf/trending/?trending=30\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jofa0k/trending_django_apps_in_march/\">[comments]</a></span>",
        "id": 2453596,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jofa0k/trending_django_apps_in_march",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Trending Django apps in March",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-31T17:58:34+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I am creating an SOP site for my team and am trying to set up a global navbar so I don\u2019t have to keep updating every .html as new processes are added. I am hosting this site on github for now (pending approval from the powers that be to host it internally). I had it working using base.html and home.html while following a tutorial, but kept getting lost as this is not the naming convention I am used to and the content was not displaying on github.I switched to index.html and navbar.html and now I\u2019m getting a blank screen. It\u2019s very possible I missed updating a path or view or something, I\u2019m very new to Django. Let me know if you need any other info!</p> <p><strong>Here&#39;s my index.html:</strong></p> <pre><code>&lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt;&lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;link href=&quot;https://cdn.jsdeliv",
        "id": 2452218,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jo9jve/block_content_not_showing",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Block content not showing",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-31T17:20:21+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;m looking for an alternative to allauth. Allauth is super difficult to customise and I don&#39;t want that to decide how my react apps should look or behave. </p> <p>A graphql based auth system is what I&#39;m trying to do, but the most popular one hasn&#39;t been maintained since 4 years ago. </p> <p>Rest based auth libraries are fine as long as they make it easier to customise and don&#39;t have weird response codes and systems that don&#39;t make sense with modern apps. </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ClientGlittering4695\"> /u/ClientGlittering4695 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1jo8lqj/what_are_the_best_auth_libraries_out_there_for/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jo8lqj/what_are_the_best_auth_libraries_out_there_for/\">[comments]</a></span>",
        "id": 2451654,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jo8lqj/what_are_the_best_auth_libraries_out_there_for",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "What are the best auth libraries out there for django 5? Social auth is needed but not necessary.",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-31T16:00:39+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/czue13\"> /u/czue13 </a> <br/> <span><a href=\"https://www.youtube.com/watch?v=gFnE6a9-kLw\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jo6nq4/video_user_onboarding_tips_and_tricks_for_django/\">[comments]</a></span>",
        "id": 2451088,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jo6nq4/video_user_onboarding_tips_and_tricks_for_django",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "[Video] User Onboarding Tips and Tricks for Django Developers",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-31T14:52:59+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey, I haven&#39;t shared updates on <a href=\"https://django-components.github.io/django-components\">django-components</a> in some time (last was on v0.122). Lots of new things! Some highlights:</p> <p>- <a href=\"https://django-components.github.io/django-components/0.131/concepts/advanced/extensions/\">Extensions</a> - Hook into component lifecycle, pre-/post-process components, add custom URLs, or custom commands.</p> <p>- Performance improvements (see <a href=\"https://github.com/django-components/django-components/releases/tag/0.128\">0.128</a> and <a href=\"https://github.com/django-components/django-components/releases/tag/0.126\">0.126</a>) - 5x perf gain with Rust. Components can now be infinitely nested. Also, we now actively track performance of each release, <a href=\"https://django-components.github.io/django-components/latest/benchmarks\">see here</a>. The aim is to get it to at least as fast as vanilla Django templates.</p> <p>- Add <a href=\"h",
        "id": 2450456,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jo52ef/djangocomponents_v0135_defaults_vuelike_class_and",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "django-components v0.135 - Defaults, Vue-like class and style attributes, and extensions",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-31T14:35:00+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi everyone, Can somebody suggest me a best youtube video for django beginner tutorial video language English </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/sk_hari\"> /u/sk_hari </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1jo4niz/best_django_beginners_tutorial_youtube_video/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jo4niz/best_django_beginners_tutorial_youtube_video/\">[comments]</a></span>",
        "id": 2450457,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jo4niz/best_django_beginners_tutorial_youtube_video",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Best django beginners tutorial youtube video",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-31T14:03:27+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I currently use <code>django.utils.timezone.make_aware(datetime.utcfromtimestamp(&lt;timestamp&gt;)</code> to create timezone-aware datetime objects, but i noticed <code>utcfromtimestamp</code> is depricated, and <code>datetime.fromtimestamp</code> is now recommended.</p> <p>However <code>datetime.fromtimestamp</code> produces an aware datetime object, so it leaves me wondering: is there any benefit to using the django implementation vs the Python-native one?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Vietname\"> /u/Vietname </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1jo3y0b/django_timezone_vs_python_datetime_for/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jo3y0b/django_timezone_vs_python_datetime_for/\">[comments]</a></span>",
        "id": 2449861,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jo3y0b/django_timezone_vs_python_datetime_for",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Django timezone vs python datetime for timezone-aware datetime objects?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-31T13:18:08+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Are there any open-source projects that heavily rely on Celery Canvas workflows for task orchestration?</p> <p>In this DjangoCon talk (<a href=\"https://youtu.be/VuONiF99Oqc?si=r2UcPG4oDD2k7W1L\">https://youtu.be/VuONiF99Oqc?si=r2UcPG4oDD2k7W1L</a>), the presenter advises against using Celery Canvas based on their experience. However, since I\u2019m already using it, I\u2019d like to review some open-source projects that successfully implement Celery Canvas to better understand its best practices and potential pitfalls.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/typical_boring_guy\"> /u/typical_boring_guy </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1jo2z5i/looking_for_opensource_projects_that_use_celery/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jo2z5i/looking_for_opensource_projects_that_use_celery/\">[comments]</a></span>",
        "id": 2449389,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jo2z5i/looking_for_opensource_projects_that_use_celery",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Looking for Open-Source Projects That Use Celery Canvas for Task Orchestration",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-31T09:05:12+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I have been trying to deploy my Django app for a week now. I tried railway -&gt; was getting errors there. Then moved to AWS. Now i am trying to deploy using EB. I have already set up my RDS. But I am unable to setup EB. I am following w3 tutorial to deploy. </p> <p>I would really appreciate if someone could connect and help me with this. </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Dangerous-Basket-400\"> /u/Dangerous-Basket-400 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1jnywkx/i_have_exhausted_all_my_options_to_deploy_my/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jnywkx/i_have_exhausted_all_my_options_to_deploy_my/\">[comments]</a></span>",
        "id": 2447942,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jnywkx/i_have_exhausted_all_my_options_to_deploy_my",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "I have exhausted all my options to deploy my Django App on AWS EB, someone please chip in for help",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-31T08:37:24+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>A great article to explore about the <strong>How Django signals works.</strong></p> <blockquote> <p><a href=\"https://medium.com/jungletronics/how-django-signals-work-81dc30d0dad5\">https://medium.com/jungletronics/how-django-signals-work-81dc30d0dad5</a> </p> </blockquote> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/developer-dubeyram\"> /u/developer-dubeyram </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1jnyk43/python_django_signal/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jnyk43/python_django_signal/\">[comments]</a></span>",
        "id": 2447943,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jnyk43/python_django_signal",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Python Django Signal",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-31T05:27:10+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey everyone,</p> <p>I\u2019m building a Django app for a car booking service, and I\u2019m trying to design a clean reservation + payment flow that\u2019s flexible and user-friendly.</p> <p>What I have: \u2022 A Reservation model that holds all key info (vehicle, route, customer, pricing, status, etc.) \u2022 A Rate model that links a vehicle and route (each with one-way and round-trip prices) \u2022 When a user browses the site, they see route/vehicle combinations with prices</p> <p>What I want to build: \u2022 When a user clicks \u201cBook Now\u201d next to a specific rate (say, SUV from Airport to Hotel): \u2022 They\u2019re taken to a pre-filled reservation form with that vehicle and rate \u2022 They fill in customer info, passenger count, special requests, flight info, etc. \u2022 After submitting, they choose to either: \u2022 Pay now via Stripe \u2022 Save their card and pay later </p> <p>I\u2019m not using Stripe Checkout directly. Everything is tied to the Reservation object first, and then payment is triggered.</p> <p",
        "id": 2447149,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jnw1t2/building_a_car_service_website",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Building a car service website",
        "vote": 0
    }
]