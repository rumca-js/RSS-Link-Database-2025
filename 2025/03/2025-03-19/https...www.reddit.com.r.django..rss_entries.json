[
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-19T23:23:50+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Algu\u00e9m sabe como resolver esse problema? Sou j\u00fanior e estou tentando implementar login com o Google.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Electronic_Prompt799\"> /u/Electronic_Prompt799 </a> <br/> <span><a href=\"https://dpaste.com/AQJRELD9Q\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jfaza8/dpaste_multipleobjectsreturned_at/\">[comments]</a></span>",
        "id": 2363008,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jfaza8/dpaste_multipleobjectsreturned_at",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "dpaste: MultipleObjectsReturned at /accounts/google/login/, by django-dpaste-agent",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-19T18:36:41+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi everyone,</p> <p>I&#39;m currently working on improving my portfolio and looking to build a solid full-stack web development project that I can showcase on my resume. I\u2019m using <strong>React.js</strong> for the frontend and <strong>Django/Django Rest Framework</strong> for the backend.</p> <p>I want something that&#39;s more than just a basic CRUD app \u2014 something real-world, scalable, and impressive to potential employers. Ideally, it should include things like user authentication, API integration, and maybe some advanced features (real-time updates, admin dashboard, etc.).</p> <p>Any ideas or suggestions would be super appreciated! Bonus points if it\u2019s something that allows room for adding my own twist/features later.</p> <p>Thanks in advance!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/sk_hari\"> /u/sk_hari </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1jf46lw/can_someone_suggest_a_g",
        "id": 2361211,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jf46lw/can_someone_suggest_a_good_full_stack_web",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Can someone suggest a good full stack web development project idea for my resume? (React.js + Django)",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-19T17:41:19+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><pre><code>class ShippingAddress(models.Model): user = models.ForeignKey(User, on_delete=models.CASCADE, null=True, blank=True) # one user can have multiple shipping addresses thus ForeignKey and not OneToOne Field shipping_phone = models.CharField(max_length=10) shipping_full_name = models.CharField(max_length=200) shipping_email = models.EmailField() shipping_address1 = models.CharField(max_length=200) shipping_address2 = models.CharField(max_length=200, null=True, blank=True) shipping_city = models.CharField(max_length=200) shipping_state = models.CharField(max_length=200, null=True, blank=True) shipping_zipcode = models.CharField(max_length=200, null=True, blank=True) shipping_country = models.CharField(max_length=200) </code></pre> <p>I have this form and in some view i am doing this </p> <pre><code>shipping_user, created = ShippingAddress.objects.get_or_create(user=request.user) </code></pre> <p>Now that i am only passing user and some other field",
        "id": 2360654,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jf2tt5/how_does_get_or_create_behave_in_case_of_null_not",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "how does get_or_create() behave in case of null not being true",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-19T12:04:41+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I was wondering if there&#39;s a way to make the JavaScript LSP work inside the <code>&lt;script&gt;</code> tags in Django templates.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/gabrielpistore_\"> /u/gabrielpistore_ </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1jeve51/js_lsp_inside_django_templates_script_tag/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jeve51/js_lsp_inside_django_templates_script_tag/\">[comments]</a></span>",
        "id": 2357792,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jeve51/js_lsp_inside_django_templates_script_tag",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "JS LSP inside Django Templates Script Tag",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-19T11:31:45+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/dwaxe\"> /u/dwaxe </a> <br/> <span><a href=\"https://www.djangoproject.com/weblog/2025/mar/19/django-52-rc1/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jeuu38/django_52_release_candidate_1_released/\">[comments]</a></span>",
        "id": 2357304,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jeuu38/django_52_release_candidate_1_released",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Django 5.2 release candidate 1 released",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-19T10:06:33+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Can somebody tell me the best resources to learn Django other than djangoproject </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/sk_hari\"> /u/sk_hari </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1jetjzy/best_source_to_learn_django/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jetjzy/best_source_to_learn_django/\">[comments]</a></span>",
        "id": 2356845,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jetjzy/best_source_to_learn_django",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Best source to learn django",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-19T08:31:33+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/kankyo\"> /u/kankyo </a> <br/> <span><a href=\"https://github.com/boxed/okrand\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jesbju/okrand_140_released/\">[comments]</a></span>",
        "id": 2356453,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jesbju/okrand_140_released",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Okrand 1.4.0 released",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-19T02:47:13+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi all! </p> <p>I have a Django app hosted on Google Cloud Run that upon logging in, sets a sessionid and csrftoken in the browser cookies. In my frontend Next app, which I am currently running locally, I redirect to an authenticated page after successful login. However, the cookies are not being set correctly after the redirect, they are empty. After making the login call I can see the cookies in the Application DevTools console, but when I refresh or redirect they are empty. It works when running my Django app locally, but not when it is hosted on Cloud Run.</p> <p>These are my cookie settings in my Django settings.py:</p> <pre><code>SESSION_COOKIE_SAMESITE = &#39;None&#39; CSRF_COOKIE_SAMESITE = &#39;None&#39; SESSION_COOKIE_SECURE = True CSRF_COOKIE_SECURE = True CSRF_COOKIE_HTTPONLY = False CORS_ALLOW_CREDENTIALS = True </code></pre> <p>My <code>CORS_ALLOWED_ORIGINS</code> and <code>CSRF_TRUSTED_ORIGINS</code> includes my local Next app: <code>h",
        "id": 2355101,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jen8lh/django_next_cookies_not_being_set_when_app_is",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Django + Next cookies not being set when app is hosted",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-19T01:29:06+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hello! I have a NextJS frontend and a django backend - with my django backend communicating directly with the NextJS server-side. My Django server is CSRF-protected, so I need to send a CSRF cookie / header in my requests from NextJS server to Django.</p> <p>My thinking was that this <code>csrfToken</code> could be retrieved when the user authenticates - getting both <code>sessionId</code> and <code>csrfToken</code>. However, it looks like by default allauth `/login` and `/signup` endpoints are CSRF-protected themselves? To get around this, I explicitly created a <code>getCsrf</code> view in Django, like so</p> <pre><code>class CSRFToken(APIView): def get(self, request): token = get_token(request) response = JsonResponse({&quot;csrfToken&quot;: token}) response.set_cookie(&quot;csrftoken&quot;, token) return response </code></pre> <p>and in the NextJS serverside, I call this view when the user loads the website initially - storing it in a singleton c",
        "id": 2354836,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jelqcs/confusion_around_csrf_tokens_and_django_allauth",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Confusion around CSRF Tokens and Django All-Auth",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-03-19T00:20:11+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I read some article about drf vs django ninja and find weird, If schema pydantic is better in term performance and validation, why drf implement serialization? Is there the info that I miss? </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Adorable_Money7371\"> /u/Adorable_Money7371 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1jekc2g/why_drf_not_implemented_schema_into_their_api/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jekc2g/why_drf_not_implemented_schema_into_their_api/\">[comments]</a></span>",
        "id": 2354614,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jekc2g/why_drf_not_implemented_schema_into_their_api",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Why drf not implemented schema into their api rather than use serialization who have performance issue?",
        "vote": 0
    }
]