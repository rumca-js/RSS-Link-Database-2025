[
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-04-05T15:05:35+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>One of my biggest pains with Django templates is that there&#39;s no way to explicitly define which inputs a template accepts. There&#39;s nothing to tell you if you forgot a variable, or if the variable is of a wrong type.</p> <p>When you&#39;re building anything remotely big, or there&#39;s more people on the team, this, well, sucks. People write spaghetti code, because they are not aware of which variables are already in the template, or where the variables are coming from, or if the variables will change or not.</p> <p>I made a prototype to address this some time ago in <a href=\"https://pypi.org/project/django-components/\">django-components</a>, but it&#39;s only now (v0.136) that it&#39;s fully functional, and I&#39;m happy to share it.</p> <p>When you write a component (equivalent of a template), you can define the inputs (args, kwargs, slots) that the component accepts.</p> <p>You can use these for type hints with mypy. This also serves as the",
        "id": 2491583,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1js5hwe/writing_selfdocumenting_templates_with_pydantic",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Writing self-documenting templates with Pydantic and django-component v0.136",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-04-05T11:06:30+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>So like the title says, she insisted Django was just a backend framework and definitely not a fullstack framework. I disagreed. Strongly.</p> <p>Because with Django + HTMX, you can absolutely build full dynamic websites without touching React or Vue. Add some CSS or a UI lib, and boom: a powerful site with a database, Django admin, and all the features you want.</p> <p>She refused to believe me. We needed an arbitrator. I suggested ChatGPT because I really thought it would prove that I was right.</p> <p>It did not.</p> <p>ChatGPT said \u201cDjango is a backend framework.\u201d </p> <p>I got so mad!</p> <p>I showed my friend websites I had built entirely with Django. She inspected them then said &quot;Yeah these are like so nice, but like I totally bet they were hell to build...&quot; Then she called me a masochistic psychopath! </p> <p>I got even more mad.</p> <p>I canceled all my plans, sacrificed more sleep than I would ever admit to my therapist, and starte",
        "id": 2490338,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1js10gx/i_used_to_have_a_friend_then_we_talked_about",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "I used to have a friend. Then we talked about Django. Also I made a Django + HTMX Tutorial Series for Beginners and Nonbelievers",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-04-05T07:32:49+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;ve had this question in my mind for a long time now. As a backend developer, I need to make APIs and handle data, but how can we showcase those skills through a portfolio? I don&#39;t have a team so I also need to make the frontends of my projects, I&#39;m trying to focus more on the backends though. But is that the way to do it? Should we just make the APIs and stuff and leave the frontend? Should we do what i&#39;m doing right now? Do i need to deploy those projects? If i do then do i need to focus more on deployment than the full stack?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Aayan_Tanvir\"> /u/Aayan_Tanvir </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1jry3zr/what_makes_a_good_portfolio_for_a_backend/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jry3zr/what_makes_a_good_portfolio_for_a_backend/\">[comments]</a></span>",
        "id": 2489577,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jry3zr/what_makes_a_good_portfolio_for_a_backend",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "What makes a good portfolio for a backend developer?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-04-05T06:38:27+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey everyone,</p> <p>I&#39;m planning to build a <strong>Project Management System</strong> using <strong>Django</strong>, and I\u2019m looking for any good <strong>open-source projects, tutorials, or GitHub repos</strong> that I can refer to.If you&#39;ve come across anything useful or built something similar, I&#39;d really appreciate the references!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Roronoa_ZOL0\"> /u/Roronoa_ZOL0 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1jrxbpz/looking_for_references_to_build_a_project/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jrxbpz/looking_for_references_to_build_a_project/\">[comments]</a></span>",
        "id": 2489336,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jrxbpz/looking_for_references_to_build_a_project",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Looking for References to Build a Project Management System Using Django & React",
        "vote": 0
    }
]