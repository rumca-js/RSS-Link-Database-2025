[
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-04-07T15:33:19+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I am having trouble deciding between two methods of creating my models for my Django app, this is an app where users can create, track, and manage workouts. The problem Is I&#39;m not sure whether to extend the user model, and have each user have a workouts field, or if I should add an &quot;owners&quot; field to the workouts model, and manage the user&#39;s workouts that way. What would be considered best practice? What are the Pros and cons of each approach?</p> <p>first approach:</p> <pre><code>class UserProfile(models.Model): user = models.OneToOneField(User, on_delete=models.CASCADE) workouts = models.ManyToManyField(workouts.Workout, blank=True) </code></pre> <p>second approach:</p> <pre><code>class Workout(models.Model): # rest of fields owners = models.ManyToManyField(User) </code></pre> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ZookeepergameNo7705\"> /u/ZookeepergameNo7705 </a> <br/> <span><a href=\"htt",
        "id": 2503382,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jto51z/how_should_model_relationships_be_set",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "How should model relationships be set?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-04-07T15:31:17+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/kankyo\"> /u/kankyo </a> <br/> <span><a href=\"https://kodare.net/2025/02/15/boundfield-vs-iommi.html\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jto3dv/boundfield_vs_iommi/\">[comments]</a></span>",
        "id": 2503383,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jto3dv/boundfield_vs_iommi",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "BoundField vs iommi",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-04-07T09:28:16+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Stripe is not supported in my country</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Aayan_Tanvir\"> /u/Aayan_Tanvir </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1jth65f/is_payoneer_good_for_payment_integration_with/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jth65f/is_payoneer_good_for_payment_integration_with/\">[comments]</a></span>",
        "id": 2501219,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jth65f/is_payoneer_good_for_payment_integration_with",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Is Payoneer good for payment integration with Django?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-04-07T06:08:28+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi, all,<br/> I am learning django and want to use django as the framework to develop a web application, the application allows user to sign up, take a trial with a credit card and then after certain days(for example 7 days), start a monthly membership. subcribers can upload their files and my app(another seperator server) will process the files and return the results to the subcribers. </p> <p>I am looking for the following packages, prefer to be opensource, so I can change and integrate them:<br/> 1. user management -- allow sign up with email, with credit card, membership management, subscriber can cancel the subcription, login and logout, forget password.<br/> 2. payment package, monthly auto charges the membership.</p> <p>These two features are common packages, please recommend available opensource package, so there is no need to build it from scratch. </p> <p>Thank you very much! </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https",
        "id": 2500423,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jtehnj/can_someone_recommend_django_opensource_user",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Can someone recommend django opensource user management and payment packages?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-04-07T02:20:23+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>&quot;Free stuff is always a good thing\u201d -</p> <p>While planning the deployment in the testing phase for this video-sharing platform, I had this idea of keeping the cloud infrastructural overhead to an absolute minimum\u2014at least until the core codebase is fully validated.</p> <p>Knowing that the internet is full of cloud providers handing out free credits or generous free tiers\u2014and being a bit of a normie myself\u2014I was naturally inclined to host my platform on Amazon Web Services (AWS) at first. It just seemed like the thing everyone was doing. But after a few Reddit searches, I stumbled upon horror stories of sudden overnight bill surges, tight free tier limitations, and AWS\u2019s steep initial learning curve\u2014which made me reconsider and start exploring alternative options.</p> <p>After scouring the internet for other cloud providers offering free credits or tiers, I came across a few sensible options. The most practical of them all was the GitHub Student",
        "id": 2499759,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jtaqdr/testing_phase_cloud_infrastructure_cost_setup",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "\ud83d\udea8 Testing Phase \u2013 Cloud Infrastructure Cost & Setup ( www.saketmanolkar.me )",
        "vote": 0
    }
]