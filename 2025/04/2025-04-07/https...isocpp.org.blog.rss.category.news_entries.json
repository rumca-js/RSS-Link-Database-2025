[
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-04-07T19:58:23+00:00",
        "description": "<p>\n\t<img alt=\"RaymondChen_5in-150x150.jpg\" src=\"https://isocpp.org/files/img/RaymondChen_5in-150x150.jpg\" style=\"width: 150px; margin: 10px; float: right;\" />The C++ standard library provides various inserters like <code data-end=\"72\" data-start=\"57\">back_inserter</code>, <code data-end=\"90\" data-start=\"74\">front_inserter</code>, and <code data-end=\"106\" data-start=\"96\">inserter</code>, but for associative containers like <code data-end=\"154\" data-start=\"144\">std::map</code>, only <code data-end=\"171\" data-start=\"161\">inserter</code> is available, requiring a hint. However, if elements arrive in an unpredictable order, providing a hint could be inefficient, so a custom inserter that performs unhinted insertion can be a useful alternative.</p>\n<blockquote>\n\t<h3>\n\t\t<a href=\"https://devblogs.microsoft.com/oldnewthing/20250129-00/?p=110817\">How do I create an inserter iterator that does unhinted insertion into an associative container like <code>std::map</code>?&nbsp;</a></h3>\n\t<p>\n\t\tby",
        "id": 2506020,
        "language": null,
        "link": "https://isocpp.org//blog/2025/04/how-do-i-create-an-inserter-iterator-for-unhinted-insertion-into-stdmap-ray",
        "manual_status_code": 0,
        "page_rating": 29,
        "page_rating_contents": 90,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 314,
        "source_url": "https://isocpp.org/blog/rss/category/news",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "How do I create an inserter iterator for unhinted insertion into std::map? -- Raymond Chen",
        "vote": 0
    }
]