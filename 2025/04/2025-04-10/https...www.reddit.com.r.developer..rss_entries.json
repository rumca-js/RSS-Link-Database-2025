[
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-04-10T21:45:50+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey everyone, I\u2019m working on a macOS coding app that integrates AI tools directly into the dev experience (Starting off with Xcode will work with others to) \u2014 not just code suggestions, but tools that understand what you\u2019re building and help speed up the process.</p> <p>Some features I\u2019ve started building so far:</p> <p>\u2318K command palette for fast access to tools</p> <p>Explain selected code or functions</p> <p>AI-powered refactoring, debugging, and performance tips</p> <p>Time complexity analysis</p> <p>Regex helper + code snippet generation</p> <p>Minimal, focused UI for clean dev workflow</p> <p>A UI library where you can browse components and auto-generate the code for your project</p> <p>A whiteboard-style tool for dragging and using tools more intuitively (especially helpful on smaller screens)</p> <p>Would love to know:</p> <p>What actual AI-powered features would save you time while coding?</p> <p>What\u2019s missing from current tools like GitHub",
        "id": 2531003,
        "language": null,
        "link": "https://www.reddit.com/r/developer/comments/1jw9q2c/what_ai_coding_tools_or_features_would_actually",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 508,
        "source_url": "https://www.reddit.com/r/developer/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "What AI coding tools or features would actually be useful to you?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-04-10T18:39:16+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I\u2019ve been working as a developer for just under a year now. For the past 9\u201310 months, I\u2019ve been working on the same codebase at my job. Over time, I got really comfortable with it. I knew where things lived, how features were usually added, which utility functions to rely on, and how the whole architecture fit together. Debugging got easier because the patterns were familiar and the groundwork was already done.</p> <p>Then I decided to build something on my own.</p> <p>It took way more time than I expected. Not because I was stuck \u2014 I got things to work \u2014 but everything just moved slower. Setting up basic stuff like project structure, dependencies, and common features wasn\u2019t as smooth. I found myself second-guessing things I thought I already knew.</p> <p>That\u2019s when I started to realize I might\u2019ve been getting better at the <em>codebase</em>, not the <em>framework</em>. Like maybe I was improving 10% at the framework itself, but 50% at navigating th",
        "id": 2529305,
        "language": null,
        "link": "https://www.reddit.com/r/developer/comments/1jw5ae0/ive_been_working_on_the_same_codebase_for_months",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 508,
        "source_url": "https://www.reddit.com/r/developer/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "I\u2019ve been working on the same codebase for months \u2014 starting my own project felt way harder than I expected",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-04-10T18:19:15+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I work in a PBC as Software engineer -- Networking domain. so the code stack is completely on C and C++ only!!!</p> <p>We are developing a new protcol/feature and its a very very big one with lots lots of functions, structure, Queues, etc etc... We use a different kind of data structures mostly like Doubly circular LL, LL, AvlTrees and many etc...</p> <p>As its a very big code stack, in old features we have memory dumps, logging of different kind of types. Few logs cant be enabled in release build, so we have to maintain a very less number of logs jn release build to save space.</p> <p>But this time we are planning to comeup with something out of box, which will ease us while debugging an issue. </p> <p>I would like to know, what other methods were being used in the industry where we deal with very big code stack other than Memory dumps, enabling Important Logs...</p> <p>TIA</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddi",
        "id": 2529306,
        "language": null,
        "link": "https://www.reddit.com/r/developer/comments/1jw4szj/need_ideas_for_methods_which_ease_us_while",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 508,
        "source_url": "https://www.reddit.com/r/developer/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Need ideas for methods which ease us while debugging issues later on..",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-04-10T13:38:30+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey everyone, I just started classes at university as a computer engineering undergrad, and was wondering how a macbook air could handle my studies and in the future workload. My current doubt is if macOS is good for coding in C and other languages alike, because I see people leaning towards Linux and neglecting Windows but I dont understand the key differences between macOS and Linux. Can anyone help me?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/theofps\"> /u/theofps </a> <br/> <span><a href=\"https://www.reddit.com/r/developer/comments/1jvy4jo/are_macbooks_good_for_developers/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/developer/comments/1jvy4jo/are_macbooks_good_for_developers/\">[comments]</a></span>",
        "id": 2531004,
        "language": null,
        "link": "https://www.reddit.com/r/developer/comments/1jvy4jo/are_macbooks_good_for_developers",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 508,
        "source_url": "https://www.reddit.com/r/developer/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Are macbooks good for developers?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-04-10T11:24:03+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I\u2019m all about API-first development, but sometimes setting up form endpoints for simple apps feels like busywork \u2014 define routes, add logic, handle validation, send email, store stuff, etc.</p> <p>Instead, I tried <a href=\"http://formflow.pynex.space\">Formflow</a>, which is kind of like building your own mini-backend via a visual flow. You:</p> <ul> <li>Add an input node (your form fields)</li> <li>Chain it to action nodes (email, storage, external APIs)</li> <li>Set up logic branches if needed</li> </ul> <p>It gives you an <strong>instant POST endpoint</strong>, ready to call from any frontend. No infrastructure, no auth, no deploy step.</p> <p>Now I just design the logic visually, and use <code>fetch()</code> from my form. I even integrated Stripe webhook triggers in a test project. For devs who like clean workflows but hate boilerplate, this hits a sweet spot.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/H",
        "id": 2525673,
        "language": null,
        "link": "https://www.reddit.com/r/developer/comments/1jvvikw/i_just_wanted_a_clean_api_for_my_form_without",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 508,
        "source_url": "https://www.reddit.com/r/developer/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "I just wanted a clean API for my form \u2014 without wiring up a backend",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-04-10T11:13:20+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>As a developer, what do you personally struggle with the most? (Whether it&#39;s technical stuff, motivation, burnout, imposter syndrome\u2014anything.)</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/lazybear3275\"> /u/lazybear3275 </a> <br/> <span><a href=\"https://www.reddit.com/r/developer/comments/1jvvc0n/struggles_of_a_developer/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/developer/comments/1jvvc0n/struggles_of_a_developer/\">[comments]</a></span>",
        "id": 2531005,
        "language": null,
        "link": "https://www.reddit.com/r/developer/comments/1jvvc0n/struggles_of_a_developer",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 508,
        "source_url": "https://www.reddit.com/r/developer/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Struggles of a developer",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-04-10T08:28:47+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>So, if someone develops apps for Apple&#39;s iOS, macOS, tvOS, watchOS, and visionOS, what should we call them? Just a developer, or something more specific?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/shahbazahmadkhan\"> /u/shahbazahmadkhan </a> <br/> <span><a href=\"https://www.reddit.com/r/developer/comments/1jvsy8r/developer_or_something_else/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/developer/comments/1jvsy8r/developer_or_something_else/\">[comments]</a></span>",
        "id": 2531006,
        "language": null,
        "link": "https://www.reddit.com/r/developer/comments/1jvsy8r/developer_or_something_else",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 508,
        "source_url": "https://www.reddit.com/r/developer/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Developer or something else ?",
        "vote": 0
    }
]