[
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-04-12T20:17:41+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>As a traditional Rails dev, I decided a few months ago that I wanted to give Django a try and see how I liked it. I had a small app idea from my university days, and decided that it was a great opportunity to learn Django. I stumbled across Django REST Framework and decided to give it a try.</p> <p>It ended up being a huge learning experience. I spent way more time than I&#39;d like to admit figuring out authentication, as I for some reason decided to go with session auth over token auth (this was one of the worst decisions I made LOL). I almost gave up, and was sorely missing Rails. But I kept at it. I integrated with Celery for async background tasks, and I really enjoyed that experience. Eventually, after the app was built out and it came time to deploy, I ended up transitioning away from Celery and using Google Cloud Tasks instead.</p> <p>Deployment itself was super simple with Google Cloud Run, and I was really surprised overall with how much DRF",
        "id": 2544394,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jxqdd7/tried_django_for_the_first_time_ended_up_building",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Tried Django for the first time, ended up building and releasing a product",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-04-12T17:50:24+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Guys, much thanks to responding to my other thread I&#39;ve been reading this thread on whether i can repurpose django-unfold.</p> <p>Today I&#39;ve more important questions I need to ask for going to production. It&#39;s basically a two part question:</p> <ol> <li><p>Which is best for taking an existing postgres database and generating CRUD api with authorization (I feel like Casdoor is the answer)?</p></li> <li><p>Which setup is best for performance, is it synchronous DRF with gevent + monkey patching or django-ninja?</p></li> </ol> <p>These two questions influence each other and I don&#39;t have enough experience to discern which is best for my case. Obviously Django or DRF is the mature and stable setup but this thread below raised some important questions which I couldn&#39;t find solid answers.</p> <p>First question:</p> <p><a href=\"https://old.reddit.com/r/django/comments/16k2vgv/lets_talk_about_djangoninja/\">https://old.reddit.com/r/django/co",
        "id": 2543703,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jxn2ky/whats_the_consensus_on_djangoninja_extras_vs_drf",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "whats the consensus on django-ninja + extras vs DRF?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-04-12T12:00:38+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi guys, i have just build biolerplate for django and react jsx . The product has login, signup, forgot password and Not found page , feel free to download the code from github . This is good for people who keep building new products and they dont want to struggle coding the bording features over and over .</p> <p>Please if you have any issues let me know</p> <p><a href=\"https://github.com/otman-ai/django-react-login-signup\">code</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/AvocadoRelevant5162\"> /u/AvocadoRelevant5162 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1jxfopp/django_and_react_jsx_boilerplate/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jxfopp/django_and_react_jsx_boilerplate/\">[comments]</a></span>",
        "id": 2542015,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jxfopp/django_and_react_jsx_boilerplate",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Django and React jsx Boilerplate",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-04-12T06:08:02+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>the django unfold i understand is for admins but i just need to serve a dashboard to end users, since its a saas (b2c), is that possible?</p> <p>also im very new to django in general, i hear that DRF doesn&#39;t support asynchronous. How much of an impact will that have and in what scenarios?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Just_Lingonberry_352\"> /u/Just_Lingonberry_352 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1jxaovb/new_to_djangocan_i_repurpose_djangounfold_for_end/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1jxaovb/new_to_djangocan_i_repurpose_djangounfold_for_end/\">[comments]</a></span>",
        "id": 2540491,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jxaovb/new_to_djangocan_i_repurpose_djangounfold_for_end",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "new to django....can i repurpose django-unfold for end users",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-04-12T02:23:06+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I\u2019m working on building a structured catalog system for vintage and historical trading cards \u2014 something like \u201cSports Reference meets a collector-grade checklist and tagging engine.\u201d</p> <p>This isn\u2019t just a hobby sketch \u2014 I\u2019ve already written a formal standards doc to govern the structure and logic. The schema has been mapped out in a spreadsheet, and I\u2019ve built and tested a good bit of this in Google Sheets, including multiple linked tables and with the largest table housing about 25,000 rows of &quot;generated&quot; data. There\u2019s probably 100+ hours in it already (and that might be conservative).</p> <p>I\u2019m not a developer, but I\u2019m comfortable thinking in systems, and I\u2019m pretty good at solving problems by reading docs, using AI, or following tutorials. For context:</p> <ul> <li>I understand data modeling, naming conventions, and relational structures really well</li> <li>I\u2019ve dabbled in JavaScript, touched SQL briefly, and built basic websites ba",
        "id": 2539996,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1jx707u/nondev_tackling_a_structured_data_project_hoping",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Non-dev tackling a structured data project \u2014 hoping this is the right place to learn + ask",
        "vote": 0
    }
]