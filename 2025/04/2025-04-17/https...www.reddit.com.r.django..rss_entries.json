[
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-04-17T18:39:08.748271+00:00",
        "date_dead_since": null,
        "date_published": "2025-04-17T18:30:47+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>When I first started learning Django, there were a few features I kept skipping because they felt too complex or unnecessary at the time. One of those was <strong>middleware</strong>. It seemed like one of those \u201cadvanced\u201d topics I could worry about later.</p> <p>But that changed quickly.</p> <p>I got a new project \u2014 a <strong>Student Information System</strong> \u2014 with <strong>role-based permissions</strong>. Suddenly, skipping middleware wasn\u2019t an option anymore. I couldn\u2019t just manually check permissions in every view. It was inefficient, messy, and just didn\u2019t scale. The more views I added, the more complex things got.</p> <p>That\u2019s when I realized: <strong>middleware</strong> wasn\u2019t something to avoid \u2014 it was something to embrace.</p> <p>In this post, I\u2019ll walk you through <strong>what middleware is</strong>, <strong>how it works</strong>, and show you a <strong>real-world example</strong> based on my own experience. We\u2019ll build a simple <strong>",
        "id": 2581754,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1k1k28w/django_middleware_explained_a_beginnerfriendly",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Django Middleware Explained: A Beginner-Friendly Guide",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-04-17T16:28:44.400764+00:00",
        "date_dead_since": null,
        "date_published": "2025-04-17T15:57:16+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I use Nextjs + django Social login with allauth works perfectly in local dev mode, </p> <p>redirect_url is 127.0.0.1:3000/social/google which is the frontend and then it sends api to validate the user with code and state. </p> <p>It does not work in the production..</p> <p>I set both production and the local dev address for the redirect_url </p> <p>prod : <a href=\"https://example.com/social/google\">https://example.com/social/google</a> dev: <a href=\"http://127.0.0.1:3000/social/google\">http://127.0.0.1:3000/social/google</a></p> <p>What should I do..? Why it does not work..?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/SnooCauliflowers8417\"> /u/SnooCauliflowers8417 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1k1gaju/social_login_with_allauth_doesnt_work_in/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1k1gaju/social_login_with_allauth_doesnt_work_in/\">",
        "id": 2580817,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1k1gaju/social_login_with_allauth_doesnt_work_in",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "social login with allauth doesnt work in production..",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-04-17T16:28:44.683162+00:00",
        "date_dead_since": null,
        "date_published": "2025-04-17T15:22:00+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I had some django application that i wanted to host on GoDaddy, there was already a project that was created in a no-code platform but i now wish to change so i created a subdomain in django. I&#39;m pretty green on hosting and everything so i don&#39;t exactly know much. I would appreciate a recommendation on videos or articles that might help me. Additionally, is GoDaddy the best platform to host a Django project? I would also appreciate advice on the same.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/SadExpression5058\"> /u/SadExpression5058 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1k1fg37/hosting_a_django_application/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1k1fg37/hosting_a_django_application/\">[comments]</a></span>",
        "id": 2580818,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1k1fg37/hosting_a_django_application",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Hosting a django application",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-04-17T13:56:25.328708+00:00",
        "date_dead_since": null,
        "date_published": "2025-04-17T13:25:10+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/ashemark2\"> /u/ashemark2 </a> <br/> <span><a href=\"https://inverted-tree.com/using-django-channels-to-build-real-time-applications/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1k1cpzo/learn_django_channels_with_pure_python/\">[comments]</a></span>",
        "id": 2579308,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1k1cpzo/learn_django_channels_with_pure_python",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Learn django channels with pure python",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-04-17T09:24:25.312594+00:00",
        "date_dead_since": null,
        "date_published": "2025-04-17T09:20:41+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I am using django-elasticsearch-dsl module. I preferably want to use Completion Field so that the suggestions are pretty quick but the issue i am facing is they use Tries or something similar and just matches Prefix. So say i have a item that goes like &quot;Wireless Keyboard&quot; and i am typing &quot;Keyboard&quot; in the search bar, I don&#39;t get this as a suggestion.</p> <p>How can i improve that? Is using a TextField with edge-ngram analyzer the only thing i can do? Or I can do something else to achieve similar result as well. </p> <p>Also I am using ngram-analyzer with min as 4 and max len as 5, and fuzziness = 1 (for least tolerance) for my indexing and searching both. But this gives many false positives as well. Like &#39;roller&#39; will match for &#39;chevrolet&#39; because they both have &#39;rol&#39; as a token and fuzziness allows some extra results as well. I personally feel it&#39;s ok because i am getting the best matches first. But",
        "id": 2577503,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1k18ilz/trying_to_implement_autocompletion_using",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Trying to implement autocompletion using ElasticSearch",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-04-17T09:24:25.433838+00:00",
        "date_dead_since": null,
        "date_published": "2025-04-17T09:06:33+00:00",
        "description": "&#32; submitted by &#32; <a href=\"https://www.reddit.com/user/dwaxe\"> /u/dwaxe </a> <br/> <span><a href=\"https://www.djangoproject.com/weblog/2025/apr/17/run-your-tests-against-django-main/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1k18bwu/run_your_tests_against_djangos_main/\">[comments]</a></span>",
        "id": 2577504,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1k18bwu/run_your_tests_against_djangos_main",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Run your tests against Django's main!",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-04-17T09:24:25.550754+00:00",
        "date_dead_since": null,
        "date_published": "2025-04-17T08:48:15+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>For those using cookie-based auth \u2014 do you still implement CSRF protection even with HttpOnly + SameSite=Strict cookies? and Why?</p> <p>Are there any edge cases I should be aware of?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Intelligent-Fly5261\"> /u/Intelligent-Fly5261 </a> <br/> <span><a href=\"https://www.reddit.com/r/django/comments/1k1834m/im_exploring_cookiebased_auth_with_django_drf/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/django/comments/1k1834m/im_exploring_cookiebased_auth_with_django_drf/\">[comments]</a></span>",
        "id": 2577505,
        "language": null,
        "link": "https://www.reddit.com/r/django/comments/1k1834m/im_exploring_cookiebased_auth_with_django_drf",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 491,
        "source_url": "https://www.reddit.com/r/django/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "I'm exploring cookie-based auth with Django + DRF",
        "vote": 0
    }
]