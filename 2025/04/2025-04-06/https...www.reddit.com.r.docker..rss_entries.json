[
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-04-06T17:11:59+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Right now I am most GPU-endowed on an <code>Ubuntu Server</code> machine, running standard <code>docker</code> focusing on containers leveraged through <code>docker-compose.yml</code> files.</p> <p>The chief beast among those right now is <code>ollama:rocm</code></p> <p>I am seeing <code>Docker Model Runner</code> and eager to give that a try, since it seems like <code>Ollama</code> might be the testing ground, and <code>Docker Model Runner</code> could be where the reliable, tried-and-true LLMs reside as semi-permanent fixtures.</p> <p>But is all this off in the future? It seemed promoted as if it were today-now.</p> <p>Also: I see mention of GPUs, but not which lines, and what compatibility looks like, nor what performance comparisons there are between those.</p> <p>As I work to faithfully <code>rtfm</code> ... have I missed something obvious?</p> <p>Are <code>Ubuntu Server</code> implementations running on <code>AMD</code> GPUs outside my line of ",
        "id": 2497656,
        "language": null,
        "link": "https://www.reddit.com/r/docker/comments/1jsz2mv/docker_model_runner_only_available_for_desktop",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 580,
        "source_url": "https://www.reddit.com/r/docker/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Docker Model Runner: Only available for Desktop, and in beta? And AMD-ready?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-04-06T16:13:48+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;ve created a docker container with a simple mDNS server inside. Mind you, it&#39;s not a fully fledged server as Avahi - it only support A and AAAA lookups.</p> <p>So, why would you use it? Unlike Avahi, it supports multiple host names for the same IP address. All the configuration is read from /etc/hosts and gets updated automatically every time the file changes.</p> <p>In my network I use it for a poor-man&#39;s failover where I edit my hosts file to point temporarily to my backup file server while I do unspeakable things to my main server. Once done, I simply return DNS entry to it.</p> <p>You can find more details at: <a href=\"https://medo64.com/locons\">https://medo64.com/locons</a>. There are links to downloads and a related post describing it in a bit more details.</p> <p>PS: This post was made with permission from mods.</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Medo64\"> /u/Medo64 </a> <br/> <s",
        "id": 2497357,
        "language": null,
        "link": "https://www.reddit.com/r/docker/comments/1jsxqkd/slightly_different_mdns_server_container",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 580,
        "source_url": "https://www.reddit.com/r/docker/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Slightly different mDNS server container",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-04-06T16:10:22+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey all \u2014 I put together a beginner-friendly guide to Docker that I really wish I had when I started using it.<br/> For way too long, I was just copying commands, tweaking random YAML files, and praying it\u2019d work \u2014 without really <em>getting</em> what containers, images, and Dockerfiles actually are.</p> <p>So I wrote something that explains the core concepts clearly, avoids the buzzword soup, and sprinkles in memes + metaphors (because brain fog is real).</p> <p>If you\u2019ve ever copy-pasted a <code>Dockerfile</code> like it was an ancient spell and hoped for the best \u2014 this one\u2019s for you.</p> <p>No signups, no paywall, just a blog post I wrote with love (and a little self-roasting):<br/> \ud83d\udcce <a href=\"https://open.substack.com/pub/marcosdedeu/p/docker-explained-finally-understand\">https://open.substack.com/pub/marcosdedeu/p/docker-explained-finally-understand</a></p> <p>Would love feedback \u2014 or better metaphors if you\u2019ve got them. Cheers!</p> </div><!-- ",
        "id": 2497358,
        "language": null,
        "link": "https://www.reddit.com/r/docker/comments/1jsxnpy/wrote_the_beginner_docker_guide_i_needed_when_i",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 580,
        "source_url": "https://www.reddit.com/r/docker/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Wrote the beginner Docker guide I needed when I was pretending to know what I was doing",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-04-06T09:33:42+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I have the following YAML file:</p> <pre><code>services: gluetun: image: qmcgaw/gluetun:latest container_name: GluetunVPN hostname: gluetun restart: unless-stopped mem_limit: 512MB mem_reservation: 256MB cap_add: - NET_ADMIN devices: - /dev/net/tun:/dev/net/tun healthcheck: test: [&quot;CMD-SHELL&quot;, &quot;wget -q --spider https://www.google.com || exit 1&quot;] interval: 30s timeout: 10s retries: 5 start_period: 40s ports: - 6881:6881 - 6881:6881/udp - 8085:8085 # qbittorrent volumes: - /volume1/docker/qbittorrent/Gluetun:/gluetun environment: - VPN_SERVICE_PROVIDER=nordvpn - VPN_TYPE=openvpn - OPENVPN_USER=XXXX - OPENVPN_PASSWORD=XXXX - TZ=Europe/Warsaw - UPDATER_PERIOD=24h qbittorrent: image: lscr.io/linuxserver/qbittorrent:latest container_name: qBittorrent network_mode: &quot;service:gluetun&quot; restart: unless-stopped mem_limit: 1500MB mem_reservation: 1000MB depends_on: gluetun: condition: service_healthy entrypoint: [&quot;/bin/sh&quot;,",
        "id": 2495562,
        "language": null,
        "link": "https://www.reddit.com/r/docker/comments/1jsqdjb/qbittorrent",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 580,
        "source_url": "https://www.reddit.com/r/docker/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "qBittorrent",
        "vote": 0
    }
]