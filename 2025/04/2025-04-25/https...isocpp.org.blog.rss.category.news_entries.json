[
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-04-25T21:25:01.283348+00:00",
        "date_dead_since": null,
        "date_published": "2025-04-25T20:35:42+00:00",
        "description": "<p>\n\t<img alt=\"right_left_layout.png\" src=\"https://isocpp.org/files/img/right_left_layout.png\" style=\"width: 400px; margin: 10px; float: right;\" />In this article, we&rsquo;ll see details of&nbsp;<code>std::mdspan,</code>&nbsp;a new view type tailored to multidimensional data. We&rsquo;ll go through type declaration, creation techniques, and options to customize the internal functionality.</p>\n<blockquote>\n\t<h3>\n\t\t<a href=\"https://www.cppstories.com/2025/cpp23_mdspan/\">Details of <code>std::mdspan</code> from C++23</a></h3>\n\t<p>\n\t\tby Bartlomiej Filipek</p>\n</blockquote>\n<p>\n\tFrom the article:</p>\n<blockquote>\n\t<p>\n\t\tIn this article, we&rsquo;ll see details of&nbsp;<code>std::mdspan,</code>&nbsp;a new view type tailored to multidimensional data. We&rsquo;ll go through type declaration, creation techniques, and options to customize the internal functionality.</p>\n\t<p id=\"type-declaration\">\n\t\t<strong>Type declaration&nbsp;</strong></p>\n\t<p>\n\t\tThe type is declared in the following way:</p",
        "id": 2530180,
        "language": null,
        "link": "https://isocpp.org//blog/2025/04/details-of-stdmdspan-from-cpp23-bartlomiej-filipek",
        "manual_status_code": 0,
        "page_rating": 29,
        "page_rating_contents": 90,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 314,
        "source_url": "https://isocpp.org/blog/rss/category/news",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Details of std::mdspan from C++23 -- Bartlomiej Filipek",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-04-25T16:58:06.961811+00:00",
        "date_dead_since": null,
        "date_published": "2025-04-25T01:33:30+00:00",
        "description": "<p>\n\tIn this session at using std::cpp five ISO C++ committee members from 5 different national bodies enjoyed discussing with the audience about the standardization process and the future of C++.</p>\n<ul>\n\t<li>\n\t\tDaniela Engert (DIN, Germany)</li>\n\t<li>\n\t\tMichael Florian Hava (ASI, Austria).</li>\n\t<li>\n\t\tDietmar K&uuml;hl (BSI, UK).</li>\n\t<li>\n\t\tMateusz Pusz (PKN, Poland)</li>\n\t<li>\n\t\tJ. Daniel Garcia (UNE, Spain).</li>\n</ul>\n<p>\n\t&nbsp;</p>\n<p>\n\t<iframe allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"\" frameborder=\"0\" height=\"315\" referrerpolicy=\"strict-origin-when-cross-origin\" src=\"https://www.youtube.com/embed/aJ-6Ucc-520?si=Z47ekVTF7i5cHCIf\" title=\"YouTube video player\" width=\"560\"></iframe></p>",
        "id": 2528128,
        "language": null,
        "link": "https://isocpp.org//blog/2025/04/video-cpp-standardization-at-using-stdcpp-2025",
        "manual_status_code": 0,
        "page_rating": 29,
        "page_rating_contents": 90,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 314,
        "source_url": "https://isocpp.org/blog/rss/category/news",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Video: C++ standardization panel at using std::cpp 2025",
        "vote": 0
    }
]