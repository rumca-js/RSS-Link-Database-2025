[
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-04-25T23:22:26.032531+00:00",
        "date_dead_since": null,
        "date_published": "2025-04-25T22:54:06+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Guys, does anyone know if there is a docker version of wfdownloader?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Humble-Tonight1308\"> /u/Humble-Tonight1308 </a> <br/> <span><a href=\"https://www.reddit.com/r/docker/comments/1k7yaoc/wfdownloader/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/docker/comments/1k7yaoc/wfdownloader/\">[comments]</a></span>",
        "id": 2530768,
        "language": null,
        "link": "https://www.reddit.com/r/docker/comments/1k7yaoc/wfdownloader",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 580,
        "source_url": "https://www.reddit.com/r/docker/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "wfdownloader",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-04-25T23:22:26.155153+00:00",
        "date_dead_since": null,
        "date_published": "2025-04-25T22:24:28+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>In the past few months, I&#39;ve been developing an orchestration platform to improve the experience of managing Docker deployments on VMs. It operates atop the container engine and takes over orchestration. It supports GitOps and plain old apply. The engine is open sourced.</p> <p>Apart from the terminal CLI, I&#39;ve also created a sleek UI dashboard to further ease the management. Dashboard is available as an app <a href=\"https://app.simplecontainer.io\">https://app.simplecontainer.io</a> and can be used as it is. It is also possible to deploy the dashboard on-premises.</p> <p>The dashboard can be a central platform to manage operations for multiple projects. Contexts are a way to authenticate against the simplecontainer node and can be shared with other users via organizations. The manager could choose which context is shared with which organization.</p> <p>On the security side, the dashboard acts as a proxy, and no information about access is pers",
        "id": 2530769,
        "language": null,
        "link": "https://www.reddit.com/r/docker/comments/1k7xnuv/simplecontainerio",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 580,
        "source_url": "https://www.reddit.com/r/docker/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Simplecontainer.io",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-04-25T22:10:55.619009+00:00",
        "date_dead_since": null,
        "date_published": "2025-04-25T22:04:37+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>This is my <code>Dockerfile</code>:</p> <p>``` FROM gradle:8.13.0-jdk21 AS build</p> <p>WORKDIR /opt/app</p> <p>COPY build.gradle.kts settings.gradle.kts gradle.properties gradle .gradle ./</p> <p>RUN gradle dependencies</p> <p>COPY src gradlew ./</p> <p>RUN gradle buildFatJar</p> <p>FROM eclipse-temurin:21-alpine</p> <p>WORKDIR /opt/app</p> <p>COPY --from=build /opt/app/build/libs/journai-server-all.jar journai-server.jar</p> <p>EXPOSE 8080</p> <p>ENTRYPOINT [&quot;java&quot;, &quot;-jar&quot;, &quot;journai-server.jar&quot;] ```</p> <p>This is my <code>docker-compose.yml</code>: <code> services: journai: build: context: . ports: - &quot;8080:8080&quot; env_file: - .env.dev - .env volumes: - ~/.gradle:/root/.gradle depends_on: postgres: condition: service_healthy keydb: condition: service_healthy mailhog: condition: service_started </code></p> <p>My goal is to mount ~/.gradle from the host system to /root/.gradle during the build stage when I run <co",
        "id": 2530332,
        "language": null,
        "link": "https://www.reddit.com/r/docker/comments/1k7x8ip/mount_directory_outside_of_project_root_during",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 580,
        "source_url": "https://www.reddit.com/r/docker/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Mount directory outside of project root during build stage",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-04-25T22:10:55.741155+00:00",
        "date_dead_since": null,
        "date_published": "2025-04-25T21:54:54+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I &#39;m building a platform where users run Python trading bots. Each strategy runs in its own Docker container - with 10 users having 3 strategies each, that means 30 containers running simultaneously. Is it the right approach?</p> <p>Frontend: React<br/> Backend: Python<br/> <strong>some Issues:</strong></p> <ul> <li>When user clicks to stop all strategies then system lags because I&#39;m closing all dockers for that user</li> <li>I&#39;m fetching balances and other info after each 30 seconds so web seems slow</li> </ul> <p><strong>What&#39;s the best approach to scale this to 500+ users?</strong> Should I completely rethink the architecture?</p> <p>Any advice from those who&#39;ve built similar systems would be greatly appreciated!</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Humza0000\"> /u/Humza0000 </a> <br/> <span><a href=\"https://www.reddit.com/r/docker/comments/1k7x0mf/docker_trading_bots_scaling_issu",
        "id": 2530333,
        "language": null,
        "link": "https://www.reddit.com/r/docker/comments/1k7x0mf/docker_trading_bots_scaling_issues",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 580,
        "source_url": "https://www.reddit.com/r/docker/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Docker Trading Bots Scaling Issues",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-04-25T22:10:55.862643+00:00",
        "date_dead_since": null,
        "date_published": "2025-04-25T21:44:23+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Trying to deploy <a href=\"https://github.com/MDeLuise/plant-it\">plant-it </a>via docker compose on Unraid since it isn&#39;t available in the Community Apps and I&#39;m having a heck of a time getting it right.</p> <p>Can I get some help putting one together so I can launch the WebUI on port 192.XXX.XX.XXX:4569?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/GoofyGills\"> /u/GoofyGills </a> <br/> <span><a href=\"https://www.reddit.com/r/docker/comments/1k7ws6a/docker_compose_for_plantit/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/docker/comments/1k7ws6a/docker_compose_for_plantit/\">[comments]</a></span>",
        "id": 2530334,
        "language": null,
        "link": "https://www.reddit.com/r/docker/comments/1k7ws6a/docker_compose_for_plantit",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 580,
        "source_url": "https://www.reddit.com/r/docker/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Docker compose for plant-it",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-04-25T21:04:24.197512+00:00",
        "date_dead_since": null,
        "date_published": "2025-04-25T21:03:21+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I&#39;m coming from a comp-sci background so I guess ELI15, but that&#39;s less catchy; I&#39;m new to network infrastructure but I&#39;ve recently taken the undertaking of figuring out how to run an icecast server on a Thinkpad I got for free.</p> <p>Based on my intuition and knowledge, since the service is running and broadcasting on certain ports, those ports cannot be used for another service, which is why most homelabs have like 50 raspberry pis in them. To my understanding, a container solves this issue by giving each program its own environment without having to virtualize an entire OS. What I&#39;m wondering now is, *how* does that solve the problem? Do containers have their own IPs?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/IChawt\"> /u/IChawt </a> <br/> <span><a href=\"https://www.reddit.com/r/docker/comments/1k7vtqk/eli5_what_exactly_are_containers_why_are_they/\">[link]</a></span> &#32; <span><a hr",
        "id": 2529840,
        "language": null,
        "link": "https://www.reddit.com/r/docker/comments/1k7vtqk/eli5_what_exactly_are_containers_why_are_they",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 580,
        "source_url": "https://www.reddit.com/r/docker/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "ELI5: What exactly are containers? Why are they necessary?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-04-25T15:39:24.455351+00:00",
        "date_dead_since": null,
        "date_published": "2025-04-25T15:32:06+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Looking to the community for help if possible.<br/> I keep going in circles and believe it shouldn&#39;t be this hard...</p> <p><strong>Overview:</strong><br/> I&#39;m trying to get a basic Data/BI stack up where Metabase can be the BI data visualizer, and postgres would be the database. AirByte would be used for ETL to get data from (starting with a csv for proof of concept, but eventually salesforce api) point A into the postgres database.</p> <p><strong>Current State:</strong><br/> After a bumpy start I was able to get all the main services up and running, but now I&#39;m stuck at the point of setting up the postgres Destination in AirByte. In fact even the local sqlite isnt working.</p> <p><strong>Additional Info:</strong><br/> I&#39;m using Dockge to deploy, lots of other stacks in Dockge (working fine). I&#39;ve been using Docker for ~3-6 months.</p> <p>Thank you to anyone who can help!!! </p> <pre><code>version: &quot;3.8&quot; services: postgr",
        "id": 2527265,
        "language": null,
        "link": "https://www.reddit.com/r/docker/comments/1k7nv1b/calling_all_docker_experts",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 580,
        "source_url": "https://www.reddit.com/r/docker/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Calling all Docker 'EXPERTS' \ud83d\ude4f",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-04-25T14:32:36.470886+00:00",
        "date_dead_since": null,
        "date_published": "2025-04-25T12:49:11+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hello,</p> <p>So I currently stuck on this issue for the past couple of hours. I have a linux server with my MongoDB database running inside of a docker container - 0.0.0.0:27017-&gt;27017/tcp. I am able to connect it from the outside of the vps itself. But the issue is that I am running another docker container trying to connect to the MongoDB server on the same vps and it results in this error.</p> <p>For the mongo uri string I tried the following<br/> mongodb://username:<a href=\"mailto:password@127.0.0.1\">password@127.0.0.1</a>:27017<br/> mongodb://username:<a href=\"mailto:password@0.0.0.0\">password@0.0.0.0</a>:27017<br/> mongodb://username:password@localhost:27017<br/> mongodb://username:password@ipaddress:27017</p> <p>For the ufw rules itself, I added the vps\u2019s IP addresses, <a href=\"http://127.0.0.1\">127.0.0.1</a> to allow connection to port 27017, but no matter what I keep running into the same issue.</p> <pre><code>Error connecting to MongoDB:",
        "id": 2526410,
        "language": null,
        "link": "https://www.reddit.com/r/docker/comments/1k7k3zm/docker_containers_mongooseserverselectionerror",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 580,
        "source_url": "https://www.reddit.com/r/docker/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Docker containers: MongooseServerSelectionError: connect ECONNREFUSED 127.0.0.1:27017",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-04-25T11:19:11.134781+00:00",
        "date_dead_since": null,
        "date_published": "2025-04-25T11:01:46+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hi. I currently have a Plex server running on Windows. Windows is poop and reboots at random despite changes to the registry, group policies and settings in Windows 10.</p> <p>It&#39;s not a big problem, because I have installed a service that starts and runs Plex before login. As long as my server reboots I don&#39;t notice much.</p> <p>However, I want to run Linux Mint with Plex in docker.</p> <p>Am I overthinking this? I assume Linux will reboot at random, but does it? Can docker images be configured to start before signing in to the OS?</p> <p>Thanks </p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/naggert\"> /u/naggert </a> <br/> <span><a href=\"https://www.reddit.com/r/docker/comments/1k7i4ts/docker_on_linux_autostart_after_reboot/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/docker/comments/1k7i4ts/docker_on_linux_autostart_after_reboot/\">[comments]</a></span>",
        "id": 2525236,
        "language": null,
        "link": "https://www.reddit.com/r/docker/comments/1k7i4ts/docker_on_linux_autostart_after_reboot",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 580,
        "source_url": "https://www.reddit.com/r/docker/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Docker on Linux - autostart after reboot",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-04-25T14:32:36.623579+00:00",
        "date_dead_since": null,
        "date_published": "2025-04-25T10:52:51+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>i have docker-compose:</p> <pre><code>version: &#39;3.8&#39; services: postgres: container_name: postgres image: postgres environment: - POSTGRES_USER=postgres - POSTGRES_PASSWORD=postgres - PGDATA=/var/lib/postgresql/data ports: - 5432:5432 networks: - microservice-network volumes: - postgres:/var/lib/postgresql/data restart: always pgadmin: container_name: pgadmin image: dpage/pgadmin4 environment: - PGADMIN_DEFAULT_EMAIL=pgadmin@pgadmin.org - PGADMIN_DEFAULT_PASSWORD=pgadmin - PGADMIN_CONFIG_SERVER_MODE=False volumes: - pgadmin:/pgadmin ports: - 5050:80 networks: - microservice-network restart: always mongo: container_name: mongo image: mongo:latest ports: - 27018:27017 networks: - microservice-network environment: - MONGO_INITDB_ROOT_USERNAME=admin - MONGO_INITDB_ROOT_PASSWORD=password volumes: - mongodb:/data/db restart: always healthcheck: test: echo &#39;db.runCommand(&quot;ping&quot;).ok&#39; | mongosh mongodb://admin:password@localhost:27017/",
        "id": 2526411,
        "language": null,
        "link": "https://www.reddit.com/r/docker/comments/1k7hzia/cannot_connect_localhost_mongodb",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 580,
        "source_url": "https://www.reddit.com/r/docker/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Cannot connect localhost mongodb",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-04-25T10:14:08.375958+00:00",
        "date_dead_since": null,
        "date_published": "2025-04-25T09:17:53+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Until recently I ran individual Docker containers on one of my servers. I had a script which would check for updates to the corresponding images by running <code>docker pull</code> and then rebuild the containers accordingly if it detected anything other than &quot;Image is up to date&quot; in the output.</p> <p>Now I&#39;ve recreated the containers using a Docker Compose file in order to define certain healthchecks and set dependencies. I&#39;ve noticed that the <code>docker compose</code> command has a <code>pull</code> sub-command of its own. However the output is a bit different from what I expected, it doesn&#39;t explicitly tell me if the image is already up-to-date the way that <code>docker pull</code> does.</p> <p>Is it OK to still use <code>docker pull</code> for these images in order for my existing update script to work, or is there a good reason to switch to the <code>docker compose pull</code> command instead?</p> </div><!-- SC_ON --> &#3",
        "id": 2524735,
        "language": null,
        "link": "https://www.reddit.com/r/docker/comments/1k7gkny/using_docker_pull_but_with_a_compose_stack",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 580,
        "source_url": "https://www.reddit.com/r/docker/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Using 'docker pull', but with a compose stack?",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-04-25T06:59:06.942841+00:00",
        "date_dead_since": null,
        "date_published": "2025-04-25T06:46:27+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I am trying to utilize more than the 1TB limit that docker desktop specifies (bottom of UI). I cant seem to get around this limit despite changing it to 2TB in the wsl settings. It looks like this was added here. <a href=\"https://www.docker.com/blog/docker-desktop-4-37/#:%5C%7E:text=Default%20disk%20usage%20limit%3A%20New,developers%20with%20large%20containerized%20applications\">https://www.docker.com/blog/docker-desktop-4-37/#:\\~:text=Default%20disk%20usage%20limit%3A%20New,developers%20with%20large%20containerized%20applications</a>.</p> <p>How do I increase this?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Stevecaboose\"> /u/Stevecaboose </a> <br/> <span><a href=\"https://www.reddit.com/r/docker/comments/1k7ehtj/increase_1tb_limit_in_docker_desktop/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/docker/comments/1k7ehtj/increase_1tb_limit_in_docker_desktop/\">[comments]</a></span>",
        "id": 11499,
        "language": null,
        "link": "https://www.reddit.com/r/docker/comments/1k7ehtj/increase_1tb_limit_in_docker_desktop",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 580,
        "source_url": "https://www.reddit.com/r/docker/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Increase 1TB limit in docker desktop",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-04-25T05:54:07.034736+00:00",
        "date_dead_since": null,
        "date_published": "2025-04-25T05:35:38+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>alguien tendra alguna guia para instalar y trabajar con docker y opendds?</p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/BigDay1086\"> /u/BigDay1086 </a> <br/> <span><a href=\"https://www.reddit.com/r/docker/comments/1k7dfj3/instalar_opendds_en_docker/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/docker/comments/1k7dfj3/instalar_opendds_en_docker/\">[comments]</a></span>",
        "id": 11226,
        "language": null,
        "link": "https://www.reddit.com/r/docker/comments/1k7dfj3/instalar_opendds_en_docker",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 580,
        "source_url": "https://www.reddit.com/r/docker/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "instalar Opendds en docker",
        "vote": 0
    }
]