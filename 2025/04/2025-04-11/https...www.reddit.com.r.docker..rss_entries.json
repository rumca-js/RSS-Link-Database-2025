[
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-04-11T19:36:41+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I am trying include apt in an existing pihole docker image, it doesn\u2019t include apt or dpkg and so I can\u2019t install anything. Can I call a Dockerfile from my Docker compose to add and install the relevant packages?</p> <p>I currently have this in my dockerfile:</p> <p><code>FROM debian:latest</code></p> <p><code>RUN apt-get update &amp;&amp; apt-get install -y apt</code></p> <p><code>RUN apt-get update &amp;&amp; apt-get install -y apt &amp;&amp; rm -rf /var/lib/apt/lists/*</code></p> <p>And the start of my compose is like this:</p> <p><code>services:</code> </p> <p><code>pihole:</code> </p> <p><code>container_name: pihole</code> </p> <p><code>image: pihole/pihole:latest ports:</code></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Illustrious-Door2846\"> /u/Illustrious-Door2846 </a> <br/> <span><a href=\"https://www.reddit.com/r/docker/comments/1jwyjgu/add_packages_to_existing_image/\">[link]</a></span> &#32; <span>",
        "id": 2538165,
        "language": null,
        "link": "https://www.reddit.com/r/docker/comments/1jwyjgu/add_packages_to_existing_image",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 580,
        "source_url": "https://www.reddit.com/r/docker/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Add packages to existing Image",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-04-11T14:19:23+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>My aim is to have a Apache/PHP service running in Docker that has Oracle OCI8 and MYSQLI enabled.</p> <p>The host is Oracle Linux 8.</p> <p>After much searching I found the image <code>paliari/apache-php8-oci8:1.2.0-dev</code>.</p> <p>I found that having set of <code>docker</code> commands directly worked better than a <code>Dockerfile</code> approach, so this is what I scripted.</p> <pre><code># Show Docker COntainers docker ps # Disbale local HTTPS systemctl disable httpd # Start Container docker stop admhttp docker remove admhttp sleep 3 docker ps ## try with --net=host I lose the port mappings ####docker run --name admhttp --restart always --net=host -v /home/u02:/home/u02 -p 8020:8020 -d paliari/apache-php8-oci8:1.2.0-dev docker run --name admhttp --restart always -v /home/u02:/home/u02 -v /home/docker/apache_log:/var/log/apache -p 8020:8020 -d paliari/apache-php8-oci8:1.2.0-dev docker ps sleep 3 # Copy HTTP Configs to container #docker stop adm",
        "id": 2536670,
        "language": null,
        "link": "https://www.reddit.com/r/docker/comments/1jwr0mv/how_to_get_a_docker_container_to_access_a_service",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 580,
        "source_url": "https://www.reddit.com/r/docker/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "How to get a docker container to access a service hosted on another server on the host network.",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-04-11T13:05:21+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>I followed the instructions here: <a href=\"https://rclone.org/docker/\">https://rclone.org/docker/</a></p> <p>sudo mkdir -p /var/lib/docker-plugins/rclone/config<br/> sudo mkdir -p /var/lib/docker-plugins/rclone/cache<br/> sudo docker plugin install rclone/docker-volume-rclone:amd64 args=&quot;-v&quot; --alias rclone --grant-all-permission </p> <p>created /var/lib/docker-plugins/rclone/config/rclone.conf</p> <pre><code>[dellboy_local_encrypted_folder] type = crypt remote = localdrive:/mnt/Four_TB_Array/encrypted password = redacted password2 = redacted [localdrive] type = local </code></pre> <p>tested the rclone.conf:</p> <p><code>rclone --config /var/lib/docker-plugins/rclone/config/rclone.conf lsf -vv dellboy_local_encrypted_folder:</code></p> <p>which showed me a dir listing</p> <p>made a compose.yml (pertinent snippet):</p> <pre><code> volumes: - /etc/localtime:/etc/localtime:ro - ./config:/root/config - configdata:/data - ./metadata:/metadata - .",
        "id": 2537249,
        "language": null,
        "link": "https://www.reddit.com/r/docker/comments/1jwpdv0/troubleshooting_rclone_serve_docker",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 580,
        "source_url": "https://www.reddit.com/r/docker/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Troubleshooting rclone serve docker",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_dead_since": null,
        "date_published": "2025-04-11T07:53:42+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>So I am trying to build a really small docker image, where I can run my java codes with latest version. I have tried with ubuntu, but I really want to play with alpine.</p> <p>So I wrote the following <code>Dockerfile</code>: ``` FROM alpine:20250108</p> <p>COPY jdk-22.0.1_linux-x64_bin.tar.gz /tmp/ RUN mkdir -p /usr/lib/jvm/java-22 &amp;&amp; \\ tar -xzf /tmp/jdk-22.0.1_linux-x64_bin.tar.gz -C /usr/lib/jvm/java-22 --strip-components=1 &amp;&amp; \\ chmod -R +x /usr/lib/jvm/java-22/bin &amp;&amp; \\ rm /tmp/jdk-22.0.1_linux-x64_bin.tar.gz</p> <p>ENV JAVA_HOME=/usr/lib/jvm/java-22 ENV PATH=&quot;${JAVA_HOME}/bin/:${PATH}&quot;</p> <p>WORKDIR /app COPY Main.java .</p> <p>RUN java --version</p> <h1>it fails here on this line</h1> <p>CMD [&quot;java&quot;, &quot;Main.java&quot;] ``` But the thing is, I can&#39;t add Java to path correctly.</p> <p>I have tried like everything - <code>glibc@2.35-r1</code> - writing to <code>/etc/profile</code> - writing to <c",
        "id": 2537250,
        "language": null,
        "link": "https://www.reddit.com/r/docker/comments/1jwkhsj/cant_add_java_to_system_path_in_dockerized_alpine",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 580,
        "source_url": "https://www.reddit.com/r/docker/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Can't add Java to system path in Dockerized Alpine Linux",
        "vote": 0
    }
]