[
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-04-28T18:38:06.262259+00:00",
        "date_dead_since": null,
        "date_published": "2025-04-28T18:23:11+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>You can now use <strong>Docker</strong> as a local model provider inside VSCode, JetBrains, Cursor, and soon Visual Studio Enterprise.</p> <p>With <strong>Docker Model Runner</strong> (v4.40+), you can run AI models <em>locally</em> on your machine \u2014 no data sharing, no cloud dependency. Just you and your models. \ud83d\udc4f</p> <p><strong>How to get started:</strong></p> <ul> <li>Update Docker to the latest version (4.40+)</li> <li>Open CodeGPT</li> <li>Pick a model</li> <li>Click &quot;Download&quot; and you&#39;re good to go!</li> </ul> <p>More info and full tutorial here: <a href=\"https://docs.codegpt.co/docs/tutorial-ai-providers/docker\">https://docs.codegpt.co/docs/tutorial-ai-providers/docker</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Confident_Law_531\"> /u/Confident_Law_531 </a> <br/> <span><a href=\"https://www.reddit.com/r/docker/comments/1ka2nz5/run_ai_models_locally_with_docker_codegpt_in/\">[link]</a></",
        "id": 2549447,
        "language": null,
        "link": "https://www.reddit.com/r/docker/comments/1ka2nz5/run_ai_models_locally_with_docker_codegpt_in",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 580,
        "source_url": "https://www.reddit.com/r/docker/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Run AI Models Locally with Docker + CodeGPT in VSCode! \ud83d\udc33\ud83e\udd2f",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-04-28T18:38:06.419723+00:00",
        "date_dead_since": null,
        "date_published": "2025-04-28T17:50:10+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Maintainer: tabletseeker</p> <p>Description: A working update of the popular terminal tool ytfzf for searching and watching Youtube videos without ads or privacy concerns, but with the convenience of a docker container.</p> <p>Github: <a href=\"https://github.com/tabletseeker/ytfzf_prime\">https://github.com/tabletseeker/ytfzf_prime</a></p> <p>Docker: <a href=\"https://hub.docker.com/r/tabletseeker/ytfzf_prime/tags\">https://hub.docker.com/r/tabletseeker/ytfzf_prime/tags</a></p> </div><!-- SC_ON --> &#32; submitted by &#32; <a href=\"https://www.reddit.com/user/Metro-Sperg-Services\"> /u/Metro-Sperg-Services </a> <br/> <span><a href=\"https://www.reddit.com/r/docker/comments/1ka1u93/ytfzf_prime_updateddockerized_fork_of_ytfzf/\">[link]</a></span> &#32; <span><a href=\"https://www.reddit.com/r/docker/comments/1ka1u93/ytfzf_prime_updateddockerized_fork_of_ytfzf/\">[comments]</a></span>",
        "id": 2549448,
        "language": null,
        "link": "https://www.reddit.com/r/docker/comments/1ka1u93/ytfzf_prime_updateddockerized_fork_of_ytfzf",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 580,
        "source_url": "https://www.reddit.com/r/docker/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "ytfzf_prime (Updated.dockerized fork of ytfzf) - {search, watch, download from } youtube without leaving the terminal, without ads, cookies or privacy concerns, but with working maxres thumbnail display and full docker implementation",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-04-28T18:38:06.133093+00:00",
        "date_dead_since": null,
        "date_published": "2025-04-28T17:34:41+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>Hey folks, I am new to docker, but have an ok tech background. After my initial compose file configuration that will run, if I make ANY change, I get the errors below. Specifically, any change to this working config generates the errors below:</p> <pre><code> plex: image: lscr.io/linuxserver/plex:latest container_name: plex volumes: - /mnt/data/media:/data/media - ./config/plex:/config devices: - &quot;/dev/dri:/dev/dri&quot; environment: - PUID=1000 - PGID=1000 - version=docker ports: - 32400:32400 restart: unless-stopped </code></pre> <p>Config changes that generated the errors below: Adding environment variable - PLEX_CLAIM=claimXXXXXX. This is part of the linuxserver&#39;s image documentation Removing the &quot;devices:&quot; and &quot;- &quot;/dev/dri:/dev/dri&quot;&quot; lines as those are optional Trying to add any configuration to get my Plex server to use my GPU for HW transcoding, this is my ultimate goal. There were other things I tried, bu",
        "id": 2549446,
        "language": null,
        "link": "https://www.reddit.com/r/docker/comments/1ka1g75/errors_after_any_docker_compose_file_edit",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 580,
        "source_url": "https://www.reddit.com/r/docker/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Errors after any docker compose file edit",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-04-28T14:53:05.209850+00:00",
        "date_dead_since": null,
        "date_published": "2025-04-28T14:42:37+00:00",
        "description": "<!-- SC_OFF --><div class=\"md\"><p>We run Azure DevOps Server and a Linux build agent on-prem. The agent has a docker-in-docker style setup for when apps need to be built via Dockerfile.</p> <p>For dotnet apps, there&#39;s a Microsoft base image for different versions of dotnet (6, 7, 8, etc). While building, there&#39;s a need to reach an internal package server to pull in some of our own packages, let&#39;s call it <a href=\"https://nexus.dev.local\">https://nexus.dev.local</a>.</p> <p>During the build, the process complains that it can&#39;t verify the certificate of the site, which is normal; the cert is our own. If I ADD the cert in the Dockerfile, it works fine, but I don&#39;t like this approach.</p> <p>The cert will eventually expire and need to be replaced, it&#39;s unnecessary boilerplate bloating every Dockerfile with the two lines. I&#39;m sure there&#39;s a smarter way to do it.</p> <p>I thought about having a company base image that has the cert baked in, but that still nee",
        "id": 2547305,
        "language": null,
        "link": "https://www.reddit.com/r/docker/comments/1k9x8f2/making_company_certificate_available_in_a",
        "manual_status_code": 0,
        "page_rating": 27,
        "page_rating_contents": 85,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 580,
        "source_url": "https://www.reddit.com/r/docker/.rss",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Making company certificate available in a container for accessing internal resources?",
        "vote": 0
    }
]