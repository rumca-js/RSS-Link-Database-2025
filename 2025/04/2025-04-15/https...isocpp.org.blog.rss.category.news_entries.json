[
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-04-15T20:42:46.560735+00:00",
        "date_dead_since": null,
        "date_published": "2025-04-15T20:12:16+00:00",
        "description": "<p>\n\t<img alt=\"RaymondChen_5in-150x150.jpg\" src=\"https://isocpp.org/files/img/RaymondChen_5in-150x150.jpg\" style=\"width: 150px; margin: 10px; float: right;\" />Last time, our generic insertion iterator failed to meet the requirements of default constructibility and assignability because it stored the lambda directly. To fix this, we now store a pointer to the lambda instead, ensuring the iterator meets standard requirements while still allowing flexible insertion logic.</p>\n<blockquote>\n\t<h3>\n\t\t<a href=\"https://devblogs.microsoft.com/oldnewthing/20250131-00/?p=110823\">Creating a Generic Insertion Iterator, Part 2</a></h3>\n\t<p>\n\t\tby Raymond Chen</p>\n</blockquote>\n<p>\n\tFrom the article:</p>\n<blockquote>\n\t<p>\n\t\tLast time,&nbsp;<a href=\"https://devblogs.microsoft.com/oldnewthing/20250130-00/?p=110820\" title=\"Creating a generic insertion iterator, part 1\">we tried to create a generic insertion iterator</a>&nbsp;but ran into trouble because our iterator failed to satisfy the iterator require",
        "id": 2565321,
        "language": null,
        "link": "https://isocpp.org//blog/2025/04/creating-a-generic-insertion-iterator-part-2-raymond-chen",
        "manual_status_code": 0,
        "page_rating": 29,
        "page_rating_contents": 90,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 314,
        "source_url": "https://isocpp.org/blog/rss/category/news",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Creating a Generic Insertion Iterator, Part 2 -- Raymond Chen",
        "vote": 0
    },
    {
        "age": null,
        "album": "",
        "author": null,
        "bookmarked": false,
        "comments": [],
        "date_created": "2025-04-15T16:00:09.904305+00:00",
        "date_dead_since": null,
        "date_published": "2025-04-15T14:47:34+00:00",
        "description": "<p>\n\tMeeting C++ is looking for C++ Employers, as it starts a <a href=\"https://www.linkedin.com/newsletters/meeting-c-jobs-newsletter-7306026728714305537/\">C++ Jobs Newsletter</a> and hosts an online C++ Job fair in May!</p>\n<blockquote>\n\t<h2>\n\t\t<a href=\"https://meetingcpp.com/meetingcpp/news/items/Looking-for-Employers-for-the-Job-Fair-and-the-Jobs-Newsletter.html\">Looking for Employers for the C++ Job Fair and the C++ Jobs Newsletter</a></h2>\n\t<p>\n\t\tby Jens Weller</p>\n</blockquote>\n<p>\n\tFrom the article:</p>\n<blockquote>\n\t<p>\n\t\tMeeting C++ launches a new jobs newsletter! <a href=\"https://meetingcpp.com/mcpp/recruiting/jobsubmission.php\">Share your open positions</a>!</p>\n\t<p>\n\t\tThe jobs newsletter already has 1500+ subscribers and aims at a bi-weekly schedule, with sometimes being weekly when lots of jobs are submitted. Once a month Meeting C++ will also send the jobs newsletter on its main newsletter with 25k+ subscribers in 2025. So your open positions will be seen by lots of expe",
        "id": 2562330,
        "language": null,
        "link": "https://isocpp.org//blog/2025/04/looking-for-employers-for-the-meeting-cpp-job-fair-and-the-c-jobs-newslette",
        "manual_status_code": 0,
        "page_rating": 29,
        "page_rating_contents": 90,
        "page_rating_visits": 0,
        "page_rating_votes": 0,
        "permanent": false,
        "source__id": 314,
        "source_url": "https://isocpp.org/blog/rss/category/news",
        "status_code": 0,
        "tags": [],
        "thumbnail": null,
        "title": "Looking for Employers for the Meeting C++ Job Fair and the C++ Jobs Newsletter",
        "vote": 0
    }
]